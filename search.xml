<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[DataUtils工具类优化]]></title>
      <url>http://tungsing.cc/2019/03/22/java/date-util/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>之前就看资料说SimpleDateFormat是线程不安全的，正好框架里面有自己的DataUtils类，正好优化并学习一下</p>
</blockquote>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>jdk1.7</p>
<a id="more"></a>
<h4 id="测试框架中代码"><a href="#测试框架中代码" class="headerlink" title="测试框架中代码"></a>测试框架中代码</h4><p>开20个线程去格式日期<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</div><div class="line">    ExecutorService service = Executors.newFixedThreadPool(<span class="number">100</span>);</div><div class="line">    <span class="comment">// 开启20个线程</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</div><div class="line">        service.execute(<span class="keyword">new</span> Runnable() &#123;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</div><div class="line">                    System.out.println(DateUtils.parseDate(<span class="string">"2019-03-22 10:03:25"</span>));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    service.shutdown();</div><div class="line">    service.awaitTermination(<span class="number">1</span>, TimeUnit.DAYS);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div></pre></td><td class="code"><pre><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Sun Mar 01 10:03:25 CST 1970</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">java.lang.NumberFormatException: For input string: &quot;33E&quot;</div><div class="line">    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)</div><div class="line">    at java.lang.Long.parseLong(Long.java:419)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at java.lang.Long.parseLong(Long.java:468)Thu Jan 01 00:03:25 CST 1970</div><div class="line"></div><div class="line">    at java.text.DigitList.getLong(DigitList.java:177)</div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1297)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1934)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)</div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">Fri Mar 22 10:03:25 CST 2019    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line"></div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line">Fri Mar 22 10:03:25 CST 2019    at java.lang.Thread.run(Thread.java:662)</div><div class="line"></div><div class="line">null</div><div class="line">java.lang.NumberFormatException: For input string: &quot;&quot;Tue Jan 01 00:03:25 CST 2019</div><div class="line"></div><div class="line">    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)Thu Jan 22 10:03:25 CST 1970</div><div class="line"></div><div class="line">    at java.lang.Long.parseLong(Long.java:431)</div><div class="line">Wed Dec 31 00:00:00 CST 1969</div><div class="line">    at java.lang.Long.parseLong(Long.java:468)</div><div class="line">    at java.text.DigitList.getLong(DigitList.java:177)</div><div class="line">Tue Jan 01 00:03:25 CST 2019</div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1297)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1589)</div><div class="line">Tue Jan 01 00:03:25 CST 2019</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)Thu Jan 22 00:00:25 CST 1970</div><div class="line"></div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line">Tue Jan 01 00:00:25 CST 2019    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line"></div><div class="line">Thu Jan 01 00:44:40 CST 1970</div><div class="line">    at java.lang.Thread.run(Thread.java:662)</div><div class="line">Tue Jan 01 03:03:25 CST 2019</div><div class="line">nulljava.lang.NumberFormatException: For input string: &quot;&quot;</div><div class="line"></div><div class="line">    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)</div><div class="line">    at java.lang.Long.parseLong(Long.java:431)</div><div class="line">Thu Jan 01 00:00:25 CST 1970</div><div class="line">    at java.lang.Long.parseLong(Long.java:468)</div><div class="line">    at java.text.DigitList.getLong(DigitList.java:177)</div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1297)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1589)</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line">    at java.lang.Thread.run(Thread.java:662)</div><div class="line">java.lang.NumberFormatException: multiple pointsnull</div><div class="line"></div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1082)</div><div class="line">    at java.lang.Double.parseDouble(Double.java:510)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at java.text.DigitList.getDouble(DigitList.java:151)</div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1302)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1934)</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">Thu Jul 10 10:03:25 CST 5881580</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)</div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line">    at java.lang.Thread.run(Thread.java:662)</div><div class="line">null</div><div class="line">java.lang.NumberFormatException: multiple points</div><div class="line">Fri Mar 22 10:03:25 CST 2019    at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1082)</div><div class="line"></div><div class="line">    at java.lang.Double.parseDouble(Double.java:510)</div><div class="line">    at java.text.DigitList.getDouble(DigitList.java:151)Fri Mar 22 10:03:25 CST 2019</div><div class="line"></div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1302)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1934)</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line"></div><div class="line">......</div><div class="line"></div><div class="line">java.lang.NumberFormatException: For input string: &quot;1.01&quot;</div><div class="line">    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)</div><div class="line">    at java.lang.Long.parseLong(Long.java:419)</div><div class="line">    at java.lang.Long.parseLong(Long.java:468)</div><div class="line">    at java.text.DigitList.getLong(DigitList.java:177)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1297)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1934)</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)</div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line">    at java.lang.Thread.run(Thread.java:662)</div><div class="line">null</div><div class="line">java.lang.NumberFormatException: For input string: &quot;&quot;</div><div class="line">    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)</div><div class="line">    at java.lang.Long.parseLong(Long.java:431)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at java.lang.Long.parseLong(Long.java:468)</div><div class="line">    at java.text.DigitList.getLong(DigitList.java:177)</div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1297)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1934)</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line">    at java.lang.Thread.run(Thread.java:662)</div><div class="line">null</div><div class="line">java.lang.NumberFormatException: For input string: &quot;&quot;</div><div class="line">    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)</div><div class="line">    at java.lang.Long.parseLong(Long.java:431)</div><div class="line">    at java.lang.Long.parseLong(Long.java:468)</div><div class="line">    at java.text.DigitList.getLong(DigitList.java:177)</div><div class="line">    at java.text.DecimalFormat.parse(DecimalFormat.java:1297)</div><div class="line">    at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1589)</div><div class="line">    at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1311)</div><div class="line">    at java.text.DateFormat.parse(DateFormat.java:335)</div><div class="line">    at com.resoft.original.framework.common.OriginalDateUtils.parseDate(OriginalDateUtils.java:275)</div><div class="line">    at com.resoft.original.framework.common.Test$1.run(Test.java:35)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</div><div class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</div><div class="line">    at java.lang.Thread.run(Thread.java:662)</div><div class="line">null</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div></pre></td></tr></table></figure></p>
<p>分析错误日志有如下错误</p>
<ul>
<li>会出现日期不对的情况</li>
<li>java.lang.NumberFormatException: For input string xxx</li>
<li>java.lang.NumberFormatException: multiple points</li>
</ul>
<h4 id="错误原因分析"><a href="#错误原因分析" class="headerlink" title="错误原因分析"></a>错误原因分析</h4><p>首先看代码是如何写的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;DateFormat, SimpleDateFormat&gt; dateFormaters = <span class="keyword">new</span> HashMap&lt;DateFormat, SimpleDateFormat&gt;(<span class="number">3</span>, <span class="number">0.2f</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SimpleDateFormat <span class="title">getDateFormater</span><span class="params">(DateFormat format)</span> </span>&#123;</div><div class="line">    SimpleDateFormat dateFormater = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((dateFormater = dateFormaters.get(format)) == <span class="keyword">null</span>) &#123;</div><div class="line">        dateFormater = <span class="keyword">new</span> SimpleDateFormat(format.format);</div><div class="line">        dateFormaters.put(format, dateFormater);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> dateFormater;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> java.util.<span class="function">Date <span class="title">parseDate</span><span class="params">(String dateStr)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> getDateFormater(DateFormat.YMDHMS_HYPHEN).parse(</div><div class="line">                            dateStr);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>DateFormat</strong>是枚举，定义了各种日期格式<br>代码本质还是获取一个 <strong>静态</strong> 的 <strong>SimpleDateFormat</strong> 对象，引入Map是为了提高效率。<br>那么在多线程的情况下SimpleDateFormat对象实例就会 <strong>被多个线程共享</strong> ，通过看源码找原因<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line">public Date parse(String text, ParsePosition pos) &#123;</div><div class="line"></div><div class="line">    checkNegativeNumberExpression();</div><div class="line"></div><div class="line">    int start = pos.index;</div><div class="line">    int oldStart = start;</div><div class="line">    int textLength = text.length();</div><div class="line"></div><div class="line">    calendar.clear(); // Clears all the time fields</div><div class="line"></div><div class="line">    boolean[] ambiguousYear = &#123; false &#125;;</div><div class="line"></div><div class="line">    for (int i = 0; i &lt; compiledPattern.length;) &#123;</div><div class="line">        int tag = compiledPattern[i] &gt;&gt;&gt; 8;</div><div class="line">        int count = compiledPattern[i++] &amp; 0xff;</div><div class="line">        if (count == 255) &#123;</div><div class="line">            count = compiledPattern[i++] &lt;&lt; 16;</div><div class="line">            count |= compiledPattern[i++];</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        switch (tag) &#123;</div><div class="line">        case TAG_QUOTE_ASCII_CHAR:</div><div class="line">            if (start &gt;= textLength || text.charAt(start) != (char) count) &#123;</div><div class="line">                pos.index = oldStart;</div><div class="line">                pos.errorIndex = start;</div><div class="line">                return null;</div><div class="line">            &#125;</div><div class="line">            start++;</div><div class="line">            break;</div><div class="line"></div><div class="line">        case TAG_QUOTE_CHARS:</div><div class="line">            while (count-- &gt; 0) &#123;</div><div class="line">                if (start &gt;= textLength || text.charAt(start) != compiledPattern[i++]) &#123;</div><div class="line">                    pos.index = oldStart;</div><div class="line">                    pos.errorIndex = start;</div><div class="line">                    return null;</div><div class="line">                &#125;</div><div class="line">                start++;</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line"></div><div class="line">        default:</div><div class="line">            boolean obeyCount = false;</div><div class="line">            boolean useFollowingMinusSignAsDelimiter = false;</div><div class="line"></div><div class="line">            if (i &lt; compiledPattern.length) &#123;</div><div class="line">                int nextTag = compiledPattern[i] &gt;&gt;&gt; 8;</div><div class="line">                if (!(nextTag == TAG_QUOTE_ASCII_CHAR || nextTag == TAG_QUOTE_CHARS)) &#123;</div><div class="line">                    obeyCount = true;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                if (hasFollowingMinusSign &amp;&amp; (nextTag == TAG_QUOTE_ASCII_CHAR || nextTag == TAG_QUOTE_CHARS)) &#123;</div><div class="line">                    int c;</div><div class="line">                    if (nextTag == TAG_QUOTE_ASCII_CHAR) &#123;</div><div class="line">                        c = compiledPattern[i] &amp; 0xff;</div><div class="line">                    &#125; else &#123;</div><div class="line">                        c = compiledPattern[i + 1];</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    if (c == minusSign) &#123;</div><div class="line">                        useFollowingMinusSignAsDelimiter = true;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            start = subParse(text, start, tag, count, obeyCount, ambiguousYear, pos, useFollowingMinusSignAsDelimiter);</div><div class="line">            if (start &lt; 0) &#123;</div><div class="line">                pos.index = oldStart;</div><div class="line">                return null;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    pos.index = start;</div><div class="line">    Date parsedDate;</div><div class="line">    try &#123;</div><div class="line">        if (ambiguousYear[0]) &#123;</div><div class="line">            Calendar savedCalendar = (Calendar) calendar.clone();</div><div class="line">            parsedDate = calendar.getTime();</div><div class="line">            if (parsedDate.before(defaultCenturyStart)) &#123;</div><div class="line">                savedCalendar.set(Calendar.YEAR, defaultCenturyStartYear + 100);</div><div class="line">                parsedDate = savedCalendar.getTime();</div><div class="line">            &#125;</div><div class="line">        &#125; else</div><div class="line">            parsedDate = calendar.getTime();</div><div class="line">    &#125; catch (IllegalArgumentException e) &#123;</div><div class="line">        pos.errorIndex = start;</div><div class="line">        pos.index = oldStart;</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return parsedDate;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>重点关注 <strong>calendar.clear()</strong> , <strong>calendar.getTime()</strong> 方法，SimpleDateFormat的parse方法实际操作的就是 <strong>Calendar</strong> 。</p>
<p>因为我们声明SimpleDateFormat为static变量，那么它的Calendar变量也就是一个共享变量，可以被多个线程访问。</p>
<p>假设线程A执行完calendar.clear()方法，这时候被挂起，线程B获得CPU执行权。线程B执行到了calendar.getTime()方法就获取到空值了，而这就是引发问题的根源，出现时间不对，线程挂死等等。</p>
<p><strong>其实SimpleDateFormat源码上作者也给过我们提示：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"> * &lt;h4&gt;&lt;a name=&quot;synchronization&quot;&gt;Synchronization&lt;/a&gt;&lt;/h4&gt;</div><div class="line"> *</div><div class="line"> * &lt;p&gt;</div><div class="line"> * Date formats are not synchronized.</div><div class="line"> * 日期格式不同步。</div><div class="line"> * It is recommended to create separate format instances for each thread.</div><div class="line"> * 建议为每个线程创建单独的格式实例。</div><div class="line"> * If multiple threads access a format concurrently, it must be synchronized</div><div class="line"> * externally.</div><div class="line"> * 如果多个线程同时访问一种格式，则必须在外部同步该格式。</div><div class="line"> *</div><div class="line"> * @see          &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/i18n/format/simpleDateFormat.html&quot;&gt;Java Tutorial&lt;/a&gt;</div><div class="line"> * @see          java.util.Calendar</div><div class="line"> * @see          java.util.TimeZone</div><div class="line"> * @see          DateFormat</div><div class="line"> * @see          DateFormatSymbols</div><div class="line"> * @version      %I%, %G% </div><div class="line"> * @author       Mark Davis, Chen-Lieh Huang, Alan Liu</div><div class="line"> */</div><div class="line">public class SimpleDateFormat extends DateFormat &#123;</div></pre></td></tr></table></figure></p>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><ol>
<li><p>只要在用的时候创建新实例，不用static修饰。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public static Date parse(String strDate) throws ParseException&#123;</div><div class="line">     SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</div><div class="line">    return sdf.parse(strDate);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 如上代码，仅在需要用到的地方创建一个新的实例，就没有线程安全问题，不过也加重了创建对象的负担，会频繁地创建和销毁对象，效率较低。</p>
</li>
<li><p>使用synchronized来SimpleDateFormat对象</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">private static SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</div><div class="line">    </div><div class="line">public static Date parse(String strDate) throws ParseException&#123;</div><div class="line">    synchronized(sdf)&#123;</div><div class="line">        return sdf.parse(strDate);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 当线程较多时，当一个线程调用该方法时，其他想要调用此方法的线程就要block，多线程并发量大的时候会对性能有一定的影响。</p>
</li>
<li><p>使用ThreadLocal</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">private static ThreadLocal&lt;DateFormat&gt; threadLocal = new ThreadLocal&lt;DateFormat&gt;() &#123;</div><div class="line">    @Override</div><div class="line">    protected DateFormat initialValue() &#123;</div><div class="line">        return new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">public static Date parse(String dateStr) throws ParseException &#123;</div><div class="line">    return threadLocal.get().parse(dateStr);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 使用ThreadLocal, 也是将共享变量变为独享，线程独享肯定能比方法独享在并发环境中能减少不少创建对象的开销。如果对性能要求比较高的情况下，一般推荐使用这种方法。</p>
</li>
</ol>
<h4 id="优化框架代码"><a href="#优化框架代码" class="headerlink" title="优化框架代码"></a>优化框架代码</h4><p>作为框架代码必须要保证性能要求，用ThreadLocal来优化代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">private static ThreadLocal&lt;java.text.DateFormat&gt; threadLocal = new ThreadLocal&lt;java.text.DateFormat&gt;();</div><div class="line"></div><div class="line">private static java.text.DateFormat getDateFormater(DateFormat format) &#123;</div><div class="line"></div><div class="line">    java.text.DateFormat dateFormater = threadLocal.get();</div><div class="line"></div><div class="line">    if (dateFormater == null) &#123;</div><div class="line">        dateFormater = new SimpleDateFormat(format.format);</div><div class="line">        threadLocal.set(dateFormater);</div><div class="line">    &#125;</div><div class="line">    return dateFormater;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>用同样的测试代码测试，结果如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div><div class="line">......</div><div class="line">Fri Mar 22 10:03:25 CST 2019</div></pre></td></tr></table></figure></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>我们要站在巨人的肩膀上来做事，如果是jdk1.8 可以使用DateTimeFormatter对象来解析或格式化日期;或直接使用Joda-Time类库来处理时间相关问题。</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://mp.weixin.qq.com/s?__biz=MzI1NDQ3MjQxNA==&amp;mid=2247488579&amp;idx=1&amp;sn=938bf5c4060f5758d57bb38a3d273523&amp;chksm=e9c5edf2deb264e41895a296a71db6363a7c24d1574d1262b2a74d464c73871ab3dfb65920e6&amp;scene=0&amp;xtrack=1&amp;key=788e29d0e375da22ae1918949f053d336e5d7ab2e59ce890ecd71d5a145885fcf2722671187a039ed5b59af2d4c3850464f757906a2285995765793ba14984b93cca50a8ed3e4a4a13ecaf2a95d31b3b&amp;ascene=1&amp;uin=MTU2NTU1NTk1&amp;devicetype=Windows+10&amp;version=62060720&amp;lang=zh_CN&amp;pass_ticket=PfdkGv%2BC8N6NZrxvaV85VDtvqNFgqdfh6j143w0u0Go%3D" target="_blank" rel="external">还在使用SimpleDateFormat？你的项目崩没？</a><br><a href="http://www.cnblogs.com/peida/archive/2013/05/31/3070790.html" target="_blank" rel="external">深入理解Java：SimpleDateFormat安全的时间格式化</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redhat7.5 安装 使用 GitLab]]></title>
      <url>http://tungsing.cc/2019/02/28/git/gitlab_install/</url>
      <content type="html"><![CDATA[<h4 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h4><p>如果想安装指定版本，需要在下面的网站中下载指定版本。</p>
<ol>
<li><a href="https://packages.gitlab.com/gitlab/" target="_blank" rel="external">GitLab资源库</a></li>
<li><a href="https://packages.gitlab.com/gitlab/gitlab-ce" target="_blank" rel="external">GitLab资源库社区版</a></li>
<li><a href="https://packages.gitlab.com/gitlab/gitlab-ee" target="_blank" rel="external">GitLab资源库企业版</a></li>
</ol>
<a id="more"></a>
<h4 id="安装社区版"><a href="#安装社区版" class="headerlink" title="安装社区版"></a>安装社区版</h4><p><a href="https://about.gitlab.com/install/?version=ce" target="_blank" rel="external">官方安装文档</a></p>
<ol>
<li><p>安装并配置依赖(必要)</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># sudo yum install -y curl policycoreutils-python openssh-server</div><div class="line"># sudo systemctl enable sshd</div><div class="line"># sudo systemctl start sshd</div><div class="line"> </div><div class="line"># sudo firewall-cmd --permanent --add-service=http</div><div class="line"># sudo systemctl reload firewalld</div></pre></td></tr></table></figure>
</li>
<li><p>安装Postfix(用来发送通知电子邮件)</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># sudo yum -y install postfix</div><div class="line"># sudo systemctl enable postfix</div><div class="line"># sudo systemctl start postfix</div></pre></td></tr></table></figure>
</li>
<li><p>添加GitLab包存储库</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</div></pre></td></tr></table></figure>
</li>
<li><p>安装GitLab包(将<a href="http://gitlab.resoft.css.com.cn作为您要访问GitLab的域名。安装过程将自动配置并启动该域名的GitLab" target="_blank" rel="external">http://gitlab.resoft.css.com.cn作为您要访问GitLab的域名。安装过程将自动配置并启动该域名的GitLab</a>)</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># EXTERNAL_URL=&quot;http://gitlab.resoft.css.com.cn&quot; yum install -y gitlab-ce</div></pre></td></tr></table></figure>
</li>
<li><p>相关命令</p>
<ul>
<li><p>查看运行状态</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sudo gitlab-ctl status</div></pre></td></tr></table></figure>
</li>
<li><p>启动</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sudo gitlab-ctl start</div></pre></td></tr></table></figure>
</li>
<li><p>停止</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sudo gitlab-ctl stop</div></pre></td></tr></table></figure>
</li>
<li><p>重启</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sudo gitlab-ctl restart</div></pre></td></tr></table></figure>
</li>
<li><p>查看版本</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</div><div class="line">11.4.3-ee</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h4 id="配置并使用"><a href="#配置并使用" class="headerlink" title="配置并使用"></a>配置并使用</h4><ol>
<li>浏览域名(<a href="http://gitlab.resoft.css.com.cn)并登陆" target="_blank" rel="external">http://gitlab.resoft.css.com.cn)并登陆</a><br> 首次访问时，您将被重定向到密码重置页面。设置初始管理员帐户的密码。使用默认帐户的用户名root登录。<br> <img src="/images/git/login.png" alt=""></li>
<li>配置语言<br> 选择用户头像-&gt;点Setting-&gt;选择Profile，将Preferred Language改成简体中文后保存即可<br> <img src="/images/git/language.png" alt=""></li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/qq_32596527/article/details/83617638" target="_blank" rel="external">在CentOS 7 1804 中 安装 使用 GitLab</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sonatype Nexus Repository Manager私服搭建]]></title>
      <url>http://tungsing.cc/2019/02/28/nexus/nexus/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>在使用java开发用maven来管理工程常常会从远程仓库下载jar包，由于网络原因有时候会下载很慢；还有公司内部产品开发的代码又不能上传到中央仓库；故需要搭建一个maven的私有仓库。选择Sonatype Nexus来作为maven的私有仓库，Sonatype Nexus还可以做docker、npm等等的私有仓库。</p>
</blockquote>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Redhat 7.5 操作系统</li>
<li>Sonatype Nexus Repository Manager 3.15</li>
<li>jdk1.8</li>
</ul>
<a id="more"></a>
<h4 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h4><ol>
<li>下载jdk安装包</li>
<li><a href="https://help.sonatype.com/repomanager3/download/download-archives---repository-manager-3" target="_blank" rel="external">官网</a>下载Sonatype Nexus Repository Manager安装包<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># wget http://download.sonatype.com/nexus/3/nexus-3.15.2-01-unix.tar.gz</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ol>
<li><p>修改最大文件打开数<br> nexus要求最大文件打开数不小于65536，默认1024<br> 打开文件/etc/security/limits.conf在文件末尾添加配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">* soft nofile 204800  </div><div class="line">* hard nofile 204800  </div><div class="line">* soft nproc 204800  </div><div class="line">* hard nproc 204800</div></pre></td></tr></table></figure>
<p> * 代表针对所有用户<br> noproc     是代表最大进程数<br> nofile     是代表最大文件打开数</p>
</li>
<li><p>创建用户组及用户并设置密码<br> Sonatype Nexus 不推荐root</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">groupadd nexus</div><div class="line">useradd -g nexus nexus</div><div class="line">passwd xxx</div></pre></td></tr></table></figure>
<p> xxx:你的密码</p>
</li>
</ol>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol>
<li>解压到/opt/nexus目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># tar -zvxf nexus-3.15.2-01-unix.tar.gz</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ol>
<li><p>配置jdk</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi /opt/nexus/nexus-3.15.2-01/bin/nexus</div></pre></td></tr></table></figure>
<p> 找到INSTALL4J_JAVA_HOME_OVERRIDE添加java home目录</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INSTALL4J_JAVA_HOME_OVERRIDE=/opt/java/jdk1.8.0_131</div></pre></td></tr></table></figure>
</li>
<li><p>配置启动用户</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi /opt/nexus/nexus-3.15.2-01/bin/nexus.rc</div></pre></td></tr></table></figure>
<p> 默认为nexus用户修改root用户</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">run_as_user=&quot;root&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>配置WEB端口为80。默认为8081，如何不修改默认端口，启动用户无需配置</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># /opt/nexus/nexus-3.15.2-01/etc/nexus-default.properties</div></pre></td></tr></table></figure>
</li>
<li><p>配置开机启动<br> 在目录/etc/systemd/system/添加nexus.service文件</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi /etc/systemd/system/nexus.service</div></pre></td></tr></table></figure>
<p> 添加如下内容</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=nexus service</div><div class="line">After=network.target</div><div class="line">  </div><div class="line">[Service]</div><div class="line">Type=forking</div><div class="line">LimitNOFILE=65536</div><div class="line">ExecStart=/opt/nexus/nexus-3.15.2-01/bin/nexus start</div><div class="line">ExecStop=/opt/nexus/nexus-3.15.2-01/bin/nexus stop</div><div class="line">User=root</div><div class="line">Restart=on-abort</div><div class="line">  </div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<p> 激活服务并添加开机启动</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># systemctl daemon-reload</div><div class="line"># systemctl enable nexus.service</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># systemctl start nexus.service</div></pre></td></tr></table></figure>
<p>查看日志，监控是否成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># tail -f /opt/nexus/sonatype-work/nexus3/log/nexus.log</div></pre></td></tr></table></figure></p>
<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>我想用80端口，所以用root用户启动。用nexus用户启动无法用80端口，会报一个错误，没找到解决办法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">jvm 1    | 2017-04-28 11:20:10,040+0800 WARN  [jetty-main-1] *SYSTEM org.eclipse.jetty.util.component.AbstractLifeCycle - FAILED InstrumentedSelectChannelCon</div><div class="line">nector@0.0.0.0:80: java.net.SocketException: Permission denied</div><div class="line">jvm 1    | java.net.SocketException: Permission denied</div><div class="line">jvm 1    |      at sun.nio.ch.Net.bind0(Native Method) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.Net.bind(Net.java:433) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.Net.bind(Net.java:425) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at org.eclipse.jetty.server.nio.SelectChannelConnector.open(SelectChannelConnector.java:187) ~[jetty-server-8.1.16.v20140903.jar:8.1.16.v2014</div><div class="line">0903]</div><div class="line">jvm 1    |      at org.eclipse.jetty.server.AbstractConnector.doStart(AbstractConnector.java:316) ~[jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]</div><div class="line">jvm 1    |      at org.eclipse.jetty.server.nio.SelectChannelConnector.doStart(SelectChannelConnector.java:265) ~[jetty-server-8.1.16.v20140903.jar:8.1.16.v2</div><div class="line">0140903]</div><div class="line">jvm 1    |      at org.sonatype.nexus.bootstrap.jetty.InstrumentedSelectChannelConnector.doStart(InstrumentedSelectChannelConnector.java:85) ~[nexus-bootstra</div><div class="line">p-2.12.0-01.jar:2.12.0-01]</div><div class="line">jvm 1    |      at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]</div><div class="line">jvm 1    |      at org.eclipse.jetty.server.Server.doStart(Server.java:293) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]</div><div class="line">jvm 1    |      at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]</div><div class="line">jvm 1    |      at org.sonatype.nexus.bootstrap.jetty.JettyServer$JettyMainThread.run(JettyServer.java:247) [nexus-bootstrap-2.12.0-01.jar:2.12.0-01]</div><div class="line">jvm 1    | 2017-04-28 11:20:10,041+0800 WARN  [jetty-main-1] *SYSTEM org.eclipse.jetty.util.component.AbstractLifeCycle - FAILED org.eclipse.jetty.server.Server@7fafc8f3: java.net.SocketException: Permission denied</div><div class="line">jvm 1    | java.net.SocketException: Permission denied</div><div class="line">jvm 1    |      at sun.nio.ch.Net.bind0(Native Method) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.Net.bind(Net.java:433) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.Net.bind(Net.java:425) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[na:1.8.0_131]</div><div class="line">jvm 1    |      at org.eclipse.jetty.server.nio.SelectChannelConnector.open(SelectChannelConnector.java:187) ~[jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]</div><div class="line">jvm 1    |      at org.eclipse.jetty.server.AbstractConnector.doStart(AbstractConnector.java:316) ~[jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]</div><div class="line">jvm 1    |      at org.eclipse.jetty.server.nio.SelectChannelConnector.doStart(SelectChannelConnector.java:265) ~[jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]</div></pre></td></tr></table></figure></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://help.sonatype.com/repomanager3/installation/run-as-a-service#RunasaService-systemd" target="_blank" rel="external">centos7 开机启动</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redhat7.5 替换免费的yum]]></title>
      <url>http://tungsing.cc/2019/02/28/linux/linux-yum/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>在没有激活的机器上使用yum命令无法使用，临时替换免费版。推荐使用正版！</p>
</blockquote>
<p><img src="/images/linux/redhat_yum.jpg" alt=""></p>
<a id="more"></a>
<h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol>
<li><p>检查已经安装yum包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># rpm -qa | grep yum</div></pre></td></tr></table></figure>
</li>
<li><p>删除已安装的yum包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># rpm -qa | grep yum|xargs rpm -e --nodeps</div></pre></td></tr></table></figure>
</li>
<li><p>下载yum相关包<br>浏览器打开<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="external">阿里镜像站</a>,网址可能会变</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># wget https://mirrors.aliyun.com/centos/7.6.1810/os/x86_64/Packages/yum-3.4.3-161.el7.centos.noarch.rpm</div><div class="line"># wegt https://mirrors.aliyun.com/centos/7.6.1810/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm</div><div class="line"># wget https://mirrors.aliyun.com/centos/7.6.1810/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-50.el7.noarch.rpm</div></pre></td></tr></table></figure>
</li>
<li><p>安装yum</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># rpm -ivh yum-*</div></pre></td></tr></table></figure>
</li>
<li><p>下载源地址文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd /etc/yum.repos.d</div><div class="line"># wget http://mirrors.aliyun.com/repo/Centos-7.repo</div></pre></td></tr></table></figure>
</li>
<li><p>备份原源地址文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mv /etc/yum.repos.d/redhat.repo /etc/yum.repos.d/redhat.repo.bak</div></pre></td></tr></table></figure>
</li>
<li><p>修改阿里源地址文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sed -i &quot;s;\$releasever;7.6.1810;g&quot; /etc/yum.repos.d/Centos-7.repo</div></pre></td></tr></table></figure>
<p> 7.6.1810为版本号</p>
</li>
<li><p>清理缓存和重新生成缓存</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># yum clean all</div><div class="line"># yum makecache</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/qq_32368213/article/details/80446688" target="_blank" rel="external">RedHat 7替换yum为免费版 CentOS7 yum</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenSSL 生成自定义证书]]></title>
      <url>http://tungsing.cc/2019/01/06/web/container/ssl_cert/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>本文用来记录通过OpenSSL生成自定义证书并在浏览器设置可信任</p>
</blockquote>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Linux CentOS7 系统</li>
<li>nginx 1.12.2</li>
<li>Windows 10</li>
<li>IE 11</li>
<li>chrome 71</li>
</ul>
<a id="more"></a>
<h4 id="OpenSSL配置"><a href="#OpenSSL配置" class="headerlink" title="OpenSSL配置"></a>OpenSSL配置</h4><p>在linux系统中修改OpenSSL配置是为了,让chrome浏览器对为网站可信任<br><img src="/images/web/container/sslcert.jpg" alt=""></p>
<ol>
<li><p>拷贝OpenSSL配置文件准备修改</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd /etc/pki/tls/</div><div class="line"># cp openssl.cnf openssl_m.cnf</div></pre></td></tr></table></figure>
</li>
<li><p>修改openssl_m.cnf文件</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi /etc/pki/tls/openssl_m.cnf</div></pre></td></tr></table></figure>
<p> a. 找到[ req ] 段落，添加req_extentions  = v3_req配置：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">####################################################################</div><div class="line">[ req ]</div><div class="line">default_bits        = 2048</div><div class="line">default_md      = sha256</div><div class="line">default_keyfile     = privkey.pem</div><div class="line">distinguished_name  = req_distinguished_name</div><div class="line">attributes      = req_attributes</div><div class="line">x509_extensions = v3_ca # The extentions to add to the self signed cert</div><div class="line">#需要添加的配置</div><div class="line">req_extentions  = v3_req</div></pre></td></tr></table></figure>
<p> b. 添加v3_req配置信息</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[ v3_req ]</div><div class="line"></div><div class="line"># Extensions to add to a certificate request</div><div class="line"></div><div class="line">basicConstraints = CA:FALSE</div><div class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</div><div class="line">#需要添加的配置</div><div class="line">subjectAltName = @alt_names</div></pre></td></tr></table></figure>
<p> c. 添加alt_names配置信息,可以添加多个</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[ alt_names ]</div><div class="line">DNS.1 = www.test.com</div></pre></td></tr></table></figure>
<p> 注：这里填入的即为Subject Alternative Names的域名名称</p>
</li>
</ol>
<h4 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h4><p>直接用脚本生成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line"></div><div class="line"># create self-signed server certificate:</div><div class="line"></div><div class="line">read -p &quot;Enter your domain [www.example.com]: &quot; DOMAIN</div><div class="line"></div><div class="line">echo &quot;Create server key...&quot;</div><div class="line"></div><div class="line">openssl genrsa -des3 -out $DOMAIN.key 2048</div><div class="line"></div><div class="line">echo &quot;Create server certificate signing request...&quot;</div><div class="line"></div><div class="line">SUBJECT=&quot;/C=US/ST=Mars/L=iTranswarp/O=iTranswarp/OU=iTranswarp/CN=$DOMAIN&quot;</div><div class="line"></div><div class="line">#openssl req -new  -subj $SUBJECT -key $DOMAIN.key -out $DOMAIN.csr -extensions v3_req</div><div class="line">openssl req -new -subj $SUBJECT  -key $DOMAIN.key -out $DOMAIN.csr</div><div class="line"></div><div class="line"></div><div class="line">echo &quot;Remove password...&quot;</div><div class="line"></div><div class="line">mv $DOMAIN.key $DOMAIN.origin.key</div><div class="line">openssl rsa -in $DOMAIN.origin.key -out $DOMAIN.key</div><div class="line"></div><div class="line">echo &quot;Sign SSL certificate...&quot;</div><div class="line"></div><div class="line">openssl x509 -req -days 3650 -extfile /etc/pki/tls/openssl_m.cnf  -extensions v3_req   -in $DOMAIN.csr -signkey $DOMAIN.key -out $DOMAIN.crt</div><div class="line"></div><div class="line">echo &quot;TODO:&quot;</div><div class="line">echo &quot;Copy $DOMAIN.crt to /etc/nginx/ssl/$DOMAIN.crt&quot;</div><div class="line">echo &quot;Copy $DOMAIN.key to /etc/nginx/ssl/$DOMAIN.key&quot;</div><div class="line">echo &quot;Add configuration in nginx:&quot;</div><div class="line">echo &quot;server &#123;&quot;</div><div class="line">echo &quot;    ...&quot;</div><div class="line">echo &quot;    listen 443 ssl;&quot;</div><div class="line">echo &quot;    ssl_certificate     /etc/nginx/ssl/$DOMAIN.crt;&quot;</div><div class="line">echo &quot;    ssl_certificate_key /etc/nginx/ssl/$DOMAIN.key;&quot;</div><div class="line">echo &quot;&#125;&quot;</div></pre></td></tr></table></figure></p>
<p>关键点就是：-extfile /etc/pki/tls/openssl_m.cnf  -extensions v3_req给证书添加上扩展属性<br><img src="/images/web/container/certext.jpg" alt=""></p>
<h4 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h4><ol>
<li>把生成的xxx.crt 和xxx.key 拷贝到/etc/nginx/ssl/</li>
<li><p>修改nginx.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    ssl on;</div><div class="line">    ssl_certificate     /etc/nginx/ssl/www.test.com.crt;</div><div class="line">    ssl_certificate_key /etc/nginx/ssl/www.test.com.key;</div><div class="line">    listen       443 default_server;</div><div class="line">    listen       [::]:443 default_server;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>重启nginx服务</p>
</li>
</ol>
<h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><ol>
<li>把www.test.com.crt拷贝到windows系统中</li>
<li>双击www.test.com.crt文件打开</li>
<li>点击“Install Certificate”<br><img src="/images/web/container/install_cert.jpg" alt=""></li>
<li>选择“Local Machine” 点击“Next”<br><img src="/images/web/container/install_cert2.jpg" alt=""></li>
<li>选择“Place all certificates in the following store” 点击“Browser”</li>
<li>选择“Trusted Root Certification Authorities” 点击“OK”<br><img src="/images/web/container/install_cert3.jpg" alt=""></li>
<li>点击“Next” 点击“Finish”</li>
</ol>
<h4 id="再次访问网站"><a href="#再次访问网站" class="headerlink" title="再次访问网站"></a>再次访问网站</h4><p><img src="/images/web/container/sslcert_chrome.jpg" alt=""></p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ol>
<li><a href="https://blog.csdn.net/zssai2015/article/details/85049905" target="_blank" rel="external">OpenSSL创建的自签名证书在chrome端无法信任</a></li>
<li><a href="https://www.linuxidc.com/Linux/2016-12/138670.htm" target="_blank" rel="external">OpenSSL生成v3证书方法及配置文件</a></li>
<li><a href="https://www.liaoxuefeng.com/article/0014189023237367e8d42829de24b6eaf893ca47df4fb5e000" target="_blank" rel="external">给Nginx配置一个自签名的SSL证书</a></li>
<li><a href="https://github.com/michaelliao/itranswarp.js/blob/master/conf/ssl/gencert.sh" target="_blank" rel="external">脚本</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nginx+keepalived 主从搭建]]></title>
      <url>http://tungsing.cc/2019/01/04/web/container/nginx_keepalived/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>本文用来记录nginx加keepalived实现高可用，避免出现单点故障。</p>
</blockquote>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Linux CentOS7 系统</li>
<li>nginx 1.12.2</li>
<li>keepalived 1.3.5</li>
</ul>
<a id="more"></a>
<h4 id="规划图"><a href="#规划图" class="headerlink" title="规划图"></a>规划图</h4><p><img src="/images/web/container/nginx_keepalived.png" alt=""></p>
<table>
<thead>
<tr>
<th>虚拟IP</th>
<th>真实IP</th>
<th>hostname</th>
<th>nginx端口</th>
<th>主从</th>
</tr>
</thead>
<tbody>
<tr>
<td>10.200.1.200</td>
<td>10.200.1.5</td>
<td>nginx_master</td>
<td>80</td>
<td>Master</td>
</tr>
<tr>
<td>10.200.1.200</td>
<td>10.200.1.6</td>
<td>nginx_backup</td>
<td>80</td>
<td>Backup</td>
</tr>
</tbody>
</table>
<h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><p>把搭建过程中的坑写的前边，避免下次再遇到</p>
<ol>
<li>机器的hostname一定要修改，不能出现相同的，相同会导致VIP不漂移</li>
<li>防火墙开放80端口</li>
<li>selinux对keepalived的影响，我遇到的是在执行监控脚本无法调用系统服务命令(systemctl stop keepalived),解决办法有3<ul>
<li>不调用系统服务命令来启动或关闭应用，只用kill杀死进程</li>
<li>关闭selinux</li>
<li>找到selinux具体是什么权限导致在监控脚本无法调用系统服务命令(我没找到)</li>
</ul>
</li>
</ol>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol>
<li>在VirtualBox下安装CentOS7操作系统，配置IP地址和hostname</li>
<li><p>通过yum命令来安装epel-release、nginx、keepalived</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># yum install epel-release -y</div><div class="line"># yum install nginx -y</div><div class="line"># yum install keepalived -y</div></pre></td></tr></table></figure>
</li>
<li><p>复制第一步安装好的系统，配置IP地址和hostname</p>
</li>
</ol>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="Master配置"><a href="#Master配置" class="headerlink" title="Master配置"></a>Master配置</h5><ol>
<li><p>keepalived 配置</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi etc/keepalived/keepalived.conf</div></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">! Configuration File for keepalived</div><div class="line">#全局配置</div><div class="line">global_defs &#123;</div><div class="line">    #运行keepalived的机器的一个标识</div><div class="line">    router_id LVS_DEVEL_MASTER</div><div class="line">&#125;</div><div class="line"></div><div class="line">#VRRPD配置</div><div class="line">vrrp_script check_nginx &#123;</div><div class="line">  #脚本监测</div><div class="line">  script &quot;/opt/check_nginx.sh&quot;</div><div class="line">  #脚本执行间隔，每2s检测一次</div><div class="line">  interval 2</div><div class="line">  #脚本结果导致的优先级变更，检测失败（脚本返回非0）则优先级 -20</div><div class="line">  weight -20</div><div class="line">&#125;</div><div class="line"></div><div class="line">#定义vrrp实例</div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    #指定keepalived的角色，MASTER表示此主机是主服务器，BACKUP表示此主机是备用服务器</div><div class="line">    state MASTER</div><div class="line">    #指定HA监测网络的接口。与本机 IP 地址所在的网络接口相同</div><div class="line">    interface enp0s3</div><div class="line">    #虚拟路由标识，这个标识是一个数字，同一个vrrp实例使用唯一的标识。即同一vrrp_instance下，MASTER和BACKUP必须是一致的  </div><div class="line">    virtual_router_id 51</div><div class="line">    #定义优先级，数字越大，优先级越高</div><div class="line">    priority 100</div><div class="line">    #设定MASTER与BACKUP负载均衡器之间同步检查的时间间隔，单位是秒</div><div class="line">    advert_int 1</div><div class="line">    #设置验证类型和密码。主从必须一样</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass 1111</div><div class="line">    &#125;</div><div class="line">    #VRRP HA 虚拟地址 如果有多个VIP，继续换行填写 </div><div class="line">    virtual_ipaddress &#123;</div><div class="line">        10.200.1.200</div><div class="line">    &#125;</div><div class="line">    #执行nginx检测脚本。注意这个设置不能紧挨着写在vrrp_script配置块的后面（实验中碰过的坑），否则nginx监控失效！！</div><div class="line">    track_script &#123;</div><div class="line">       check_nginx</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>监测脚本编写</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">#检查nginx进程是否存在</div><div class="line">counter=$(ps -C nginx --no-heading|wc -l)</div><div class="line">pids=$(pidof keepalived)</div><div class="line">if [ &quot;$&#123;counter&#125;&quot; = &quot;0&quot; ]; then</div><div class="line">     #尝试启动一次nginx，停止5秒后再次检测</div><div class="line">     #/usr/bin/systemctl start nginx</div><div class="line">    sleep 2</div><div class="line">    counter=$(ps -C nginx --no-heading|wc -l)</div><div class="line">    if [ &quot;$&#123;counter&#125;&quot; = &quot;0&quot; -a &quot;$&#123;pids&#125;&quot; != &quot;&quot; ]; then</div><div class="line">        #如果启动没成功，就杀掉keepalive触发主备切换</div><div class="line">        #/usr/bin/systemctl stop keepalived</div><div class="line">        #如果关闭了selinux可以只用上边的命令，如果没有直接用kill</div><div class="line">        #kill -9 $pids</div><div class="line">    fi</div><div class="line">fi</div></pre></td></tr></table></figure>
</li>
<li><p>监测脚本授权</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># chmod +x /opt/check_nginx.sh</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="Backup配置"><a href="#Backup配置" class="headerlink" title="Backup配置"></a>Backup配置</h5><ol>
<li><p>keepalived 配置</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi /etc/keepalived/keepalived.conf</div></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">! Configuration File for keepalived</div><div class="line"></div><div class="line">global_defs &#123;</div><div class="line">    #和Master不同的地方</div><div class="line">    router_id LVS_DEVEL_BACKUP</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_script check_nginx &#123;</div><div class="line">  script &quot;sh /opt/check_nginx.sh&quot; </div><div class="line">  interval 2 </div><div class="line">  weight -20</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    #和Master不同的地方</div><div class="line">    state BACKUP</div><div class="line">    interface enp0s3</div><div class="line">    virtual_router_id 51</div><div class="line">    #和Master不同的地方</div><div class="line">    priority 90</div><div class="line">    advert_int 1</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass 1111</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">        10.200.1.200</div><div class="line">    &#125;</div><div class="line">    track_script &#123;</div><div class="line">       check_nginx</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>直接把Master的脚本拷贝过来</p>
</li>
</ol>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ol>
<li><p>关闭master的nginx服务，测试nginx是否会被重启<br> <img src="/images/web/container/nk_master_1.jpg" alt=""><br> 检查页面是否正常</p>
</li>
<li><p>测试VIP是否会漂移</p>
<ul>
<li>注释检测脚本启动nginx服务的命令</li>
<li>查看页面<br><img src="/images/web/container/nk_master_2.jpg" alt=""></li>
<li>执行systemctl stop nginx命令，查看页面<br><img src="/images/web/container/nk_backup_1.jpg" alt=""></li>
</ul>
</li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>本记录只记录了核心的部分，如果是生成环境用，还有在熟悉其他的配置，比如发邮件配置等</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ol>
<li><a href="https://juejin.im/entry/5b21c4c55188257d7541c860" target="_blank" rel="external">nginx笔记</a></li>
<li><a href="https://blog.csdn.net/u010391029/article/details/48311699" target="_blank" rel="external">Keepalived原理与实战精讲–VRRP协议</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[redis info 命令]]></title>
      <url>http://tungsing.cc/2018/12/10/cache/redis/redis-info/</url>
      <content type="html"><![CDATA[<p>收集了info命令的中文解释</p>
<table>
<thead>
<tr>
<th>信息</th>
<th>中文解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>Server</td>
<td>服务信息</td>
</tr>
<tr>
<td>redis_version</td>
<td>Redis 服务器版本</td>
</tr>
<tr>
<td>redis_git_sha1</td>
<td>Git SHA1</td>
</tr>
<tr>
<td>redis_git_dirty</td>
<td>Git dirty flag</td>
</tr>
<tr>
<td>redis_build_id</td>
<td>redis build id</td>
</tr>
<tr>
<td>redis_mode</td>
<td>运行模式，单机或者集群</td>
</tr>
<tr>
<td>os</td>
<td>Redis 服务器的宿主操作系统</td>
</tr>
<tr>
<td>arch_bits</td>
<td>架构（32 或 64 位）</td>
</tr>
<tr>
<td>multiplexing_api</td>
<td>Redis 所使用的事件处理机制</td>
</tr>
<tr>
<td>process_id</td>
<td>服务器进程的 PID</td>
</tr>
<tr>
<td>run_id</td>
<td>Redis 服务器的随机标识符（用于 Sentinel 和集群）</td>
</tr>
<tr>
<td>tcp_port</td>
<td>TCP/IP 监听端口</td>
</tr>
<tr>
<td>uptime_in_seconds</td>
<td>自 Redis 服务器启动以来，经过的秒数</td>
</tr>
<tr>
<td>uptime_in_days</td>
<td>自 Redis 服务器启动以来，经过的天数</td>
</tr>
<tr>
<td>hz</td>
<td>redis内部调度（进行关闭timeout的客户端，删除过期key等等）频率，程序规定serverCron每秒运行10次</td>
</tr>
<tr>
<td>lru_clock</td>
<td>以分钟为单位进行自增的时钟，用于 LRU 管理</td>
</tr>
<tr>
<td>executable</td>
<td></td>
</tr>
<tr>
<td>config_file</td>
<td>配置文件路径</td>
</tr>
<tr>
<td>Clients</td>
<td>客户端信息</td>
</tr>
<tr>
<td>connected_clients</td>
<td>已连接客户端的数量（不包括通过从属服务器连接的客户端）</td>
</tr>
<tr>
<td>client_longest_output_list</td>
<td>当前连接的客户端当中，最长的输出列表</td>
</tr>
<tr>
<td>client_biggest_input_buf</td>
<td>当前连接的客户端当中，最大输入缓存</td>
</tr>
<tr>
<td>blocked_clients</td>
<td>正在等待阻塞命令(BLPOP、BRPOP、BRPOPLPUSH)的客户端的数量</td>
</tr>
<tr>
<td>Memory</td>
<td>内存信息</td>
</tr>
<tr>
<td>used_memory</td>
<td>由 Redis 分配器分配的内存总量，以字节(byte)为单位</td>
</tr>
<tr>
<td>used_memory_human</td>
<td>以人类可读的格式返回 Redis 分配的内存总量</td>
</tr>
<tr>
<td>used_memory_rss</td>
<td>从操作系统的角度，返回 Redis 已分配的内存总量（俗称常驻集大小）。这个值和 top 、 ps 等命令的输出一致。</td>
</tr>
<tr>
<td>used_memory_rss_human</td>
<td>以人类可读的格式返回Redis已分配的内存总量</td>
</tr>
<tr>
<td>used_memory_peak</td>
<td>Redis 的内存消耗峰值（以字节为单位）</td>
</tr>
<tr>
<td>used_memory_peak_human</td>
<td>以人类可读的格式返回 Redis 的内存消耗峰值</td>
</tr>
<tr>
<td>total_system_memory</td>
<td></td>
</tr>
<tr>
<td>total_system_memory_human</td>
<td></td>
</tr>
<tr>
<td>used_memory_lua</td>
<td>lua引擎所使用的内存大小(以字节为单位)</td>
</tr>
<tr>
<td>used_memory_lua_human</td>
<td></td>
</tr>
<tr>
<td>maxmemory</td>
<td></td>
</tr>
<tr>
<td>maxmemory_human</td>
<td></td>
</tr>
<tr>
<td>maxmemory_policy</td>
<td>内存淘汰机制，当内存使用达到阈值的时候，所有引起申请内存的命令会报错</td>
</tr>
<tr>
<td>mem_fragmentation_ratio</td>
<td>used_memory_rss和used_memory之间的比率，小于1表示使用了swap，大于1表示碎片比较多</td>
</tr>
<tr>
<td>mem_allocator</td>
<td>在编译时指定的redis所使用的内存分配器。可以是libc、jemalloc或者tcmalloc</td>
</tr>
<tr>
<td>Persistence</td>
<td>持久化信息</td>
</tr>
<tr>
<td>loading</td>
<td>服务器是否正在载入持久化文件</td>
</tr>
<tr>
<td>rdb_changes_since_last_save</td>
<td>离最近一次成功生成rdb文件，写入命令的个数，即有多少个写入命令没有持久化</td>
</tr>
<tr>
<td>rdb_bgsave_in_progress</td>
<td>服务器是否正在创建rdb文件</td>
</tr>
<tr>
<td>rdb_last_save_time</td>
<td>离最近一次成功创建rdb文件的时间戳。当前时间戳 - rdb_last_save_time=多少秒未成功生成rdb文件</td>
</tr>
<tr>
<td>rdb_last_bgsave_status</td>
<td>最近一次rdb持久化是否成功</td>
</tr>
<tr>
<td>rdb_last_bgsave_time_sec</td>
<td>最近一次成功生成rdb文件耗时秒数</td>
</tr>
<tr>
<td>rdb_current_bgsave_time_sec</td>
<td>如果服务器正在创建rdb文件，那么这个域记录的就是当前的创建操作已经耗费的秒数</td>
</tr>
<tr>
<td>aof_enabled</td>
<td>是否开启了aof</td>
</tr>
<tr>
<td>aof_rewrite_in_progress</td>
<td>标识aof的rewrite操作是否在进行中</td>
</tr>
<tr>
<td>aof_rewrite_scheduled</td>
<td>rewrite任务计划，当客户端发送bgrewriteaof指令，如果当前rewrite子进程正在执行，那么将客户端请求的bgrewriteaof变为计划任务，待aof子进程结束后执行rewrite</td>
</tr>
<tr>
<td>aof_last_rewrite_time_sec</td>
<td>最近一次aof rewrite耗费的时长</td>
</tr>
<tr>
<td>aof_current_rewrite_time_sec</td>
<td>如果rewrite操作正在进行，则记录所使用的时间，单位秒</td>
</tr>
<tr>
<td>aof_last_bgrewrite_status</td>
<td>上次bgrewriteaof操作的状态</td>
</tr>
<tr>
<td>aof_last_write_status</td>
<td>上次aof写入状态</td>
</tr>
<tr>
<td>Stats</td>
<td>一般统计信息</td>
</tr>
<tr>
<td>total_connections_received</td>
<td>新创建连接个数,如果新创建连接过多，过度地创建和销毁连接对性能有影响，说明短连接严重或连接池使用有问题，需调研代码的连接设置</td>
</tr>
<tr>
<td>total_commands_processed</td>
<td>redis处理的命令数</td>
</tr>
<tr>
<td>instantaneous_ops_per_sec</td>
<td>redis当前的qps，redis内部较实时的每秒执行的命令数</td>
</tr>
<tr>
<td>total_net_input_bytes</td>
<td>redis网络入口流量字节数</td>
</tr>
<tr>
<td>total_net_output_bytes</td>
<td>redis网络出口流量字节数</td>
</tr>
<tr>
<td>instantaneous_input_kbps</td>
<td>redis网络入口kps</td>
</tr>
<tr>
<td>instantaneous_output_kbps</td>
<td>redis网络出口kps</td>
</tr>
<tr>
<td>rejected_connections</td>
<td>拒绝的连接个数，redis连接个数达到maxclients限制，拒绝新连接的个数</td>
</tr>
<tr>
<td>sync_full</td>
<td>主从完全同步成功次数</td>
</tr>
<tr>
<td>sync_partial_ok</td>
<td>主从部分同步成功次数</td>
</tr>
<tr>
<td>sync_partial_err</td>
<td>主从部分同步失败次数</td>
</tr>
<tr>
<td>expired_keys</td>
<td>运行以来过期的key的数量</td>
</tr>
<tr>
<td>evicted_keys</td>
<td>运行以来剔除(超过了maxmemory后)的key的数量</td>
</tr>
<tr>
<td>keyspace_hits</td>
<td>命中次数</td>
</tr>
<tr>
<td>keyspace_misses</td>
<td>没命中次数</td>
</tr>
<tr>
<td>pubsub_channels</td>
<td>当前使用中的频道数量</td>
</tr>
<tr>
<td>pubsub_patterns</td>
<td>当前使用的模式的数量</td>
</tr>
<tr>
<td>latest_fork_usec</td>
<td>最近一次fork操作阻塞redis进程的耗时数，单位微秒</td>
</tr>
<tr>
<td>migrate_cached_sockets</td>
<td></td>
</tr>
<tr>
<td>Replication</td>
<td>主从信息</td>
</tr>
<tr>
<td>role</td>
<td>实例的角色，是master or slave</td>
</tr>
<tr>
<td>connected_slaves</td>
<td>连接的slave实例个数</td>
</tr>
<tr>
<td>master_repl_offset</td>
<td>主从同步偏移量,此值如果和上面的offset相同说明主从一致没延迟</td>
</tr>
<tr>
<td>repl_backlog_active</td>
<td>复制积压缓冲区是否开启</td>
</tr>
<tr>
<td>repl_backlog_size</td>
<td>复制积压缓冲大小</td>
</tr>
<tr>
<td>repl_backlog_first_byte_offset</td>
<td>复制缓冲区里偏移量的大小</td>
</tr>
<tr>
<td>repl_backlog_histlen</td>
<td>此值等于 master_repl_offset-repl_backlog_first_byte_offset,该值不会超过repl_backlog_size的大小</td>
</tr>
<tr>
<td>CPU</td>
<td>CPU信息</td>
</tr>
<tr>
<td>used_cpu_sys</td>
<td>将所有redis主进程在核心态所占用的CPU时求和累计起来</td>
</tr>
<tr>
<td>used_cpu_user</td>
<td>将所有redis主进程在用户态所占用的CPU时求和累计起来</td>
</tr>
<tr>
<td>used_cpu_sys_children</td>
<td>将后台进程在核心态所占用的CPU时求和累计起来</td>
</tr>
<tr>
<td>used_cpu_user_children</td>
<td>将后台进程在用户态所占用的CPU时求和累计起来</td>
</tr>
<tr>
<td>Cluster</td>
<td>集群信息</td>
</tr>
<tr>
<td>cluster_enabled</td>
<td>实例是否启用集群模式</td>
</tr>
<tr>
<td>Keyspace</td>
<td>数据库相关的统计信息</td>
</tr>
<tr>
<td>db0</td>
<td>db0的key的数量,以及带有生存期的key的数,平均存活时间</td>
</tr>
</tbody>
</table>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="https://stackoverflow.com/questions/10558465/memcached-vs-redis" target="_blank" rel="external">stackoverflow</a></p>
<ol>
<li><a href="https://coolshell.cn/articles/10739.html" target="_blank" rel="external">LUA脚本</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[redis集群搭建]]></title>
      <url>http://tungsing.cc/2018/12/10/cache/redis/redis-cluster/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>CentOS7 操作系统</li>
<li>已安装好的Redis，具体安装看上一篇</li>
</ul>
<a id="more"></a>
<h4 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h4><h5 id="同台机器集群搭建"><a href="#同台机器集群搭建" class="headerlink" title="同台机器集群搭建"></a>同台机器集群搭建</h5><ol>
<li><p>创建文件夹<br>我们设计集群中 Redis 节点的端口号为 9000-9005，端口号即集群下各实例文件夹。数据存放在 端口号/data 文件夹中。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># mkdir /opt/redis_cluster</div><div class="line"># cd /opt/redis_cluster</div><div class="line"># mkdir -p 9000/data 9001/data 9002/data 9003/data 9004/data 9005/data</div></pre></td></tr></table></figure>
</li>
<li><p>复制一个redis.conf文件到9000目录下，并修改<br>从源码包中复制配置文件并修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cp /opt/redis-4.0.11/redis.conf /opt/redis_cluster/9000</div><div class="line"># vi /opt/redis_cluster/9000/redis.conf</div></pre></td></tr></table></figure>
<p>重点修改以下配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">port 9000（每个节点的端口号）</div><div class="line">daemonize yes</div><div class="line">#bind 127.0.0.1(绑定当前机器 IP,可以不配置)</div><div class="line">dir /opt/redis_cluster/9000/data/（数据文件存放位置）</div><div class="line">pidfile /var/run/redis_9000.pid（pid 9000和port要对应）</div><div class="line">cluster-enabled yes（启动集群模式）</div><div class="line">cluster-config-file nodes9000.conf（9001和port要对应）</div><div class="line">cluster-node-timeout 15000</div><div class="line">appendonly yes</div><div class="line">protected-mode no(保护模式设置为no，如果启用了，则只能够通过lookback ip(127.0.0.1)访问Redis cache)</div></pre></td></tr></table></figure>
</li>
<li><p>把配置好的复制5份</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># cp -rf /opt/redis_cluster/9000/* /opt/redis_cluster/9001</div><div class="line"># cp -rf /opt/redis_cluster/9000/* /opt/redis_cluster/9002</div><div class="line"># cp -rf /opt/redis_cluster/9000/* /opt/redis_cluster/9003</div><div class="line"># cp -rf /opt/redis_cluster/9000/* /opt/redis_cluster/9004</div><div class="line"># cp -rf /opt/redis_cluster/9000/* /opt/redis_cluster/9005</div></pre></td></tr></table></figure>
</li>
<li><p>挨个修改实例的配置文件<br>通过搜索会发现其实只有四个点需要修改，我们全局替换下吧，进入相应的节点文件夹，做替换就好了，不放心再手工检查下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># vi /opt/redis_cluster/9001/redis.conf</div><div class="line">:%s/9001/9002</div></pre></td></tr></table></figure>
</li>
<li><p>启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># /usr/local/bin/redis-server /opt/redis_cluster/9000/redis.conf</div><div class="line"># /usr/local/bin/redis-server /opt/redis_cluster/9001/redis.conf</div><div class="line"># /usr/local/bin/redis-server /opt/redis_cluster/9002/redis.conf</div><div class="line"># /usr/local/bin/redis-server /opt/redis_cluster/9003/redis.conf</div><div class="line"># /usr/local/bin/redis-server /opt/redis_cluster/9004/redis.conf</div><div class="line"># /usr/local/bin/redis-server /opt/redis_cluster/9005/redis.conf</div></pre></td></tr></table></figure>
</li>
<li><p>检查是否启动成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># ps -ef |grep redis</div><div class="line"># /usr/local/bin/redis-cli -h 127.0.0.1 -p 9000</div></pre></td></tr></table></figure>
<p>连接成功，set值会报(error) CLUSTERDOWN Hash slot not served错误，原因是实例之间无法相互发现，我们继续</p>
</li>
<li><p>安装集群所需软件<br>由于 Redis 集群是用ruby实现的集群管理，所以安装ruby相关软件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># yum install ruby</div><div class="line"># yum install rubygems</div><div class="line"># gem install redis</div></pre></td></tr></table></figure>
<p>此处需要安装大于等于2.2的ruby版本</p>
</li>
<li><p>配置集群<br>通过redis-trib.rb命令创建集群，如果/usr/local/bin/目录没有，从源码包拷贝一个即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># /usr/local/bin/redis-trib.rb create --replicas 1 127.0.0.1:9000 127.0.0.1:9001 127.0.0.1:9002 127.0.0.1:9003 127.0.0.1:9004 127.0.0.1:9005</div></pre></td></tr></table></figure>
<p>交互过程中输入yes，同意即可，–replicas 1表示主从复制比例为 1:1，即一个主节点对应一个从节点</p>
</li>
<li><p>验证</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">  # /usr/local/bin/redis-cli -h 127.0.0.1 -p 9000</div><div class="line">127.0.0.1:9000&gt; cluster info</div><div class="line">cluster_state:ok</div><div class="line">cluster_slots_assigned:16384</div><div class="line">cluster_slots_ok:16384</div><div class="line">cluster_slots_pfail:0</div><div class="line">cluster_slots_fail:0</div><div class="line">cluster_known_nodes:6</div><div class="line">cluster_size:3</div><div class="line">cluster_current_epoch:6</div><div class="line">cluster_my_epoch:1</div><div class="line">cluster_stats_messages_ping_sent:1122</div><div class="line">cluster_stats_messages_pong_sent:1060</div><div class="line">cluster_stats_messages_sent:2182</div><div class="line">cluster_stats_messages_ping_received:1060</div><div class="line">cluster_stats_messages_pong_received:1102</div><div class="line">cluster_stats_messages_received:2162</div><div class="line">127.0.0.1:9000&gt; cluster nodes</div><div class="line">4f8c920acc559c11153c5aaf856820ca39c443cb 10.200.1.11:9000@19000 myself,master - 0 1544424469000 1 connected 0-5460</div><div class="line">ec2af1f981c08bf01131545369c0600b91c5172c 10.200.1.11:9004@19004 slave 4f8c920acc559c11153c5aaf856820ca39c443cb 0 1544424468000 5 connected</div><div class="line">bcc85b3502c107f18557d11889739a2b6f0ed896 10.200.1.11:9003@19003 slave aadb89ee25e9849e758529c477f9af6ede99850a 0 1544424467000 4 connected</div><div class="line">923d1b67ee012927bf4de345143d5f93670c97b5 10.200.1.11:9001@19001 master - 0 1544424468909 2 connected 5461-10922</div><div class="line">aadb89ee25e9849e758529c477f9af6ede99850a 10.200.1.11:9002@19002 master - 0 1544424469920 3 connected 10923-16383</div><div class="line">70fad7237c2e8bb308167f7e8b7a7b670d333564 10.200.1.11:9005@19005 slave 923d1b67ee012927bf4de345143d5f93670c97b5 0 1544424468000 6 connected</div><div class="line">127.0.0.1:9000&gt;</div></pre></td></tr></table></figure>
<p>通过命令，可以详细的看出集群信息和各个节点状态，主从信息以及连接数、槽信息等</p>
</li>
<li><p>测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># /usr/local/bin/redis-cli -c -h 10.200.1.11 -p 9000</div><div class="line">10.200.1.11:9000&gt; set name test</div><div class="line">-&gt; Redirected to slot [5798] located at 10.200.1.11:9001</div><div class="line">OK</div><div class="line">10.200.1.11:9001&gt; get name</div><div class="line">&quot;test&quot;</div><div class="line">10.200.1.11:9001&gt; keys *</div><div class="line">1) &quot;name&quot;</div><div class="line">2) &quot;cache:test3&quot;</div><div class="line">10.200.1.11:9001&gt;</div></pre></td></tr></table></figure>
<p>-c 表示集群模式</p>
</li>
</ol>
<h5 id="不同机器的集群搭建"><a href="#不同机器的集群搭建" class="headerlink" title="不同机器的集群搭建"></a>不同机器的集群搭建</h5><p>和同一台机器搭建唯一的区别是通过redis-trib.rb命令创建集群，随便在一个实例上执行即可</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="http://www.cnblogs.com/mafly/p/redis_cluster.html" target="_blank" rel="external">Redis 集群搭建详细指南</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下安装redis]]></title>
      <url>http://tungsing.cc/2018/12/10/cache/redis/redis-install-linux/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>CentOS7 操作系统</li>
<li>Redis4 安装包</li>
</ul>
<a id="more"></a>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="yum方式"><a href="#yum方式" class="headerlink" title="yum方式"></a>yum方式</h5><ol>
<li><p>添加常用源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install epel-release</div></pre></td></tr></table></figure>
</li>
<li><p>安装redis</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install redis -y</div></pre></td></tr></table></figure>
</li>
<li><p>启动redis</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># systemctl start redis.service</div></pre></td></tr></table></figure>
</li>
<li><p>把redis服务作为开机启动项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># systemctl enable redis.service</div></pre></td></tr></table></figure>
</li>
<li><p>测试是否安装成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># redis-cli</div></pre></td></tr></table></figure>
<p>测试结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; set name test</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get name</div><div class="line">&quot;test&quot;</div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">1) &quot;name&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="源码方式"><a href="#源码方式" class="headerlink" title="源码方式"></a>源码方式</h5><ol>
<li><p><a href="https://redis.io/download" target="_blank" rel="external">官网</a>下载所需源码安装包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># wget http://download.redis.io/releases/redis-4.0.11.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>解压源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># tar -zxvf redis-4.0.11.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>打开解压目录执行安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># cd /opt/redis-4.0.11/src</div><div class="line"># make</div><div class="line"># make install</div></pre></td></tr></table></figure>
<p>安装过程中如果出现少依赖包，安装好依赖包后再执行此命令，<br>默认安装到/usr/local/bin/目录，也可以通过–prefix=/path自定义安装目录</p>
</li>
<li><p>检查是否安装成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># cd /usr/local/bin/</div><div class="line"># ls</div><div class="line">redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server</div></pre></td></tr></table></figure>
</li>
<li><p>配置并启动<br>拷贝/opt/redis-4.0.11/redis.conf文件到一个目录或不拷贝直接用,然后启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># /usr/local/bin/redis-server /opt/redis-4.0.11/redis.conf</div></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># /usr/local/bin/redis-cli</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>开始Redis之旅吧！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Windows下安装redis]]></title>
      <url>http://tungsing.cc/2018/12/10/cache/redis/redis-install/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Windows10 操作系统</li>
<li>Redis 安装包</li>
</ul>
<h4 id="下载redis安装包"><a href="#下载redis安装包" class="headerlink" title="下载redis安装包"></a>下载redis安装包</h4><p>在<a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="external">github</a>下载Redis-x64-3.2.100.zip包</p>
<a id="more"></a>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="命令方式"><a href="#命令方式" class="headerlink" title="命令方式"></a>命令方式</h5><ol>
<li>解压Redis-x64-3.2.100.zip</li>
<li><p>在解压后文件夹中的CMD命令窗口运行下面命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># redis-server.exe redis.windows.conf</div></pre></td></tr></table></figure>
<p> 结果如图：<br> <img src="/images/redis/win_redis.jpg" alt=""></p>
</li>
</ol>
<h5 id="服务方式"><a href="#服务方式" class="headerlink" title="服务方式"></a>服务方式</h5><ol>
<li>解压Redis-x64-3.2.100.zip</li>
<li><p>在解压后文件夹中的CMD命令窗口运行下面命令，把redis部署为windows服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># redis-server.exe --service-install redis.windows.conf</div></pre></td></tr></table></figure>
<p> 结果如图：<br> <img src="/images/redis/win_redis_service.jpg" alt=""></p>
</li>
<li>启动redis服务<ul>
<li>用redis-server –service-start命令启动<br><img src="/images/redis/win_redis_service_start.jpg" alt=""></li>
<li>或在控制面板–管理工具–服务中启动<br><img src="/images/redis/win_service_start.jpg" alt=""></li>
</ul>
</li>
</ol>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p>在解压后文件夹中的CMD命令窗口运行下面命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># redis-cli.exe</div></pre></td></tr></table></figure></p>
<p><img src="/images/redis/win_redis_test.jpg" alt=""></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>开始Redis之旅吧！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[初识redis]]></title>
      <url>http://tungsing.cc/2018/12/06/cache/redis/redis/</url>
      <content type="html"><![CDATA[<h4 id="Redis-介绍"><a href="#Redis-介绍" class="headerlink" title="Redis 介绍"></a>Redis 介绍</h4><p>Redis 是一款开源的，基于 BSD 许可的，高级键值 (key-value) 缓存 (cache) 和存储 (store) 系统。由于 Redis 的键包括 string，hash，list，set，sorted set，bitmap 和 hyperloglog，所以常常被称为数据结构服务器。你可以在这些类型上面运行原子操作，例如，追加字符串，增加哈希中的值，加入一个元素到列表，计算集合的交集、并集和差集，或者是从有序集合中获取最高排名的元素。</p>
<a id="more"></a>
<p>为了满足高性能，Redis 采用内存 (in-memory) 数据集 (dataset)。根据你的使用场景，你可以通过每隔一段时间转储数据集到磁盘，或者追加每条命令到日志来持久化。持久化也可以被禁用，如果你只是需要一个功能丰富，网络化的内存缓存。<br>Redis 还支持主从异步复制，非常快的非阻塞初次同步、网络断开时自动重连局部重同步。 其他特性包括：</p>
<ul>
<li>事务</li>
<li>订阅/发布</li>
<li>Lua 脚本</li>
<li>带 TTL 的键</li>
<li>LRU 回收健</li>
<li>自动故障转移 (failover)</li>
</ul>
<p>你可以通过多种语言来使用 Redis。</p>
<p>Redis 是由 ANSI C 语言编写的，在无需额外依赖下，运行于大多数 POSIX 系统，如 Linux、*BSD、OS X。Redis 是在 Linux 和 OS X 两款操作系统下开发和充分测试的，我们推荐 Linux 为部署环境。Redis 也可以运行在 Solaris 派生系统上，如 SmartOS，但是支持有待加强。没有官方支持的 Windows 构建版本，但是微软开发和维护了一个 64 位 Windows 的版本。</p>
<h4 id="与Memcache比较"><a href="#与Memcache比较" class="headerlink" title="与Memcache比较"></a>与Memcache比较</h4><table>
<thead>
<tr>
<th>比较点</th>
<th>memcache</th>
<th>redis</th>
</tr>
</thead>
<tbody>
<tr>
<td>网站</td>
<td><a href="www.memcached.org">www.memcached.org</a></td>
<td><a href="https://redis.io/" target="_blank" rel="external">redis.io</a></td>
</tr>
<tr>
<td>初始版本</td>
<td>2003</td>
<td>2009</td>
</tr>
<tr>
<td>服务器端脚本</td>
<td>没有</td>
<td>LUA脚本</td>
</tr>
<tr>
<td>分区</td>
<td>没有</td>
<td>Sharding</td>
</tr>
<tr>
<td>复制</td>
<td>没有</td>
<td>主从复制和多主复制</td>
</tr>
<tr>
<td>访问控制</td>
<td>SASL(简单认证与安全层)</td>
<td>简单的基于密码的控制</td>
</tr>
<tr>
<td>数据持久化</td>
<td>没有</td>
<td>有</td>
</tr>
<tr>
<td>事务</td>
<td>没有</td>
<td>乐观锁、命令块和脚本的原子执行</td>
</tr>
</tbody>
</table>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="https://stackoverflow.com/questions/10558465/memcached-vs-redis" target="_blank" rel="external">stackoverflow</a></p>
<ol>
<li><a href="https://coolshell.cn/articles/10739.html" target="_blank" rel="external">LUA脚本</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Weblogic 静默安装]]></title>
      <url>http://tungsing.cc/2018/09/14/web/container/weblogic-install/</url>
      <content type="html"><![CDATA[<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Linux CentOS6.9 系统</li>
<li>Weblogic 12c</li>
<li>JDK 1.8</li>
</ul>
<h4 id="下载Weblogic-Server"><a href="#下载Weblogic-Server" class="headerlink" title="下载Weblogic Server"></a>下载Weblogic Server</h4><p>直接去<a href="http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-main-097127.html" target="_blank" rel="external">官网</a>下载,下载需要用户名和密码，如果没有注册一个即可</p>
<a id="more"></a>
<h5 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h5><p>解压获得到fmw_12.2.1.0.0_wls.jar文件</p>
<h4 id="安装Weblogic-Server"><a href="#安装Weblogic-Server" class="headerlink" title="安装Weblogic Server"></a>安装Weblogic Server</h4><h5 id="准备-1"><a href="#准备-1" class="headerlink" title="准备"></a>准备</h5><ol>
<li>如果没有安装JDK，需要安装，保证环境变量正确</li>
<li><p>新建用户组weblogic</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#groupadd weblogic</div></pre></td></tr></table></figure>
</li>
<li><p>新建用户weblogic 并修改用户密码<br>添加用户，并用-g参数来制定 web用户组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#useradd -g weblogic weblogic</div><div class="line">#passwd 密码</div></pre></td></tr></table></figure>
</li>
<li><p>切换到weblogic用户</p>
</li>
<li>准备安装目录 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/weblogic</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><ol>
<li><p>创建响应文件wls.rsp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">[ENGINE]</div><div class="line"></div><div class="line">#DO NOT CHANGE THIS.</div><div class="line">Response File Version=1.0.0.0.0</div><div class="line"></div><div class="line">[GENERIC]</div><div class="line">#The oracle home location. This can be an existing Oracle Home or a new Oracle Home</div><div class="line"></div><div class="line">ORACLE_HOME=/opt/weblogic/middleware</div><div class="line"></div><div class="line">#Set this variable value to the Installation Type selected. e.g. WebLogic Server, Coherence, Complete with Examples.</div><div class="line"></div><div class="line">INSTALL_TYPE=WebLogic Server</div><div class="line"></div><div class="line">#Provide the My Oracle Support Username. If you wish to ignore Oracle Configuration Manager configuration provide empty string for user name.</div><div class="line"></div><div class="line">MYORACLESUPPORT_USERNAME=</div><div class="line"></div><div class="line">#Provide the My Oracle Support Password</div><div class="line"></div><div class="line">MYORACLESUPPORT_PASSWORD=&lt;SECURE VALUE&gt;</div><div class="line"></div><div class="line">#Set this to true if you wish to decline the security updates. Setting this to true and providing empty string for My Oracle Support username will ignore the Oracle Configuration Manager co</div><div class="line">nfiguration</div><div class="line"></div><div class="line">DECLINE_SECURITY_UPDATES=true</div><div class="line"></div><div class="line">#Set this to true if My Oracle Support Password is specified</div><div class="line"></div><div class="line">SECURITY_UPDATES_VIA_MYORACLESUPPORT=false</div><div class="line"></div><div class="line">#Provide the Proxy Host</div><div class="line"></div><div class="line">PROXY_HOST=</div><div class="line"></div><div class="line">#Provide the Proxy Port</div><div class="line"></div><div class="line">PROXY_PORT=</div><div class="line"></div><div class="line">#Provide the Proxy Username</div><div class="line"></div><div class="line">PROXY_USER=</div><div class="line"></div><div class="line">#Provide the Proxy Password</div><div class="line"></div><div class="line">PROXY_PWD=&lt;SECURE VALUE&gt;</div><div class="line"></div><div class="line">#Type String (URL format) Indicates the OCM Repeater URL which should be of the format [scheme[Http/Https]]://[repeater host]:[repeater port]</div><div class="line"></div><div class="line">COLLECTOR_SUPPORTHUB_URL=</div></pre></td></tr></table></figure>
</li>
<li><p>创建Loc文件 oraInst.loc</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># vi /opt/weblogic/oraInst.loc</div><div class="line"></div><div class="line">inventory_loc=/opt/weblogic/oraInventory</div><div class="line">inst_group=weblogic</div></pre></td></tr></table></figure>
</li>
<li><p>保证所需要得目录weblogic用户要用读写权限</p>
</li>
<li>安装, wls.rsp，oraInst.loc必须指定绝对路径<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># java -jar fmw_12.2.1.0.0_wls.jar  -silent  -responseFile  /opt/weblogic/wls.rsp  -invPtrLoc /opt/weblogic/oraInst.loc</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">启动程序日志文件为/tmp/OraInstall2018-10-02_11-25-44AM/launcher2018-10-02_11-25-44AM.log。</div><div class="line">正在提取文件......................</div><div class="line">......................................</div><div class="line"></div><div class="line">已启用此会话的验证。</div><div class="line">正在验证数据</div><div class="line">复制文件</div><div class="line">完成百分比: 10</div><div class="line">完成百分比: 20</div><div class="line">完成百分比: 30</div><div class="line">完成百分比: 40</div><div class="line">完成百分比: 50</div><div class="line">完成百分比: 60</div><div class="line">完成百分比: 70</div><div class="line">完成百分比: 80</div><div class="line">完成百分比: 90</div><div class="line">完成百分比: 100</div><div class="line">Oracle Fusion Middleware 12c WebLogic Server 和 Coherence 12.2.1.0.0 的 安装 已成功完成。</div><div class="line">日志已成功复制到/opt/weblogic/oraInventory/logs。</div></pre></td></tr></table></figure>
<p>看到上面的日志表示安装成功</p>
<h5 id="创建domain"><a href="#创建domain" class="headerlink" title="创建domain"></a>创建domain</h5><ol>
<li><p>准备脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd /opt/weblogic/middleware/wlserver/common/templates/scripts/wlst/</div><div class="line"># cp basicWLSDomain.py create_domain.py</div></pre></td></tr></table></figure>
</li>
<li><p>修改create_domain.py脚本</p>
<ul>
<li><p>设置密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">找到</div><div class="line"># Please set password here before using this script, e.g. cmo.setPassword(&apos;value&apos;)</div><div class="line">添加</div><div class="line">cmo.setPassword(&apos;密码&apos;)</div></pre></td></tr></table></figure>
</li>
<li><p>删除其他暂时用不到的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Create a JMS Server.</div><div class="line">到</div><div class="line"># Write the domain and close the domain template.</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>执行脚本</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># /opt/weblogic/middleware/oracle_common/common/bin/wlst.sh  /opt/weblogic/middleware/wlserver/common/templates/scripts/wlst/create_domain.py</div></pre></td></tr></table></figure>
<p>等待成功…</p>
<h5 id="启动server"><a href="#启动server" class="headerlink" title="启动server"></a>启动server</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># /opt/weblogic/middleware/user_projects/domains/basicWLSDomain/bin/startWebLogic.sh</div></pre></td></tr></table></figure>
<h5 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h5><p>在创建domain和启动server特别慢的时候，需要修改或添加环境配置</p>
<p>修改JAVA_HOME/lib/security目录下java.security<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">securerandom.source=file:/dev/random</div><div class="line">改为</div><div class="line">securerandom.source=file:/dev/./random</div></pre></td></tr></table></figure></p>
<p>或添加环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># export CONFIG_JVM_ARGS=&apos;-Djava.security.egd=file:/dev/./urandom&apos;</div></pre></td></tr></table></figure></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>安装好weblogic才是第一步，后续还有很多要学习的</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ol>
<li><a href="https://blog.csdn.net/mfanoffice2012/article/details/79560886" target="_blank" rel="external">Weblogic 12C 静默安装</a></li>
<li><a href="https://docs.oracle.com/middleware/12213/wls/index.html" target="_blank" rel="external">官方文档</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[WebSphere 安装]]></title>
      <url>http://tungsing.cc/2018/09/14/web/container/was-install/</url>
      <content type="html"><![CDATA[<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Linux CentOS6.9 系统</li>
<li>WebSphere 8.5</li>
</ul>
<h4 id="安装IBM-Installation-Manager"><a href="#安装IBM-Installation-Manager" class="headerlink" title="安装IBM Installation Manager"></a>安装IBM Installation Manager</h4><h5 id="下载IBM-Installation-Manager"><a href="#下载IBM-Installation-Manager" class="headerlink" title="下载IBM Installation Manager"></a>下载IBM Installation Manager</h5><p>基于<a href="https://www-945.ibm.com/support/fixcentral/swg/selectFixes?parent=ibm~Rational&amp;product=ibm/Rational/IBM+Installation+Manager&amp;function=all" target="_blank" rel="external">IBM Installation Manager</a>安装WebSphere，故下载</p>
<p><img src="/images/web/container/was1.jpg" alt=""><br>需要登录才可以下载，注册一个IBM ID就行<br><img src="/images/web/container/was2.jpg" alt=""></p>
<a id="more"></a>
<h5 id="解压并安装"><a href="#解压并安装" class="headerlink" title="解压并安装"></a>解压并安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip agent.installer.linux.gtk.x86_64_1.8.9000.20180313_1417.zip</div></pre></td></tr></table></figure>
<p>在解压目录中执行如下命令,默认安装目录为/opt/IBM/InstallationManager<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./installc -log log_file -acceptLicense</div></pre></td></tr></table></figure></p>
<p><a href="https://www.ibm.com/support/knowledgecenter/SSDV2W_1.8.5/com.ibm.silentinstall12.doc/topics/t_silent_installIM_IMinst.html" target="_blank" rel="external">installc命令的用法详见官方文档)</a></p>
<h4 id="安装WAS"><a href="#安装WAS" class="headerlink" title="安装WAS"></a>安装WAS</h4><h4 id="安装WAS-1"><a href="#安装WAS-1" class="headerlink" title="安装WAS"></a>安装WAS</h4><h5 id="下载WAS安装包"><a href="#下载WAS安装包" class="headerlink" title="下载WAS安装包"></a>下载WAS安装包</h5><p>到<a href="http://www-01.ibm.com/support/docview.wss?uid=swg27038624#linux" target="_blank" rel="external">官方地址</a>按步骤下载Linux版本的WAS。需要使用绑定了site number的IBM ID登录 <a href="https://www-112.ibm.com/software/howtobuy/passportadvantage/paocustomer/blueid/Entitlement?jadeAction=DISPLAY_SELF_NOMINATION" target="_blank" rel="external">IBM Passport Advantage Online website</a>，检索Part number找到相应的文件进行下载。以WAS ND 8.5.5为例， “CIK2HML,CIK2IML,CIK2JML”对应三个文件。<br><img src="/images/web/container/was3.jpg" alt=""></p>
<h5 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h5>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[记录Linux(Red Hat) 系统安装Oracle数据库]]></title>
      <url>http://tungsing.cc/2018/05/16/oracle/oracle-install/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Red Hat 6.5 操作系统</li>
<li>Oracle11g 安装包</li>
</ul>
<h4 id="下载Oracle11g安装包"><a href="#下载Oracle11g安装包" class="headerlink" title="下载Oracle11g安装包"></a>下载Oracle11g安装包</h4><p>在<a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/112010-linx8664soft-100572.html" target="_blank" rel="external">官网</a>。本文安装的是Oracle 11gR2。<br><img src="/images/oracle/1.jpg" alt=""></p>
<h4 id="安装准备-root用户下"><a href="#安装准备-root用户下" class="headerlink" title="安装准备(root用户下)"></a>安装准备(root用户下)</h4><h5 id="检查软件依赖包是否安装"><a href="#检查软件依赖包是否安装" class="headerlink" title="检查软件依赖包是否安装"></a>检查软件依赖包是否安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -q binutils compat-libstdc++-33 elfutils-libelf elfutils-libelf-devel gcc gcc-c++ glibc glibc-common glibc-devel glibc-headers kernel-headers ksh libaio libaio-devel libgcc libgomp libstdc++ libstdc++-devel make numactl-devel sysstat unixODBC unixODBC-devel</div></pre></td></tr></table></figure>
<p>上面哪个包显示XXX is not installed,就使用下面的命令安装必要的RPM包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y XXX</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>或者你如果嫌麻烦，可以直接执行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y binutils compat-libstdc++-33 elfutils-libelf elfutils-libelf-devel gcc gcc-c++ glibc glibc-common glibc-devel glibc-headers kernel-headers ksh libaio libaio-devel libgcc libgomp libstdc++ libstdc++-devel make numactl-devel sysstat unixODBC unixODBC-devel</div></pre></td></tr></table></figure></p>
<h5 id="创建用户组及用户，设置oracle密码"><a href="#创建用户组及用户，设置oracle密码" class="headerlink" title="创建用户组及用户，设置oracle密码"></a>创建用户组及用户，设置oracle密码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">groupadd oinstall &amp;&amp; groupadd dba</div><div class="line">useradd -g oinstall -G dba oracle</div><div class="line">passwd oracle</div></pre></td></tr></table></figure>
<h5 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改hosts文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/hosts</div></pre></td></tr></table></figure>
<p>在 127.0.0.1 行后面 添加你的主机名称（例如我的主机名为oracle）<br>在 ::1 行后面 添加你的主机名称（例如我的主机名为oracle）</p>
<h5 id="设置内核参数"><a href="#设置内核参数" class="headerlink" title="设置内核参数"></a>设置内核参数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysctl.conf</div></pre></td></tr></table></figure>
<p>在打开的文件底部添加下面内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">fs.aio-max-nr = 1048576</div><div class="line">fs.file-max = 6815744</div><div class="line">kernel.shmall = 2097152</div><div class="line">kernel.shmmax = 536870912</div><div class="line">kernel.shmmni = 4096</div><div class="line">kernel.sem = 250 32000 100 128</div><div class="line">net.ipv4.ip_local_port_range = 9000 65500</div><div class="line">net.core.rmem_default = 262144</div><div class="line">net.core.rmem_max = 4194304</div><div class="line">net.core.wmem_default = 262144</div><div class="line">net.core.wmem_max = 1048586</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -p</div></pre></td></tr></table></figure>
<h5 id="设置PAM资源限制"><a href="#设置PAM资源限制" class="headerlink" title="设置PAM资源限制"></a>设置PAM资源限制</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/security/limits.conf</div></pre></td></tr></table></figure>
<p>在打开的文件底部添加下面内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">oracle soft nproc 10240</div><div class="line">oracle hard nproc 65535</div><div class="line">oracle soft nofile 10240</div><div class="line">oracle hard nofile 65536</div><div class="line">oracle soft stack 10240</div></pre></td></tr></table></figure></p>
<h5 id="创建oracle11g安装目录"><a href="#创建oracle11g安装目录" class="headerlink" title="创建oracle11g安装目录"></a>创建oracle11g安装目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /home/oracle/oracle_11g/app/oracle/product/11.2.0/dbhome_1/</div><div class="line">chown -R oracle:oinstall /home/oracle/oracle_11g/app/</div><div class="line">chmod -R 775 /home/oracle/oracle_11g/app/</div><div class="line">mkdir -p /home/oracle/oracle_11g/oraInventory/</div><div class="line">chown -R oracle:oinstall /home/oracle/oracle_11g/oraInventory/</div><div class="line">chmod -R 775 /home/oracle/oracle_11g/oraInventory/</div></pre></td></tr></table></figure>
<h5 id="修改用户环境变量"><a href="#修改用户环境变量" class="headerlink" title="修改用户环境变量"></a>修改用户环境变量</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /home/oracle/.bash_profile</div></pre></td></tr></table></figure>
<p>在打开的文件中添加下面内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">umask</span> 022</div><div class="line"><span class="built_in">export</span> ORACLE_BASE=/home/oracle/oracle_11g/app</div><div class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/oracle/product/11.2.0/dbhome_1</div><div class="line"><span class="built_in">export</span> ORACLE_SID=orcl </div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:HOME/bin:<span class="variable">$ORACLE_HOME</span>/bin</div><div class="line"><span class="built_in">export</span> ORACLE_HOME_LISTENER</div><div class="line"><span class="built_in">export</span> ORACLE_UNQNAME=<span class="variable">$ORACLE_SID</span></div></pre></td></tr></table></figure></p>
<p>ps:ORACLE_SID=orcl 这里是用户自己定义的数据库名称，后面配置需要用到，设置后就不能再改。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> /home/oracle/.bash_profile</div></pre></td></tr></table></figure>
<h5 id="修改用户验证选项"><a href="#修改用户验证选项" class="headerlink" title="修改用户验证选项"></a>修改用户验证选项</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/pam.d/login</div></pre></td></tr></table></figure>
<p>在打开的文件中添加下面内容(root用户)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">session required /lib64/security/pam_limits.so</div><div class="line">session required pam_limits.so</div></pre></td></tr></table></figure></p>
<h5 id="解压oracle软件"><a href="#解压oracle软件" class="headerlink" title="解压oracle软件"></a>解压oracle软件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/oracle/oracle_11g/app</div><div class="line">unzip linux.x64_11gR2_database_1of2.zip </div><div class="line">unzip linux.x64_11gR2_database_2of2.zip </div><div class="line">chown -R oracle:oinstall /home/oracle/oracle_11g/app/database</div></pre></td></tr></table></figure>
<h4 id="配置安装-oracle用户下"><a href="#配置安装-oracle用户下" class="headerlink" title="配置安装(oracle用户下)"></a>配置安装(oracle用户下)</h4><h5 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">su oracle</div></pre></td></tr></table></figure>
<p>#####备份应答文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/oracle/oracle_11g/app/database/response</div><div class="line">mkdir rsp_bak</div><div class="line">ls</div><div class="line">dbca.rsp db_install.rsp netca.rsp rsp_bak</div><div class="line">cp *.rsp ./rsp_bak/</div></pre></td></tr></table></figure></p>
<h5 id="删除应答文件中的以-开头的注释行和空行"><a href="#删除应答文件中的以-开头的注释行和空行" class="headerlink" title="删除应答文件中的以#开头的注释行和空行"></a>删除应答文件中的以#开头的注释行和空行</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i <span class="string">'s/^#.*$//g'</span> *.rsp &amp;&amp; sed -i <span class="string">'/^$/d'</span> *.rsp</div></pre></td></tr></table></figure>
<h5 id="配置db-install-rsp"><a href="#配置db-install-rsp" class="headerlink" title="配置db_install.rsp"></a>配置db_install.rsp</h5><p>将以下配置添加到db_install.rsp文件中(下面的注释是对其上面参数的解释，拷贝时候一定要去掉里面的汉字注释，否则可能无法正常安装)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">oracle.install.responseFileVersion=/oracle/install/rspfmt_dbinstall_response_schema_v11_2_0</div><div class="line"><span class="comment">#默认即可</span></div><div class="line">oracle.install.option=INSTALL_DB_SWONLY</div><div class="line"><span class="comment">#安装类型</span></div><div class="line">ORACLE_HOSTNAME=oracle</div><div class="line"><span class="comment">#主机名称(hostname查询，这里要注意，主机名要在 /etc/hosts 文件中配置好ip对应关系，否则安装会报错)</span></div><div class="line">UNIX_GROUP_NAME=oinstall</div><div class="line"><span class="comment">#安装组</span></div><div class="line">INVENTORY_LOCATION=/home/oracle/oracle_11g/oraInventory</div><div class="line"><span class="comment">#INVENTORY目录位置，需填写成自己创建的目录位置</span></div><div class="line">SELECTED_LANGUAGES=en,zh_CN</div><div class="line"><span class="comment">#选择支持语言</span></div><div class="line">ORACLE_HOME=/home/oracle/oracle_11g/app/oracle/product/11.2.0/dbhome_1</div><div class="line"><span class="comment">#数据库目录地址</span></div><div class="line">ORACLE_BASE=/home/oracle/oracle_11g/app</div><div class="line"><span class="comment">#BASE目录地址</span></div><div class="line">oracle.install.db.InstallEdition=EE</div><div class="line"><span class="comment">#指定oracle版本</span></div><div class="line">oracle.install.db.isCustomInstall=<span class="literal">false</span></div><div class="line"><span class="comment">#是否自定义安装，false表示使用默认组件</span></div><div class="line">oracle.install.db.customComponents=oracle.server:11.2.0.1.0,oracle.sysman.ccr:10.2.7.0.0,oracle.xdk:11.2.0.1.0,oracle.rdbms.oci:11.2.0.1.0,oracle.network:11.2.0.1.0,oracle.network.listener:11.2.0.1.0,oracle.rdbms:11.2.0.1.0,oracle.options:11.2.0.1.0,oracle.rdbms.partitioning:11.2.0.1.0,oracle.oraolap:11.2.0.1.0,oracle.rdbms.dm:11.2.0.1.0,oracle.rdbms.dv:11.2.0.1.0,orcle.rdbms.lbac:11.2.0.1.0,oracle.rdbms.rat:11.2.0.1.0</div><div class="line">oracle.install.db.DBA_GROUP=dba</div><div class="line"><span class="comment">#dba用户组</span></div><div class="line">oracle.install.db.OPER_GROUP=oinstall</div><div class="line"><span class="comment">#oper用户组</span></div><div class="line">oracle.install.db.CLUSTER_NODES=</div><div class="line">oracle.install.db.config.starterdb.type=GENERAL_PURPOSE</div><div class="line"><span class="comment">#数据库类型</span></div><div class="line">oracle.install.db.config.starterdb.globalDBName=orcl  </div><div class="line"><span class="comment">#globalDBName（这里要和第8步配置的sid一致）</span></div><div class="line">oracle.install.db.config.starterdb.SID=orcl</div><div class="line"><span class="comment">#SID（这里要和第8步配置的sid一致）</span></div><div class="line">oracle.install.db.config.starterdb.characterSet=AL32UTF8</div><div class="line"><span class="comment">#使用的编码格式</span></div><div class="line">oracle.install.db.config.starterdb.memoryOption=<span class="literal">true</span></div><div class="line">oracle.install.db.config.starterdb.memoryLimit=1024</div><div class="line"><span class="comment">#自动管理的内存大小(M)</span></div><div class="line">oracle.install.db.config.starterdb.installExampleSchemas=<span class="literal">false</span></div><div class="line">oracle.install.db.config.starterdb.enableSecuritySettings=<span class="literal">true</span></div><div class="line">oracle.install.db.config.starterdb.password.ALL=123456</div><div class="line"><span class="comment">#设定所有数据库用户使用同一个密码</span></div><div class="line">oracle.install.db.config.starterdb.password.SYS=</div><div class="line">oracle.install.db.config.starterdb.password.SYSTEM=</div><div class="line">oracle.install.db.config.starterdb.password.SYSMAN=</div><div class="line">oracle.install.db.config.starterdb.password.DBSNMP=</div><div class="line">oracle.install.db.config.starterdb.control=DB_CONTROL</div><div class="line">oracle.install.db.config.starterdb.gridcontrol.gridControlServiceURL=</div><div class="line">oracle.install.db.config.starterdb.dbcontrol.enableEmailNotification=<span class="literal">false</span></div><div class="line">oracle.install.db.config.starterdb.dbcontrol.emailAddress=</div><div class="line">oracle.install.db.config.starterdb.dbcontrol.SMTPServer=</div><div class="line">oracle.install.db.config.starterdb.automatedBackup.enable=<span class="literal">false</span></div><div class="line">oracle.install.db.config.starterdb.automatedBackup.osuid=</div><div class="line">oracle.install.db.config.starterdb.automatedBackup.ospwd=</div><div class="line">oracle.install.db.config.starterdb.storageType=</div><div class="line">oracle.install.db.config.starterdb.fileSystemStorage.dataLocation=</div><div class="line">oracle.install.db.config.starterdb.fileSystemStorage.recoveryLocation=</div><div class="line">oracle.install.db.config.asm.diskGroup=</div><div class="line">oracle.install.db.config.asm.ASMSNMPPassword=</div><div class="line">MYORACLESUPPORT_USERNAME=</div><div class="line">MYORACLESUPPORT_PASSWORD=</div><div class="line">SECURITY_UPDATES_VIA_MYORACLESUPPORT=</div><div class="line">DECLINE_SECURITY_UPDATES=<span class="literal">true</span></div><div class="line"><span class="comment">#设置安全更新(貌似是有bug，这个一定要选true，否则会无限提醒邮件地址有问题，终止安装。PS：不管地址对不对)</span></div><div class="line">PROXY_HOST=</div><div class="line">PROXY_PORT=</div><div class="line">PROXY_USER=</div><div class="line">PROXY_PWD=</div></pre></td></tr></table></figure></p>
<h5 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/oracle/oracle_11g/app/database</div><div class="line">./runInstaller -silent -force -noconfig -responseFile /home/oracle/oracle_11g/app/database/response/db_install.rsp</div></pre></td></tr></table></figure>
<p>silent:对于无提示模式下的操作, 输入内容可以是一个响应文件, 也可以是命令行变量值对的列表。<br>force:允许在非空目录中进行无提示模式的安装。<br>noconfig:不执行配置工具<br>responseFile:指定要使用的响应文件和路径</p>
<p>此处遇到2个错误<br>1.could not initialize class sun.awt. x11.xtoolkit<br>解决：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">su root</div><div class="line"><span class="built_in">export</span> DISPLAY=:0.0</div><div class="line">xhost +</div><div class="line">access control disabled, clients can connect from any host</div></pre></td></tr></table></figure></p>
<p>如果xhost命令无法执行，安装对应软件即可</p>
<p>2.[FATAL] [INS-13013] 目标环境不满足一些必需要求<br>   对应日志文件仔细检查不满足项，发现是pdksh包不对<br>原因：Red Hat 中redhat-release已经被redhat-release-server包所取代，所以安装软件会无法识别Linux的版本。这时OUI会默认的使用Linux4的前置条件来检查现有的操作系统情况。<br>解决：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /home/oracle/oracle_11g/app/database/stage/cvu/cv/admin/cvu_config</div></pre></td></tr></table></figure></p>
<p>CV_ASSUME_DISTID=OEL4修改为CV_ASSUME_DISTID=OEL6</p>
<p>控制台直到出现以下提示则表示安装完成:<br><img src="/images/oracle/2.jpg" alt=""></p>
<h4 id="配置权限和安装库-root用户下"><a href="#配置权限和安装库-root用户下" class="headerlink" title="配置权限和安装库()root用户下"></a>配置权限和安装库()root用户下</h4><h5 id="运行orainstRoot-sh"><a href="#运行orainstRoot-sh" class="headerlink" title="运行orainstRoot.sh"></a>运行orainstRoot.sh</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">su - root </div><div class="line">/home/oracle/oracle_11g/oraInventory/orainstRoot.sh</div></pre></td></tr></table></figure>
<p>脚本执行后主要进行的操作：<br>更改权限/home/oracle/oracle_11g/oraInventory.<br>添加组的读取和写入权限。<br>删除全局的读取, 写入和执行权限。<br>更改组名/home/oracle/oracle_11g/oraInventory 到 oinstall.</p>
<h5 id="运行root-sh"><a href="#运行root-sh" class="headerlink" title="运行root.sh"></a>运行root.sh</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/home/oracle/oracle_11g/app/oracle/product/11.2.0/dbhome_1/root.sh</div></pre></td></tr></table></figure>
<p>Check /home/oracle/oracle_11g/app/oracle/product/11.2.0/dbhome_1/install/root_m22p135_2017-08-07_16-39-28.log for the output of root script</p>
<h5 id="添加oracle环境变量"><a href="#添加oracle环境变量" class="headerlink" title="添加oracle环境变量"></a>添加oracle环境变量</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">vim /home/oracle/.bash_profile</div><div class="line"></div><div class="line"><span class="built_in">export</span> TNS_ADMIN=<span class="variable">$ORACLE_HOME</span>/network/admin</div><div class="line"><span class="built_in">export</span> PATH=.:<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$HOME</span>/bin:<span class="variable">$ORACLE_HOME</span>/bin</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:/usr/bin:/bin:/usr/bin/X11:/usr/<span class="built_in">local</span>/bin</div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$&#123;LD_LIBRARY_PATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/lib</div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$&#123;LD_LIBRARY_PATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/oracm/lib</div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$&#123;LD_LIBRARY_PATH&#125;</span>:/lib:/usr/lib:/usr/<span class="built_in">local</span>/lib</div><div class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$&#123;CLASSPATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/JRE</div><div class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$&#123;CLASSPATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/JRE/lib</div><div class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$&#123;CLASSPATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/jlib</div><div class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$&#123;CLASSPATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/rdbms/jlib</div><div class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$&#123;CLASSPATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/network/jlib</div><div class="line"><span class="built_in">export</span> LIBPATH=<span class="variable">$&#123;CLASSPATH&#125;</span>:<span class="variable">$ORACLE_HOME</span>/lib:<span class="variable">$ORACLE_HOME</span>/ctx/lib</div><div class="line"><span class="built_in">export</span> ORACLE_OWNER=oracle</div><div class="line"><span class="built_in">export</span> SPFILE_PATH=<span class="variable">$ORACLE_HOME</span>/dbs</div><div class="line"><span class="built_in">export</span> ORA_NLS10=<span class="variable">$ORACLE_HOME</span>/nls/data</div><div class="line"></div><div class="line"><span class="built_in">source</span> /home/oracle/.bash_profile</div></pre></td></tr></table></figure>
<h5 id="静默配置监听"><a href="#静默配置监听" class="headerlink" title="静默配置监听"></a>静默配置监听</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/home/oracle/oracle_11g/app/oracle/product/11.2.0/dbhome_1/bin/netca -silent -responseFile /home/oracle/oracle_11g/app/database/response/netca.rsp</div></pre></td></tr></table></figure>
<p><em>**</em>DISPLAY environment variable not set!<br>    Oracle Net Configuration Assistant is a GUI tool<br>    which requires that DISPLAY specify a location<br>    where GUI tools can display.<br>    Set and export DISPLAY, then re-run.</p>
<p>解决方法：切换root下</p>
<pre><code>export DISPLAY=127.0.0.1:1.0 
</code></pre><h5 id="静默安装数据库"><a href="#静默安装数据库" class="headerlink" title="静默安装数据库"></a>静默安装数据库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span>&gt; /home/oracle/oracle_11g/app/database/response/dbca.rsp</div><div class="line">vim /home/oracle/oracle_11g/app/database/response/dbca.rsp </div><div class="line"></div><div class="line">[GENERAL]</div><div class="line">RESPONSEFILE_VERSION = <span class="string">"11.2.0"</span></div><div class="line">OPERATION_TYPE = <span class="string">"createDatabase"</span></div><div class="line">[CREATEDATABASE]</div><div class="line">GDBNAME = <span class="string">"orcl"</span></div><div class="line">SID = <span class="string">"orcl"</span></div><div class="line">TEMPLATENAME = <span class="string">"General_Purpose.dbc"</span></div><div class="line">CHARACTERSET=<span class="string">"AL32UTF8"</span></div><div class="line">NATIONALCHARACTERSET=<span class="string">"UTF8"</span></div><div class="line">SYSPASSWORD=<span class="string">"123456"</span></div><div class="line">SYSTEMPASSWORD=<span class="string">"123456"</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/home/oracle/oracle_11g/app/oracle/product/11.2.0/dbhome_1//bin/dbca -silent -responseFile /home/oracle/oracle_11g/app/database/response/dbca.rsp</div></pre></td></tr></table></figure>
<p>控制台输出：<br><img src="/images/oracle/3.jpg" alt=""></p>
<h5 id="测试数据库"><a href="#测试数据库" class="headerlink" title="测试数据库"></a>测试数据库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqlplus / as sysdba</div></pre></td></tr></table></figure>
<p>连接成功后，输入sql语句测试<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt;show parameter;</div></pre></td></tr></table></figure></p>
<h5 id="监听检查"><a href="#监听检查" class="headerlink" title="监听检查"></a>监听检查</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl status</div></pre></td></tr></table></figure>
<p><img src="/images/oracle/4.jpg" alt=""></p>
<p>启动监听：lsnrctl start<br>查看监听：lsnrctl status<br>停止监听：lsnrctl stop</p>
<p>实例应该被动态注册到监听程序了. 到此oracle安装建库完毕!，在oracle用户下使用sqlplus登录数据库查看数据库是否安装成功！</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="http://www.jiagoumi.com/work/1210.html" target="_blank" rel="external">Centos下静默(命令行)方式安装Oracle 11g</a><br>2.<a href="http://www.xwood.net/_site_domain_/_root/5870/5874/t_c265366.html" target="_blank" rel="external">在Centos安装oracle.x64_11gR2</a><br>3.<a href="https://blog.csdn.net/renfengjun/article/details/72831344" target="_blank" rel="external">OracleDatabase安装在Linux上报错pdksh的问题</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Thread类]]></title>
      <url>http://tungsing.cc/2018/02/09/java/thread/chapter03/</url>
      <content type="html"><![CDATA[<h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><h4 id="对象方法"><a href="#对象方法" class="headerlink" title="对象方法"></a>对象方法</h4><ol>
<li><p>start方法：启动线程，调用start方法后，系统才会开启一个新的线程来执行用户定义的子任务，同时，会为线程分配资源。</p>
</li>
<li><p>run方法：用户不需要调用，当start方法启动线程并获得CPU执行时间后，便自动执行run方法体中的任务。（所以，继承Thread类必须重写run方法，在run方法中定义具体要执行的任务）。</p>
</li>
<li><p>sleep方法：交出CPU让线程睡眠，CPU可执行其他任务。</p>
</li>
<li><p>yield方法：该线程就会把CPU时间让掉，让其他或者自己的线程执行（也就是谁先抢到谁执行）。但是yield不能控制具体的交出CPU的时间，只能让相同优先级的线程获取CPU执行时间的机会。<br>　　注意，调用yield方法并不会让线程进入阻塞状态，而是让线程重回就绪状态，它只需要等待重新获取CPU执行时间，这一点是和sleep方法不一样的。</p>
</li>
<li><p>join方法:让“主线程”等待“子线程”结束之后才能继续运行。实际上，调用join方法是调用了Object的wait方法，wait方法会让线程进入阻塞状态，并且会释放线程占有的锁，并交出CPU执行权限，所以join方法同样会让线程释放对一个对象持有的锁。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="keyword">this</span>.getName() + <span class="string">"开始执行"</span>);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++) &#123;</div><div class="line">            <span class="keyword">if</span> (i == <span class="number">3</span>) &#123;</div><div class="line">                SubThread st = <span class="keyword">new</span> SubThread();</div><div class="line">                st.start();</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    st.join();</div><div class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        System.out.println(<span class="keyword">this</span>.getName() + <span class="string">"执行完毕"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="keyword">this</span>.getName() + <span class="string">"开始执行---&gt;&gt;&gt;"</span>);</div><div class="line">        <span class="comment">// 延时操作</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</div><div class="line">            System.out.println(<span class="keyword">this</span>.getName() + <span class="string">"执行中---&gt;&gt;&gt;"</span>);</div><div class="line">        &#125;</div><div class="line">        System.out.println(<span class="keyword">this</span>.getName() + <span class="string">"执行完成"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</div><div class="line">        MainThread mt = <span class="keyword">new</span> MainThread();</div><div class="line">        mt.start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 输出结果：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Thread-<span class="number">0</span>开始执行</div><div class="line">Thread-<span class="number">1</span>开始执行---&gt;&gt;&gt;</div><div class="line">Thread-<span class="number">1</span>执行中---&gt;&gt;&gt;</div><div class="line">Thread-<span class="number">1</span>执行中---&gt;&gt;&gt;</div><div class="line">Thread-<span class="number">1</span>执行中---&gt;&gt;&gt;</div><div class="line">Thread-<span class="number">1</span>执行中---&gt;&gt;&gt;</div><div class="line">Thread-<span class="number">1</span>执行中---&gt;&gt;&gt;</div><div class="line">Thread-<span class="number">1</span>执行完成</div><div class="line">Thread-<span class="number">0</span>执行完毕</div></pre></td></tr></table></figure>
<p> 说明：MainThread线程中启动了SubThread线程，等待SubThread执行完，主线程MainThread继续执行</p>
</li>
</ol>
<ol>
<li>interrupt方法：中断；<br>一、可以中断一个正处于阻塞状态的线程；<br>二、通过组合interrupt方法和isInterrupted()方法可停止正在运行的线程。</li>
</ol>
<a id="more"></a>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[创建线程]]></title>
      <url>http://tungsing.cc/2018/02/09/java/thread/chapter02/</url>
      <content type="html"><![CDATA[<h4 id="常用创建线程方式"><a href="#常用创建线程方式" class="headerlink" title="常用创建线程方式"></a>常用创建线程方式</h4><p>方式一：继承Thread类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"运行中---&gt;&gt;&gt;"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>方式二：实现Runnable接口<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"运行中---&gt;&gt;&gt;"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="Thread和Runnable的不同点"><a href="#Thread和Runnable的不同点" class="headerlink" title="Thread和Runnable的不同点"></a>Thread和Runnable的不同点</h4><ol>
<li><p>Thread 是类，而Runnable是接口；<br>Thread本身是实现了Runnable接口的类。我们知道“一个类只能有一个父类，但是却能实现多个接口”，因此Runnable具有更好的扩展性。</p>
</li>
<li><p>Runnable还可以用于“资源的共享”。<br>多个线程都是基于某一个Runnable对象建立的，它们会共享Runnable对象上的资源。</p>
</li>
</ol>
<p>Thread多线程例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticket = <span class="number">10</span>;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.ticket &gt; <span class="number">0</span>) &#123;</div><div class="line">                System.out.println(<span class="keyword">this</span>.getName() + <span class="string">" 卖票：ticket"</span> + <span class="keyword">this</span>.ticket--);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SimpleThread st1 = <span class="keyword">new</span> SimpleThread();</div><div class="line">        SimpleThread st2 = <span class="keyword">new</span> SimpleThread();</div><div class="line">        SimpleThread st3 = <span class="keyword">new</span> SimpleThread();</div><div class="line">        st1.start();</div><div class="line">        st2.start();</div><div class="line">        st3.start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">Thread-2 卖票：ticket10</div><div class="line">Thread-1 卖票：ticket10</div><div class="line">Thread-0 卖票：ticket10</div><div class="line">Thread-0 卖票：ticket9</div><div class="line">Thread-1 卖票：ticket9</div><div class="line">Thread-2 卖票：ticket9</div><div class="line">Thread-1 卖票：ticket8</div><div class="line">Thread-0 卖票：ticket8</div><div class="line">Thread-1 卖票：ticket7</div><div class="line">Thread-2 卖票：ticket8</div><div class="line">Thread-1 卖票：ticket6</div><div class="line">Thread-0 卖票：ticket7</div><div class="line">Thread-1 卖票：ticket5</div><div class="line">Thread-2 卖票：ticket7</div><div class="line">Thread-1 卖票：ticket4</div><div class="line">Thread-0 卖票：ticket6</div><div class="line">Thread-1 卖票：ticket3</div><div class="line">Thread-2 卖票：ticket6</div><div class="line">Thread-1 卖票：ticket2</div><div class="line">Thread-0 卖票：ticket5</div><div class="line">Thread-1 卖票：ticket1</div><div class="line">Thread-2 卖票：ticket5</div><div class="line">Thread-0 卖票：ticket4</div><div class="line">Thread-2 卖票：ticket4</div><div class="line">Thread-0 卖票：ticket3</div><div class="line">Thread-2 卖票：ticket3</div><div class="line">Thread-0 卖票：ticket2</div><div class="line">Thread-2 卖票：ticket2</div><div class="line">Thread-0 卖票：ticket1</div><div class="line">Thread-2 卖票：ticket1</div></pre></td></tr></table></figure></p>
<p>结果表明：</p>
<ol>
<li>每个SimpleThread线程都会卖出10张票</li>
<li>主线程main创建并启动3个SimpleThread子线程。每个子线程都各自卖出了10张票。</li>
</ol>
<p>Runnable多线程例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticket = <span class="number">10</span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.ticket &gt; <span class="number">0</span>) &#123;</div><div class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">" 卖票：ticket"</span> + <span class="keyword">this</span>.ticket--);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SimpleRunnable sr = <span class="keyword">new</span> SimpleRunnable();</div><div class="line">        <span class="comment">// 启动3个线程t1,t2,t3(它们共用一个Runnable对象)，这3个线程一共卖10张票！</span></div><div class="line">        Thread t1 = <span class="keyword">new</span> Thread(sr);</div><div class="line">        Thread t2 = <span class="keyword">new</span> Thread(sr);</div><div class="line">        Thread t3 = <span class="keyword">new</span> Thread(sr);</div><div class="line">        t1.start();</div><div class="line">        t2.start();</div><div class="line">        t3.start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Thread-0 卖票：ticket10</div><div class="line">Thread-1 卖票：ticket8</div><div class="line">Thread-2 卖票：ticket9</div><div class="line">Thread-1 卖票：ticket6</div><div class="line">Thread-0 卖票：ticket7</div><div class="line">Thread-1 卖票：ticket4</div><div class="line">Thread-2 卖票：ticket5</div><div class="line">Thread-1 卖票：ticket2</div><div class="line">Thread-0 卖票：ticket3</div><div class="line">Thread-2 卖票：ticket1</div></pre></td></tr></table></figure></p>
<p>结果表明：</p>
<ol>
<li>SimpleThread线程也是卖10张票，不同的是它实现了Runnable接口，而不是继承Thread类</li>
<li><p>主线程main创建并启动3个子线程，而且这3个子线程都是基于“sr这个Runnable对象”而创建的。运行结果是这3个子线程一共卖出了10张票。这说明它们是共享了SimpleThread接口的。</p>
<h4 id="其他创建方式"><a href="#其他创建方式" class="headerlink" title="其他创建方式"></a>其他创建方式</h4><p>//todo</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[认识线程]]></title>
      <url>http://tungsing.cc/2018/02/09/java/thread/chapter01/</url>
      <content type="html"><![CDATA[<h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>进程：正在执行中的程序，其实是应用程序在内存中运行的那片空间。<br>线程：进程中的一个执行单元，负责进程中的程序的运行，一个进程中至少要有一个线程。一个进程中可以有多个线程的，这个应用程序也可以称之为多线程程序。</p>
<h4 id="线程分类"><a href="#线程分类" class="headerlink" title="线程分类"></a>线程分类</h4><ol>
<li>用户线程<br>Java虚拟机在它所有非守护线程已经离开后自动离开。</li>
<li>守护线程(Daemon)<br>守护线程则是用来服务用户线程的，如果没有其他用户线程在运行，那么就没有可服务对象，也就没有理由继续下去。</li>
</ol>
<h4 id="线程优先级"><a href="#线程优先级" class="headerlink" title="线程优先级"></a>线程优先级</h4><p>线程的优先级从1到10，1是最不重要的，10是最重要的。如果没有给线程设置优先级，那么线程的优先级将是默认值5。</p>
<a id="more"></a>
<h4 id="线程的内存模型"><a href="#线程的内存模型" class="headerlink" title="线程的内存模型"></a>线程的内存模型</h4><p>//todo</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://my.oschina.net/langxSpirit/blog/825290" target="_blank" rel="external">https://my.oschina.net/langxSpirit/blog/825290</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[XtraBackup搭建Mysql物理备份]]></title>
      <url>http://tungsing.cc/2017/11/28/mysql/mysql-bak/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Linux CentOS6 操作系统</li>
<li>Mysql5.6 </li>
<li>XtraBackup 2.4.8</li>
</ul>
<h4 id="XtraBackup简介"><a href="#XtraBackup简介" class="headerlink" title="XtraBackup简介"></a>XtraBackup简介</h4><p>Percona XtraBackup是一个免费开源数据备份工具，支持在线无锁表同步复制和可并行高效率的安全备份恢复机制，相比mysqldump来说确实让人眼前一亮。</p>
<h4 id="下载mysql安装包"><a href="#下载mysql安装包" class="headerlink" title="下载mysql安装包"></a>下载mysql安装包</h4><p>在<a href="https://www.percona.com/downloads/XtraBackup/LATEST/" target="_blank" rel="external">官网</a>安装包。<br><img src="/images/mysql/backup1.jpg" alt=""></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm</span></div><div class="line"><span class="comment"># rpm -ivh MySQL-shared-compat-5.6.38-1.el6.x86_64.rpm</span></div><div class="line"><span class="comment"># rpm -ivh perl-DBI-1.609-4.el6.x86_64.rpm </span></div><div class="line"><span class="comment"># rpm -ivh perl-DBD-MySQL-4.013-3.el6.x86_64.rpm</span></div><div class="line"><span class="comment"># rpm -ivh rsync-3.0.6-12.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rpm -ivh percona-xtrabackup-24-2.4.8-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="全量备份"><a href="#全量备份" class="headerlink" title="全量备份"></a>全量备份</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --user=root --password=123456 /home/databackup</span></div><div class="line">171128 14:51:16 [00]        ...done</div><div class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1626027) to (1626027) was copied.</div><div class="line">171128 14:51:17 completed OK!</div></pre></td></tr></table></figure>
<p>备份数据存放在/home/databackup/下面，innobackupex会自动创建一个文件夹，是当前系统的时间戳。</p>
<h5 id="增量备份"><a href="#增量备份" class="headerlink" title="增量备份"></a>增量备份</h5><p>在进行增量备份时，首先要进行一次全量备份，第一次增量备份是基于全备的，之后的增量备份是基于上一次的增量备份，以此类推。</p>
<ol>
<li>全量备份</li>
<li>在test库中创建表并增量备份<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE <span class="built_in">test</span>(  </div><div class="line">  `id` INT NOT NULL,</div><div class="line">  PRIMARY KEY (`id`)</div><div class="line">);</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --user=root --password=123456 --incremental /home/databackup/inc/ --incremental-basedir=/home/databackup/full/2017-11-28_16-08-17/</span></div><div class="line">171128 15:04:22 [00]        ...done</div><div class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1626027) to (1626027) was copied.</div><div class="line">171128 15:04:22 completed OK!</div></pre></td></tr></table></figure>
<ol>
<li>添加数据并增量备份<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; insert <span class="built_in">test</span> values(1);</div><div class="line">Query OK, 1 row affected (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from <span class="built_in">test</span>;</div><div class="line">+----+</div><div class="line">| id |</div><div class="line">+----+</div><div class="line">|  1 |</div><div class="line">+----+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --user=root --password=123456 --incremental /home/databackup/inc/ --incremental-basedir=/home/databackup/inc/2017-11-28_16-18-29/</span></div><div class="line">171128 15:04:22 [00]        ...done</div><div class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1626027) to (1626027) was copied.</div><div class="line">171128 15:04:22 completed OK!</div></pre></td></tr></table></figure>
<h5 id="全量恢复"><a href="#全量恢复" class="headerlink" title="全量恢复"></a>全量恢复</h5><ol>
<li><p>删除数据库(生产不要这么搞)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># drop database test;</span></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| logs               |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">+--------------------+</div><div class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
</li>
<li><p>恢复全备<br>恢复备份到mysql的数据文件目录，这一过程要先关闭mysql数据库，重命名或者删除原数据文件目录都可以，再创建一个新的数据文件目录，将备份数据复制到新的数据文件目录下，赋权，修改权限，启动数据库。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log /opt/databackup/full/2017-11-28_14-57-31/ </span></div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1626152</div><div class="line">171128 15:24:34 completed OK!</div><div class="line"></div><div class="line"><span class="comment">#innobackupex --defaults-file=/var/my.cnf --copy-back --rsync /home/databackup/full/2017-11-28_14-57-31/</span></div><div class="line">171128 15:36:01 [01]        ...done</div><div class="line">171128 15:36:01 [01] Copying ./<span class="built_in">test</span>/db.opt to /home/data/mysql/<span class="built_in">test</span>/db.opt</div><div class="line">171128 15:36:01 [01]        ...done</div><div class="line">171128 15:36:01 completed OK!</div></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| logs               |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| <span class="built_in">test</span>               |</div><div class="line">+--------------------+</div><div class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="增量恢复"><a href="#增量恢复" class="headerlink" title="增量恢复"></a>增量恢复</h5><p>增量备份的恢复大体为3个步骤</p>
<ol>
<li><p>恢复完全备份<br>注意：这里一定要加–redo-only参数，该参数的意思是只应用xtrabackup日志中已提交的事务数据，不回滚还未提交的数据</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log --redo-only /home/databackup/full/2017-11-28_16-08-17/</span></div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1626171</div><div class="line">InnoDB: Number of pools: 1</div><div class="line">171128 16:24:41 completed OK!</div></pre></td></tr></table></figure>
</li>
<li><p>恢复增量备份到完全备份<br>注意：开始恢复的增量备份要添加–redo-only参数，到最后一次增量备份去掉–redo-only参数<br>第1次：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log --redo-only /home/databackup/full/2017-11-28_16-08-17/ --incremental-dir=/home/databackup/inc/2017-11-28_16-18-29/</span></div><div class="line">171128 16:28:00 [00] Copying /home/databackup/inc/2017-11-28_16-18-29//xtrabackup_binlog_info to ./xtrabackup_binlog_info</div><div class="line">171128 16:28:00 [00]        ...done</div><div class="line">171128 16:28:00 [00] Copying /home/databackup/inc/2017-11-28_16-18-29//xtrabackup_info to ./xtrabackup_info</div><div class="line">171128 16:28:00 [00]        ...done</div><div class="line">171128 16:28:00 completed OK!</div></pre></td></tr></table></figure>
</li>
</ol>
<p>第…次，同第1次。</p>
<p>最后一次<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log  /home/databackup/full/2017-11-28_16-08-17/ --incremental-dir=/home/databackup/inc/2017-11-28_16-20-46/</span></div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1636904</div><div class="line">171128 16:32:58 completed OK!</div></pre></td></tr></table></figure></p>
<ol>
<li>对整体的完全备份进行恢复，回滚那些未提交的数据<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log /home/databackup/full/2017-11-28_16-08-17/</span></div><div class="line">InnoDB: FTS optimize thread exiting.</div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1636942</div><div class="line">171128 16:36:41 completed OK!</div></pre></td></tr></table></figure>
</li>
</ol>
<p>把恢复完的备份复制到数据库目录文件中，和全量备份恢复一样。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --defaults-file=/var/my.cnf --copy-back --rsync /home/databackup/full/2017-11-28_14-57-31/</span></div><div class="line">171128 16:42:34 [01] Copying ./<span class="built_in">test</span>/test.ibd to /home/data/mysql/<span class="built_in">test</span>/test.ibd</div><div class="line">171128 16:42:34 [01]        ...done</div><div class="line">171128 16:42:34 [01] Copying ./<span class="built_in">test</span>/db.opt to /home/data/mysql/<span class="built_in">test</span>/db.opt</div><div class="line">171128 16:42:34 [01]        ...done</div><div class="line">171128 16:42:34 completed OK!</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from <span class="built_in">test</span>;</div><div class="line">+----+</div><div class="line">| id |</div><div class="line">+----+</div><div class="line">|  1 |</div><div class="line">+----+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>真实场景还需仔细学习对应功能，写成自动化的脚本去运行。</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="http://www.cnblogs.com/gomysql/p/3650645.html" target="_blank" rel="external">xtrabackup 详解</a><br>2.<a href="https://wsgzao.github.io/post/xtrabackup/" target="_blank" rel="external">XtraBackup不停机不锁表搭建MySQL主从同步实践</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[记录Linux CentOS 系统安装Mysql数据库]]></title>
      <url>http://tungsing.cc/2017/11/28/mysql/mysql-install-linux/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Linux CentOS6 操作系统</li>
<li>Mysql5.6 安装包</li>
</ul>
<h4 id="下载mysql安装包"><a href="#下载mysql安装包" class="headerlink" title="下载mysql安装包"></a>下载mysql安装包</h4><p>在<a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="external">官网</a>下载社区版。本文安装的是mysql5.6。<br><img src="/images/mysql/17.jpg" alt=""></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="确认系统是否已经安装mysql，如果安装卸载后再安装"><a href="#确认系统是否已经安装mysql，如果安装卸载后再安装" class="headerlink" title="确认系统是否已经安装mysql，如果安装卸载后再安装"></a>确认系统是否已经安装mysql，如果安装卸载后再安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -qa |grep -i mysql</span></div></pre></td></tr></table></figure>
<p>如果安装mysql，卸载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ev MySQL-server-5.6.38-1.el6.x86_64.rpm</span></div><div class="line"><span class="comment">#rpm -ev MySQL-client-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure></p>
<p>注意：如果卸载不掉可以加nodeps强制卸载，或用yum命令卸载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ev MySQL-server-5.6.38-1.el6.x86_64.rpm --nodeps</span></div><div class="line"><span class="comment">#rpm -ev MySQL-client-5.6.38-1.el6.x86_64.rpm --nodeps</span></div><div class="line"><span class="comment">#yum remove MySQL-server-5.6.38-1.el6.x86_64.rpm</span></div><div class="line"><span class="comment">#yum remove MySQL-client-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure></p>
<h5 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#tar -xvf MySQL-5.6.38-1.el6.x86_64.rpm-bundle.tar</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#yum -y install perl</span></div><div class="line"><span class="comment">#rpm -ivh numactl-2.0.9-2.el6.x86_64.rpm</span></div><div class="line"><span class="comment">#rpm -ivh libaio-0.3.107-10.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="安装Mysql-server"><a href="#安装Mysql-server" class="headerlink" title="安装Mysql-server"></a>安装Mysql-server</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ivh MySQL-server-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="安装Mysql-client"><a href="#安装Mysql-client" class="headerlink" title="安装Mysql-client"></a>安装Mysql-client</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ivh MySQL-client-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="自定义数据路径"><a href="#自定义数据路径" class="headerlink" title="自定义数据路径"></a>自定义数据路径</h5><p>根据自己的实际情况创建数据文件夹，例如<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mkdir /home/data</span></div></pre></td></tr></table></figure></p>
<p>把默认的数据文件移动到刚刚创建的数据目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mv /var/lib/mysql /home/data</span></div></pre></td></tr></table></figure></p>
<h5 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">datadir = /home/data/mysql</div><div class="line">port = 3306</div><div class="line">server_id = 1</div><div class="line">socket = /home/data/mysql/mysql.sock</div><div class="line">log_bin = mysql-bin</div><div class="line">binlog_format = mixed  </div><div class="line">expire_logs_days = 30</div><div class="line">log_error = /home/data/mysql/logs/mysql-error.log</div><div class="line">explicit_defaults_for_timestamp=1</div></pre></td></tr></table></figure>
<p>注：此处重点是修改datadir和socket的路径</p>
<h5 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#service mysql start</span></div><div class="line">Starting MySQL. SUCCESS!</div></pre></td></tr></table></figure>
<h5 id="登陆mysql"><a href="#登陆mysql" class="headerlink" title="登陆mysql"></a>登陆mysql</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mysql -uroot -p</span></div></pre></td></tr></table></figure>
<p>注：这个地方输入默认密码，默认密码在/root/.mysql_secret文件中。此处应该会报错，解决办法如下</p>
<ol>
<li><p>mysql 命令加参数</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mysql -h 127.0.0.1 -uroot -p</span></div></pre></td></tr></table></figure>
</li>
<li><p>加软链接(快捷方式)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#ln -s /home/data/mysql/mysql.sock /var/lib/mysql</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改配置，但这个方法没有成功，网上很多资料成功了</p>
</li>
</ol>
<p>登陆成功后，首先要设置密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#set password = password('此处为复杂度高的密码');</span></div></pre></td></tr></table></figure></p>
<h5 id="mysql服务加入开机启动项"><a href="#mysql服务加入开机启动项" class="headerlink" title="mysql服务加入开机启动项"></a>mysql服务加入开机启动项</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#chkconfig mysql on</span></div></pre></td></tr></table></figure>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>到此就安装结束了，剩余工作就是优化、配置mysql，适用于自己的项目。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SonarQube与jenkins集成]]></title>
      <url>http://tungsing.cc/2017/09/25/review/sonarqube-jenkins/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>使用 Jenkins 与 Sonar 集成对代码进行持续检测</p>
</blockquote>
<h4 id="jenkins-安装配置"><a href="#jenkins-安装配置" class="headerlink" title="jenkins 安装配置"></a>jenkins 安装配置</h4><p>jenkins安装配置比较简单，同样套路<a href="https://jenkins.io/download/" target="_blank" rel="external">官网</a>下载安装包，配置即可。</p>
<h4 id="SonarQube与jenkins集成配置"><a href="#SonarQube与jenkins集成配置" class="headerlink" title="SonarQube与jenkins集成配置"></a>SonarQube与jenkins集成配置</h4><h5 id="在jenkins的插件管理里下载SonarQube插件"><a href="#在jenkins的插件管理里下载SonarQube插件" class="headerlink" title="在jenkins的插件管理里下载SonarQube插件"></a>在jenkins的插件管理里下载SonarQube插件</h5><p><img src="/images/sonarqube/13.jpg" alt=""></p>
<a id="more"></a>
<h5 id="在jenkins系统设置里配置SonarQube插件"><a href="#在jenkins系统设置里配置SonarQube插件" class="headerlink" title="在jenkins系统设置里配置SonarQube插件"></a>在jenkins系统设置里配置SonarQube插件</h5><p><img src="/images/sonarqube/14.jpg" alt=""></p>
<h5 id="具体工程配置"><a href="#具体工程配置" class="headerlink" title="具体工程配置"></a>具体工程配置</h5><p><img src="/images/sonarqube/15.jpg" alt=""></p>
<h5 id="具体properties配置"><a href="#具体properties配置" class="headerlink" title="具体properties配置"></a>具体properties配置</h5><p>此文件放置到工作代码中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#项目标识</span></div><div class="line">sonar.projectKey=id</div><div class="line"><span class="comment">#项目名称</span></div><div class="line">sonar.projectName=name</div><div class="line"><span class="comment">#版本</span></div><div class="line">sonar.projectVersion=1.0</div><div class="line"><span class="comment">#编码</span></div><div class="line">sonar.sourceEncoding=UTF-8</div><div class="line"><span class="comment">#目录代码根目录</span></div><div class="line">sonar.sources=.</div><div class="line"></div><div class="line"><span class="comment">#项目模块</span></div><div class="line">sonar.modules=common,web</div><div class="line"></div><div class="line">common.sonar.projectName=common</div><div class="line">common.sonar.sources=.</div><div class="line"><span class="comment">#模块的语言</span></div><div class="line">common.sonar.language=java</div><div class="line"></div><div class="line">web.sonar.projectName=web</div><div class="line">sonar.sources=src</div><div class="line">web.sonar.language=js</div></pre></td></tr></table></figure></p>
<p>其他配置详见<a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner" target="_blank" rel="external">官网</a></p>
<h5 id="构建完成登陆SonarQube系统找到对应项目看到析的果"><a href="#构建完成登陆SonarQube系统找到对应项目看到析的果" class="headerlink" title="构建完成登陆SonarQube系统找到对应项目看到析的果"></a>构建完成登陆SonarQube系统找到对应项目看到析的果</h5><p><img src="/images/sonarqube/16.jpg" alt=""></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>SonarQube与jenkins集成就完成了，集成的方式不只这一种，还有别的方式。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SonarQube配置]]></title>
      <url>http://tungsing.cc/2017/09/25/review/sonarqube-config/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>SonarQube我们已经安装好，接下来我们配置一下检查规则</p>
</blockquote>
<h4 id="SonarQube-配置"><a href="#SonarQube-配置" class="headerlink" title="SonarQube 配置"></a>SonarQube 配置</h4><h5 id="代码质量检查插件安装"><a href="#代码质量检查插件安装" class="headerlink" title="代码质量检查插件安装"></a>代码质量检查插件安装</h5><ol>
<li><p>web检查插件安装<br><img src="/images/sonarqube/8.jpg" alt=""></p>
</li>
<li><p>findbugs插件安装<br><img src="/images/sonarqube/7.jpg" alt=""></p>
</li>
</ol>
<p>其他插件可以搜索下载</p>
<a id="more"></a>
<h5 id="代码质量检查插件配置"><a href="#代码质量检查插件配置" class="headerlink" title="代码质量检查插件配置"></a>代码质量检查插件配置</h5><h6 id="JavaScript代码检查配置"><a href="#JavaScript代码检查配置" class="headerlink" title="JavaScript代码检查配置"></a>JavaScript代码检查配置</h6><ol>
<li><p>创建自己的质量配置<br><img src="/images/sonarqube/9.jpg" alt=""></p>
</li>
<li><p>配置自己的检查规则<br><img src="/images/sonarqube/10.jpg" alt=""><br><img src="/images/sonarqube/11.jpg" alt=""></p>
</li>
</ol>
<h6 id="findbugs代码检查配置"><a href="#findbugs代码检查配置" class="headerlink" title="findbugs代码检查配置"></a>findbugs代码检查配置</h6><ol>
<li><p>创建自己的质量配置，Java可以上传自己的检查配置<br><img src="/images/sonarqube/12.jpg" alt=""></p>
</li>
<li><p>配置自己的检查规则，同JavaScript的</p>
</li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>使用SonarQube的配置完成后，接下来通过和jenkins集成实现定时检查。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SonarQube安装]]></title>
      <url>http://tungsing.cc/2017/06/29/review/sonarqube-install/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>SonarQube（曾用名Sonar（声纳））是一个开源的代码质量管理系统。官网地址<a href="https://www.sonarqube.org/" target="_blank" rel="external">https://www.sonarqube.org/</a></p>
</blockquote>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Windows Server 2008 系统</li>
<li>JDK</li>
<li>Mysql</li>
<li><a href="https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-6.3.1.zip" target="_blank" rel="external">sonarqube-6.3.1安装包</a></li>
</ul>
<h4 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h4><p>安装JDK就不在赘述，sonarqube6需要jdk8支持。</p>
<a id="more"></a>
<h4 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h4><p>SonarQube是自带了数据库的，可以不用安装mysql数据库，本文安装mysql数据库是为了获得更好的使用体验。</p>
<h4 id="SonarQube-安装配置"><a href="#SonarQube-安装配置" class="headerlink" title="SonarQube 安装配置"></a>SonarQube 安装配置</h4><h5 id="解压缩文件到一个目录下"><a href="#解压缩文件到一个目录下" class="headerlink" title="解压缩文件到一个目录下"></a>解压缩文件到一个目录下</h5><p><img src="/images/sonarqube/1.jpg" alt=""></p>
<h5 id="修改wrapper-conf文件，指定java，如果已经配置环境变量无需修改。"><a href="#修改wrapper-conf文件，指定java，如果已经配置环境变量无需修改。" class="headerlink" title="修改wrapper.conf文件，指定java，如果已经配置环境变量无需修改。"></a>修改wrapper.conf文件，指定java，如果已经配置环境变量无需修改。</h5><p><img src="/images/sonarqube/2.jpg" alt=""></p>
<h5 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sonar.jdbc.username=用户名</div><div class="line">sonar.jdbc.password=密码</div><div class="line">sonar.jdbc.url=jdbc:mysql://host:port/sonar?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=<span class="literal">true</span>&amp;useConfigs=maxPerformance</div></pre></td></tr></table></figure>
<p><img src="/images/sonarqube/3.jpg" alt=""></p>
<h5 id="点击bin-windows-x86-64目录下StartSonar-bat启动SonarQube，还可以把SonarQube注册到windows服务里面"><a href="#点击bin-windows-x86-64目录下StartSonar-bat启动SonarQube，还可以把SonarQube注册到windows服务里面" class="headerlink" title="点击bin/windows-x86-64目录下StartSonar.bat启动SonarQube，还可以把SonarQube注册到windows服务里面"></a>点击bin/windows-x86-64目录下StartSonar.bat启动SonarQube，还可以把SonarQube注册到windows服务里面</h5><p><img src="/images/sonarqube/4.jpg" alt=""></p>
<h5 id="在浏览器中输入URL地址，测试是否安装成功"><a href="#在浏览器中输入URL地址，测试是否安装成功" class="headerlink" title="在浏览器中输入URL地址，测试是否安装成功"></a>在浏览器中输入URL地址，测试是否安装成功</h5><p><img src="/images/sonarqube/5.jpg" alt=""><br>看到这个页面表明已经安装成功</p>
<h5 id="用管理登陆系统，可以安装中文插件"><a href="#用管理登陆系统，可以安装中文插件" class="headerlink" title="用管理登陆系统，可以安装中文插件"></a>用管理登陆系统，可以安装中文插件</h5><p><img src="/images/sonarqube/6.jpg" alt=""></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>使用SonarQube的第一步就完成了，接下来我们就可以配置检查规则来使用它了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Gulp项目工程构建说明]]></title>
      <url>http://tungsing.cc/2017/05/03/front/gulp-use/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>记录前端开发步骤，此文档为同事所写。</p>
</blockquote>
<h4 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h4><h5 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h5><ol>
<li>方便开发人员快速的搭建前端开发环境；</li>
<li>对nodejs、gulp有一个初步的认识；</li>
<li>了解服务器端nodejs、gulp的安装；</li>
<li>了解服务器端Jenkins工程发布。</li>
</ol>
<h5 id="Nodejs简介"><a href="#Nodejs简介" class="headerlink" title="Nodejs简介"></a>Nodejs简介</h5><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm（node package manager），是全球最大的开源库生态系统。<br>详情请见<a href="http://nodejs.cn/" target="_blank" rel="external">nodejs中文网</a></p>
<h5 id="Gulp简介"><a href="#Gulp简介" class="headerlink" title="Gulp简介"></a>Gulp简介</h5><ol>
<li>易于使用<br> 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理。</li>
<li>构建快速<br> 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作。</li>
<li>插件高质<br> Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作。</li>
<li>易于学习<br> 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道。<br> 详情请见<a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">gulp中文网</a></li>
</ol>
<a id="more"></a>
<h4 id="开发环境配置"><a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h4><h5 id="Nodejs安装"><a href="#Nodejs安装" class="headerlink" title="Nodejs安装"></a>Nodejs安装</h5><p>首先到<a href="http://nodejs.cn/download/" target="_blank" rel="external">官网下载</a>对应的版本，<a href="https://nodejs.org/dist/v4.4.4/node-v4.4.4-x64.msi" target="_blank" rel="external">window_64下载</a><br>安装比较简单，一直点下一步就行。<br>安装完成后，打开window命令窗口执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ node –v</div></pre></td></tr></table></figure>
<p><img src="/images/front/nodejs.png" alt=""></p>
<h5 id="Gulp安装"><a href="#Gulp安装" class="headerlink" title="Gulp安装"></a>Gulp安装</h5><ol>
<li>Gulp安装通过npm在命令窗口即可实现</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp –g</div></pre></td></tr></table></figure>
<p>说明：<br>npm 安装时，可能比较慢，可以cnpm使用淘宝的npm镜像<br>先输入命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm –registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<p>然后再输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install gulp –g</div></pre></td></tr></table></figure>
<ol>
<li>安装完成后，在命令窗口输入 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp –v</div></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="/images/front/gulp.png" alt=""></p>
<h4 id="项目环境搭建"><a href="#项目环境搭建" class="headerlink" title="项目环境搭建"></a>项目环境搭建</h4><h5 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h5><ol>
<li>新建项目</li>
<li><p>新建文件gulpfile.js,代码示例<br><img src="/images/front/gulpfile1.png" alt=""><br><img src="/images/front/gulpfile2.png" alt=""></p>
</li>
<li><p>cmd进入项目目录，执行命令,生成package.json文件</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init</div></pre></td></tr></table></figure>
<p><img src="/images/front/package-json.png" alt=""></p>
<ol>
<li>安装项目依赖gulp插件(根据gulpfile.js文件决定安装哪些插件)</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cnpm install gulp –save</div><div class="line">cnpm install gulp-jade –save</div><div class="line">cnpm install gulp-if –save</div><div class="line">cnpm install gulp-changed –save</div><div class="line">cnpm install gulp-debug –save</div><div class="line">cnpm install gulp-uglify –save</div><div class="line">cnpm install minimist –save</div></pre></td></tr></table></figure>
<p>package.json代码</p>
<p><img src="/images/front/gulp-p.png" alt=""></p>
<ol>
<li>把源码上传到版本控制服务器即可</li>
</ol>
<h5 id="项目开发"><a href="#项目开发" class="headerlink" title="项目开发"></a>项目开发</h5><ol>
<li><p>从svn版本控制服务器下载项目</p>
</li>
<li><p>cmd进入项目目录，输入命令</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">npm install</div></pre></td></tr></table></figure>
<p>ps: （cnpm install比较快）</p>
<p><img src="/images/front/npminstall.png" alt=""></p>
<ol>
<li>安装完项目依赖包，输入命令 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp</div></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="/images/front/gulpc.png" alt=""></p>
<h4 id="集成部署"><a href="#集成部署" class="headerlink" title="集成部署"></a>集成部署</h4><h5 id="nodejs-安装"><a href="#nodejs-安装" class="headerlink" title="nodejs 安装"></a>nodejs 安装</h5><h5 id="gulp-安装"><a href="#gulp-安装" class="headerlink" title="gulp 安装"></a>gulp 安装</h5><h5 id="Jenkins安装配置"><a href="#Jenkins安装配置" class="headerlink" title="Jenkins安装配置"></a>Jenkins安装配置</h5><ol>
<li>新建：填写项目名，选择“构建一个自由风格的软件项目”</li>
<li>源码管理：选择Subversion，填写svn服务器的地址、用户名及密码</li>
<li>构建<br>   a). 安装gulp依赖组件，选择Execute shell</li>
</ol>
<p><img src="/images/front/jenkins1.png" alt=""><br>      b). 执行gulp操作，选择Execute shell</p>
<p><img src="/images/front/jenkins2.png" alt=""><br>      c). 打包（去掉.svn相关文件），选择Execute shell</p>
<p><img src="/images/front/jenkins3.png" alt=""><br>      d). ssh上传、解压，选择Send files or execute commands over ssh<br>      e). 配置ssh远程服务器<br>          系统管理 –&gt; 系统设置 –&gt; Publish over SSH –&gt; 填写ssh服务器地址、用户名及密码<br>      f). 选择配置好的SSH Server</p>
<p> <img src="/images/front/jenkins4.png" alt="">     </p>
<ol>
<li>配置完成后，点保存</li>
<li>点击立即构建，验证配置是否成功</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[项目成本管理]]></title>
      <url>http://tungsing.cc/2017/03/14/pm/pcm/</url>
      <content type="html"><![CDATA[<h4 id="成本管理的基本方法"><a href="#成本管理的基本方法" class="headerlink" title="成本管理的基本方法"></a>成本管理的基本方法</h4><h5 id="成本确定-“事前”-的基本方法"><a href="#成本确定-“事前”-的基本方法" class="headerlink" title="成本确定(“事前”)的基本方法"></a>成本确定(“事前”)的基本方法</h5><ol>
<li><p>成本预测的基本方法<br>1.1 定性和定量的成本预测方法<br>1.2 成本的发展趋势预测方法<br>1.3 成本的因果预测方法</p>
</li>
<li><p>成本决策的基本方法<br>2.1 总量分析与决策的基本方法<br>2.2 增量分析与决策的基本方法<br>2.3 关联分析与决策的基本方法<br>2.4 线性规划的基本方法</p>
</li>
<li><p>成本计划的基本方法<br>3.1 周期成本计划方法(日常经营活动)<br>3.2 标准成本计划方法<br>3.3 定额成本计划方法<br>3.4 目标成本计划方法<br>3.5 作业成本计划方法</p>
</li>
</ol>
<a id="more"></a>
<h5 id="成本控制的基本方法"><a href="#成本控制的基本方法" class="headerlink" title="成本控制的基本方法"></a>成本控制的基本方法</h5><ol>
<li><p>项目合算的基本方法<br>1.1 项目活动的成本核算基本方法<br>1.2 日常运营的成本核算基本方法</p>
</li>
<li><p>成本分析的基本方法<br>2.1 成本对比分析法<br>2.2 成本因素分析法<br>2.3 成本相关分析法</p>
</li>
<li><p>成本考核的基本方法<br>3.1 传统的成本考核方法<br>3.2 现代成本考核方法</p>
</li>
</ol>
<h4 id="项目成本管理的基本方法"><a href="#项目成本管理的基本方法" class="headerlink" title="项目成本管理的基本方法"></a>项目成本管理的基本方法</h4><h5 id="项目成本确定的基本方法"><a href="#项目成本确定的基本方法" class="headerlink" title="项目成本确定的基本方法"></a>项目成本确定的基本方法</h5><ol>
<li><p>项目成本确定的过程<br>1.1 项目成本初步估算<br>1.2 项目成本设计概算<br>1.3 项目成本详细估算<br>1.4 项目成本预算</p>
</li>
<li><p>项目成本确定的方法<br>2.1 基于活动的项目成本确定基本方法<br>2.2 基于定额的项目成本确定基本方法<br>2.3 基于工料测量的项目成本确定基本方法<br>2.4 基于统计资料的项目成本确定基本方法<br>2.5 分解项目工作或活动的基本方法</p>
</li>
</ol>
<h5 id="项目成本控制的基本方法"><a href="#项目成本控制的基本方法" class="headerlink" title="项目成本控制的基本方法"></a>项目成本控制的基本方法</h5><ol>
<li>项目成本分析和预测的基本方法<br>1.1 “事前”项目成本分析与预测方法<br>1.2 “事中”项目成本分析与预测方法</li>
<li>项目成本核算的基本方法<br>2.1 企业或组织内部的项目成本核算基本方法<br>2.2 企业或组织对外的项目成本核算基本方法</li>
<li>项目成本考核的基本方法</li>
</ol>
<h5 id="项目成本控制的特性"><a href="#项目成本控制的特性" class="headerlink" title="项目成本控制的特性"></a>项目成本控制的特性</h5><ol>
<li>目的性</li>
<li>人为性</li>
<li>过程性</li>
<li>学习性</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[项目质量管理]]></title>
      <url>http://tungsing.cc/2017/03/06/pm/pqm/</url>
      <content type="html"><![CDATA[<h4 id="项目质量规划"><a href="#项目质量规划" class="headerlink" title="项目质量规划"></a>项目质量规划</h4><table>
<thead>
<tr>
<th>依据</th>
<th>工具与技术</th>
<th>成果</th>
</tr>
</thead>
<tbody>
<tr>
<td>环境因素</td>
<td>成本效益分析</td>
<td>质量管理计划</td>
</tr>
<tr>
<td>组织过程资产</td>
<td>基准对照</td>
<td>质量测试指标</td>
</tr>
<tr>
<td>项目范围说明书</td>
<td>实验设计</td>
<td>质量核对表</td>
</tr>
<tr>
<td>项目管理计划</td>
<td>质量成本分析</td>
<td>过程改进计划</td>
</tr>
</tbody>
</table>
<h4 id="项目质量策划"><a href="#项目质量策划" class="headerlink" title="项目质量策划"></a>项目质量策划</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[用Samba搭建企业文件共享服务]]></title>
      <url>http://tungsing.cc/2017/01/24/linux/linux-samba/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>为了tomcat集群部署的时，上传的文件不需要其他操作就可以集中管理，我们通过网络共享硬盘的方式来做，技术有NFS、Samba。用samba是考虑到可以和Windows系统进行文件共享、还有自身提供了安全认证方式。网络共享硬盘适合20-200台机器的小型项目用。</p>
</blockquote>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Samba 是 SMB/CIFS 网络协议的重新实现, 它作为 NFS 的补充使得在 Linux 和 Windows 系统中进行文件共享、打印机共享更容易实现。</p>
<a id="more"></a>
<h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><table>
<thead>
<tr>
<th>序号</th>
<th>系统</th>
<th>ip</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>Centos 6.4</td>
<td>192.168.1.100</td>
<td>Samba服务器</td>
</tr>
<tr>
<td>B</td>
<td>Centos 6.4</td>
<td>192.168.1.101</td>
<td>挂载机器</td>
</tr>
<tr>
<td>C</td>
<td>Windows 10</td>
<td>192.168.1.102</td>
<td>挂载机器</td>
</tr>
</tbody>
</table>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>在A服务器上安装Samba，安装方式有rpm、源码包、yum，此处采用yum方式安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># yum install samba</span></div></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service smb start</span></div></pre></td></tr></table></figure>
<h5 id="设置开机启动项"><a href="#设置开机启动项" class="headerlink" title="设置开机启动项"></a>设置开机启动项</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># chkconfig smb on</span></div></pre></td></tr></table></figure>
<h5 id="配置Samba"><a href="#配置Samba" class="headerlink" title="配置Samba"></a>配置Samba</h5><p>Smb服务的配置文件为/etc/samba/smb.conf，首先备份此配置文件，然后开始修改配置</p>
<h6 id="网络相关配置"><a href="#网络相关配置" class="headerlink" title="网络相关配置"></a>网络相关配置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">workgroup = WORKGROUP</div><div class="line">server string = Samba Server Version %v</div><div class="line">netbios name = TEST_SMB_SERVER</div><div class="line">interfaces = lo eth0 192.168.12.2/24 192.168.13.2/24</div><div class="line">hosts allow = 127. 192.168.1.</div></pre></td></tr></table></figure>
<p>workgroup     = Samba Server 所要加入的工作组或者域<br>server string = Samba Server 的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号<br>netbios name  = Samba Server的NetBIOS名称<br>interfaces    = Samba Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址<br>hosts allow   = 表示允许连接到Samba Server的客户端，多个参数以空格隔开</p>
<h6 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/samba/log.%m</div><div class="line"><span class="comment"># max 50KB per log file, then rotate</span></div><div class="line">max <span class="built_in">log</span> size = 50</div></pre></td></tr></table></figure>
<p>log file = 日志文件位置，在文件名后加个宏%m（主机名），表示对每台访问Samba Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba Server，就会在/var/log/samba目录下留下log.pc1和log.pc2两个日志文件。</p>
<p>maxlog size = 设置Samba Server日志文件的最大容量，单位为kB，0代表不限制。</p>
<h6 id="安全配置"><a href="#安全配置" class="headerlink" title="安全配置"></a>安全配置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">security = user</div><div class="line">passdb backend = tdbsam</div></pre></td></tr></table></figure>
<p>security = 设置用户访问Samba Server的验证方式，一共有四种验证方式。</p>
<ol>
<li>share：用户访问SambaServer不需要提供用户名和口令, 安全性能较低。</li>
<li>user：Samba Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba Server中建立。</li>
<li>server：依靠其他WindowsNT/2000或Samba Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。</li>
<li>domain：域安全级别,使用主域控制器(PDC)来完成认证。</li>
</ol>
<p>passdbbackend = passdb backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account manager（安全账户管理）的简写。</p>
<ol>
<li>smbpasswd：该方式是使用smb自己的工具smbpasswd来给系统用户（真实<br>用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问Samba的资源。smbpasswd文件默认在/etc/samba目录下，不过有时候要手工建立该文件。</li>
<li>tdbsam：该方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在/etc/samba目录下。passdb.tdb用户数据库可以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用pdbedit命令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。<br>pdbedit –a username：新建Samba账户。<br>pdbedit –x username：删除Samba账户。<br>pdbedit –L：列出Samba用户列表，读取passdb.tdb数据库文件。<br>pdbedit –Lv：列出Samba用户列表的详细信息。<br>pdbedit –c “[D]” –u username：暂停该Samba用户的账号。<br>pdbedit –c “[]” –u username：恢复该Samba用户的账号。</li>
<li>ldapsam：该方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb backend = ldapsam:ldap://LDAP Server”</li>
</ol>
<h6 id="共享设置"><a href="#共享设置" class="headerlink" title="共享设置"></a>共享设置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[<span class="built_in">test</span>]</div><div class="line">        comment = <span class="built_in">test</span> share files</div><div class="line">        path = /opt/lar/files</div><div class="line">        browseable = no</div><div class="line">        writable = yes</div><div class="line">        valid users = @root</div></pre></td></tr></table></figure>
<p>comment = comment是对该共享的描述，可以是任意字符串。<br>path = 共享目录路径<br>browseable = browseable用来指定该共享是否(yes/no)可以浏览。<br>writable = 用来指定该共享路径是否(yes/no)可写。<br>valid users = 用来指定允许访问该共享资源的用户。</p>
<p>例如：valid users = bobyuan，@bob，@tech (多个用户或者组中间用逗号隔开，如果要加入一个组就用“@+组名”表示。)</p>
<h6 id="配置文件正确性检查"><a href="#配置文件正确性检查" class="headerlink" title="配置文件正确性检查"></a>配置文件正确性检查</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># testparm -v</span></div></pre></td></tr></table></figure>
<h5 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service smb restart</span></div></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>先在C服务上测试</p>
<ol>
<li>在File Explorer 中输入\192.168.1.100\test 回车</li>
<li>输入共享文件服务的用户名密码，即可看到是否成功</li>
</ol>
<p>B服务器上测试</p>
<ol>
<li><p>首先要安装Smbclient </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># yum install samba-client</span></div></pre></td></tr></table></figure>
</li>
<li><p>访问文件服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># smbclient //192.168.1.100/test -U root </span></div><div class="line">Password:                                                                </div><div class="line">smb: \&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>输入密码后出现最后一行说明成功了</p>
<h4 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h4><p>C服务器挂载</p>
<ol>
<li>打开This pc -&gt; Computer -&gt; Map Network Drive</li>
<li>输入\192.168.1.100\test 点击确定</li>
<li>输入用户名密码</li>
</ol>
<p><img src="/images/linux/map-network-drive.jpg" alt=""></p>
<p>B服务器挂载</p>
<ol>
<li><p>安装cifs-utils</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># yum install cifs-utils</span></div></pre></td></tr></table></figure>
</li>
<li><p>直接手动挂载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># mount -t cifs -o username=&lt;username&gt;,password=&lt;password&gt; //192.168.1.100/test /mnt/dir</span></div></pre></td></tr></table></figure>
</li>
<li><p>写到/etc/fstab文件自动挂载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//192.168.1.100/<span class="built_in">test</span> /mnt/dir cifs defaults,credentials=/etc/samba/<span class="built_in">pwd</span> 0 0</div></pre></td></tr></table></figure>
</li>
</ol>
<p>/mnt/dir 为挂载点</p>
<p>/etc/samba/pwd 文件里面保存的是用户名和密码，并授予400权限，格式如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">username=root</div><div class="line">password=123456</div></pre></td></tr></table></figure></p>
<p>执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># mount -a</span></div></pre></td></tr></table></figure></p>
<ol>
<li>测试是否成功<br>查看/mut/dir 文件夹是否有文件</li>
</ol>
<h5 id="配置SELinux"><a href="#配置SELinux" class="headerlink" title="配置SELinux"></a>配置SELinux</h5><p>如果selinux开启的话,注意配置,出现的情况是可以访问但无法操作的情况</p>
<pre><code class="bash"><span class="comment">#getsebool -a|grep samba</span>
<span class="comment">#setsebool -P samba_export_all_rw on</span>
</code></pre>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://wiki.archlinux.org/index.php/Samba_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="external">Samba (简体中文)</a><br><a href="http://blog.csdn.net/younger_china/article/details/53442988" target="_blank" rel="external">Samba环境搭建</a><br><a href="http://jiangyapeng.blog.51cto.com/3491398/1561868" target="_blank" rel="external">linux下挂载</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eclipse 中用Flex插件 BlazeDS 开发Flex web应用]]></title>
      <url>http://tungsing.cc/2017/01/18/flex/flex-web/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>这几天在搞Flex 开发，记录下开发过程，是一个总结也给和我一样的人一些帮助。</p>
</blockquote>
<h4 id="工具环境"><a href="#工具环境" class="headerlink" title="工具环境"></a>工具环境</h4><ul>
<li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="external">Eclipse Helios Release</a></li>
<li><a href="http://trials.adobe.com/AdobeProducts/FLBR/4/win32/FlashBuilder_4_Plugin_LS10.exe" target="_blank" rel="external">FlashBuilder_4_Plugin_LS10</a></li>
<li><a href="http://tomcat.apache.org/download-60.cgi" target="_blank" rel="external">Tomcat6.0.16</a></li>
<li>JDK6</li>
<li>Windows 7</li>
</ul>
<h4 id="工程建立"><a href="#工程建立" class="headerlink" title="工程建立"></a>工程建立</h4><h5 id="在eclipse中-File-–-gt-New-–-gt-Dynamic-Web-project"><a href="#在eclipse中-File-–-gt-New-–-gt-Dynamic-Web-project" class="headerlink" title="在eclipse中 File –&gt; New  –&gt; Dynamic Web project"></a>在eclipse中 File –&gt; New  –&gt; Dynamic Web project</h5><p><img src="/images/flex/1.jpg" alt=""></p>
<a id="more"></a>
<h5 id="然后点击“Next”-把“src”-Remove后添加一个“javasrc”-不改容易和flex的src混淆"><a href="#然后点击“Next”-把“src”-Remove后添加一个“javasrc”-不改容易和flex的src混淆" class="headerlink" title="然后点击“Next”  把“src” Remove后添加一个“javasrc”(不改容易和flex的src混淆)"></a>然后点击“Next”  把“src” Remove后添加一个“javasrc”(不改容易和flex的src混淆)</h5><p><img src="/images/flex/2.jpg" alt=""></p>
<h5 id="点击“Next”-把Content-directory-改成“WebRoot”-当然不改也可以-点击“Finish”"><a href="#点击“Next”-把Content-directory-改成“WebRoot”-当然不改也可以-点击“Finish”" class="headerlink" title="点击“Next”  把Content directory 改成“WebRoot”(当然不改也可以),点击“Finish”"></a>点击“Next”  把Content directory 改成“WebRoot”(当然不改也可以),点击“Finish”</h5><p><img src="/images/flex/3.jpg" alt=""></p>
<h5 id="把blazeds-spring中的文件拷入项目的WebRoot下"><a href="#把blazeds-spring中的文件拷入项目的WebRoot下" class="headerlink" title="把blazeds-spring中的文件拷入项目的WebRoot下"></a>把blazeds-spring中的文件拷入项目的WebRoot下</h5><p><a href="http://opensource.adobe.com/wiki/display/blazeds/BlazeDS" target="_blank" rel="external">blazeds.war</a></p>
<p><img src="/images/flex/4.jpg" alt=""></p>
<h5 id="然后在WebRoot-下新建一个index-html-并且把classes的路径修改一下那个buid文件夹就可以删除掉了"><a href="#然后在WebRoot-下新建一个index-html-并且把classes的路径修改一下那个buid文件夹就可以删除掉了" class="headerlink" title="然后在WebRoot 下新建一个index.html,并且把classes的路径修改一下那个buid文件夹就可以删除掉了"></a>然后在WebRoot 下新建一个index.html,并且把classes的路径修改一下那个buid文件夹就可以删除掉了</h5><p><img src="/images/flex/5.jpg" alt=""></p>
<h5 id="项目右键-Run-As-–-gt-Run-on-Server-选择tomcat就ok"><a href="#项目右键-Run-As-–-gt-Run-on-Server-选择tomcat就ok" class="headerlink" title="项目右键 Run As –&gt; Run on Server  选择tomcat就ok"></a>项目右键 Run As –&gt; Run on Server  选择tomcat就ok</h5><h5 id="没有错误的情况下项目右键-添加-更改项目类型-—-添加Flex项目类型-直接下一步，完成就可以"><a href="#没有错误的情况下项目右键-添加-更改项目类型-—-添加Flex项目类型-直接下一步，完成就可以" class="headerlink" title="没有错误的情况下项目右键 添加/更改项目类型  — 添加Flex项目类型  直接下一步，完成就可以"></a>没有错误的情况下项目右键 添加/更改项目类型  — 添加Flex项目类型  直接下一步，完成就可以</h5><p>ps:(如果前边没配置flex sdk的话 按提示配置一下就可以),此时项目会有个错误,选中右键 创建html模板  就可以解决</p>
<p><img src="/images/flex/6.jpg" alt=""></p>
<h5 id="项目右键-Properties-–-gt-flex-服务器-配置如图"><a href="#项目右键-Properties-–-gt-flex-服务器-配置如图" class="headerlink" title="项目右键 Properties –&gt; flex 服务器  配置如图"></a>项目右键 Properties –&gt; flex 服务器  配置如图</h5><p><img src="/images/flex/7.jpg" alt=""></p>
<h5 id="新建一个名字为HelloWordService的java类"><a href="#新建一个名字为HelloWordService的java类" class="headerlink" title="新建一个名字为HelloWordService的java类"></a>新建一个名字为HelloWordService的java类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.dome.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.flex.remoting.RemotingDestination;</div><div class="line"><span class="keyword">import</span> org.springframework.flex.remoting.RemotingInclude;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="meta">@Service</span>(<span class="string">"HelloWordService"</span>)</div><div class="line"><span class="meta">@RemotingDestination</span>(channels=&#123;<span class="string">"my-amf"</span>&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWordService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@RemotingInclude</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"HelloWord!"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="修改web-xml-把rds的注释去掉并把true改为false"><a href="#修改web-xml-把rds的注释去掉并把true改为false" class="headerlink" title="修改web.xml,把rds的注释去掉并把true改为false"></a>修改web.xml,把rds的注释去掉并把true改为false</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- begin rds --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RDSDispatchServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>RDSDispatchServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>flex.rds.server.servlet.FrontEndServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>useAppserverSecurity<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>messageBrokerId<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>_messageBroker<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>10<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span> <span class="attr">id</span>=<span class="string">"RDS_DISPATCH_MAPPING"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RDSDispatchServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CFIDE/main/ide.cfm<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- end rds --&gt;</span></div></pre></td></tr></table></figure>
<h5 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a>启动tomcat</h5><h5 id="点击-数据-服务-面板的-“连接数据-服务”"><a href="#点击-数据-服务-面板的-“连接数据-服务”" class="headerlink" title="点击 数据/服务 面板的 “连接数据/服务”"></a>点击 数据/服务 面板的 “连接数据/服务”</h5><p><img src="/images/flex/8.jpg" alt="">  </p>
<h5 id="然后再弹出的窗口中选择BlazeDS-S-–-gt-Next-–-gt-选不需要密码-–-gt-ok"><a href="#然后再弹出的窗口中选择BlazeDS-S-–-gt-Next-–-gt-选不需要密码-–-gt-ok" class="headerlink" title="然后再弹出的窗口中选择BlazeDS S –&gt; Next –&gt; 选不需要密码- –&gt;ok"></a>然后再弹出的窗口中选择BlazeDS S –&gt; Next –&gt; 选不需要密码- –&gt;ok</h5><p>选择刚才发布的服务，完成</p>
<p><img src="/images/flex/9.jpg" alt=""> </p>
<h5 id="在helloWordDome-mxml设计视图下右键-点击“生成服务调用”-选择ok"><a href="#在helloWordDome-mxml设计视图下右键-点击“生成服务调用”-选择ok" class="headerlink" title="在helloWordDome.mxml设计视图下右键 点击“生成服务调用”    选择ok"></a>在helloWordDome.mxml设计视图下右键 点击“生成服务调用”    选择ok</h5><h5 id="添加一个Button组件，右键生成click处理函数"><a href="#添加一个Button组件，右键生成click处理函数" class="headerlink" title="添加一个Button组件，右键生成click处理函数"></a>添加一个Button组件，右键生成click处理函数</h5><h5 id="切换到源码视图找到标签添加endpoint属性"><a href="#切换到源码视图找到标签添加endpoint属性" class="headerlink" title="切换到源码视图找到标签添加endpoint属性"></a>切换到源码视图找到<services:hellowordservice>标签添加endpoint属性</services:hellowordservice></h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">services:HelloWordService</span> <span class="attr">id</span>=<span class="string">"helloWordService"</span> <span class="attr">fault</span>=<span class="string">"Alert.show(event.fault.faultString + </span></span></div><div class="line">        '\n' + event.fault.faultDetail)"</div><div class="line">        <span class="attr">showBusyCursor</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">endpoint</span>=<span class="string">"&#123;&amp;apos;http://&#123;server.name&#125;:&#123;server.port&#125;/helloWordDome/messagebroker/amf&amp;apos;&#125;"</span>/&gt;</div></pre></td></tr></table></figure>
<h5 id="在click函数里处理后台传来的数据"><a href="#在click函数里处理后台传来的数据" class="headerlink" title="在click函数里处理后台传来的数据"></a>在click函数里处理后台传来的数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">protected function button1_clickHandler(event:MouseEvent):void</div><div class="line">            &#123;</div><div class="line">                Alert.show(sayHelloResult.lastResult);</div><div class="line">            &#125;</div></pre></td></tr></table></figure>
<h5 id="右键-Run-As-–-web应用程序，在页面上点击按钮-弹出HelloWord！-说明成功了"><a href="#右键-Run-As-–-web应用程序，在页面上点击按钮-弹出HelloWord！-说明成功了" class="headerlink" title="右键 Run As – web应用程序，在页面上点击按钮 弹出HelloWord！ 说明成功了"></a>右键 Run As – web应用程序，在页面上点击按钮 弹出HelloWord！ 说明成功了</h5><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>有不对的地方欢迎指正！！！<br><a href="http://dl.iteye.com/topics/download/fdd40a53-3c0e-30c0-86d3-69bd757e52f7" target="_blank" rel="external">helloWordDome.rar (2.3 MB)</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[用JDK自带的keytool工具生成安全证书]]></title>
      <url>http://tungsing.cc/2017/01/18/java/jdk-cs/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>JDK6</li>
<li>Windows</li>
<li>Tomcat 6.35</li>
</ul>
<h4 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -genkey -alias tomcat -keypass tomcat -keyalg RSA -keystore tomcat.keystore</div></pre></td></tr></table></figure>
<p><img src="/images/java/jdk-ca.jpg" alt=""></p>
<p>ps：keystore密码要和-keypass密码保持一致</p>
<h4 id="导出证书"><a href="#导出证书" class="headerlink" title="导出证书"></a>导出证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -export -file tomcat.crt -alias tomcat -keypass tomcat -keystore tomcat.keystore</div></pre></td></tr></table></figure>
<p><img src="/images/java/jdk-ca-export.jpg" alt=""></p>
<h4 id="为客户端JVM导入证书"><a href="#为客户端JVM导入证书" class="headerlink" title="为客户端JVM导入证书"></a>为客户端JVM导入证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -import -file E:\keys\tomcat.crt -keypass tomcat -alias tomcat -keystore <span class="string">"cacerts"</span></div></pre></td></tr></table></figure>
<p><img src="/images/java/jdk-ca-import.jpg" alt=""></p>
<p>ps:此处keystore的密码要输入：changeit 不然会报错</p>
<h4 id="应用证书到web容器-tomcat"><a href="#应用证书到web容器-tomcat" class="headerlink" title="应用证书到web容器- tomcat"></a>应用证书到web容器- tomcat</h4><p>打开tomcat目录的conf/server.xml文件，开启83和87行的注释代码，并设置keystoreFile、keystorePass修改结果如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8443"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span></span></div><div class="line">               <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></div><div class="line">               <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span> <span class="attr">keystoreFile</span>=<span class="string">"E:/keys/tomcat.keystore"</span> <span class="attr">keystorePass</span>=<span class="string">"tomcat"</span>/&gt;</div></pre></td></tr></table></figure>
<p> 启动tomcat，访问<a href="https://localhost:8443/出现此页面说明成功" target="_blank" rel="external">https://localhost:8443/出现此页面说明成功</a></p>
<p> <img src="/images/java/jdk-ca-view.jpg" alt=""></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p> <a href="http://www.kafeitu.me/sso/2010/11/05/sso-cas-full-course.html" target="_blank" rel="external">http://www.kafeitu.me/sso/2010/11/05/sso-cas-full-course.html</a><br> <a href="http://www.cnblogs.com/wen12128/archive/2010/10/11/1848076.html" target="_blank" rel="external">http://www.cnblogs.com/wen12128/archive/2010/10/11/1848076.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[用Markdown来写博客文章]]></title>
      <url>http://tungsing.cc/2017/01/18/hexo-markdown/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>所有的准备工作都完成了，接下来开始我们的写文章之旅吧</p>
</blockquote>
<h4 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h4><p>首先我们简单了解一下什么<a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="external">Makrdown</a></p>
<h4 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h4><p>这里就不详细介绍了，可以参考</p>
<p><a href="https://segmentfault.com/markdown" target="_blank" rel="external">Markdown 编辑器语法指南</a></p>
<a id="more"></a>
<h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>用Markdown写文章前，我们还需要找个适合我们写作的工具，工欲善其事必先利其器吗！工具有很多下面简单列举一下</p>
<p>Windows下有<br><a href="http://www.markdownpad.com/" target="_blank" rel="external">MarkdownPad</a></p>
<p>Mac下有<br><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a>,据说是国人制作的一款非常优秀的软件。</p>
<p>我用的是<a href="https://www.sublimetext.com/" target="_blank" rel="external">Sublime</a>+MarkdownEnding插件，windows和mac都有</p>
<h4 id="用Markdown写文章"><a href="#用Markdown写文章" class="headerlink" title="用Markdown写文章"></a>用Markdown写文章</h4><ol>
<li>在\Hexo\source_posts 文件夹下新建.md格式的文件，用sublime打开就可以编写了</li>
<li><p>执行下面命令就可以在编写的时候实时预览自己写的文章</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo -p 9000 server</div></pre></td></tr></table></figure>
</li>
<li><p>如何把写好的文章发布出去呢，执行下面的命令即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>这就是写文章的全部过程了，后边要做的是让精美的文章来丰富我们的博客。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[美化自己的博客]]></title>
      <url>http://tungsing.cc/2017/01/17/hexo-themes/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>自己的第一个博客已经运行起来了，但界面简单、单一，我们需要美化一下自己的博客，以下是美化的过程。</p>
</blockquote>
<h4 id="进入Hexo的官网主题专栏"><a href="#进入Hexo的官网主题专栏" class="headerlink" title="进入Hexo的官网主题专栏"></a>进入Hexo的<a href="https://hexo.io/themes/" target="_blank" rel="external">官网</a>主题专栏</h4><p><img src="/images/8.jpg" alt=""></p>
<h4 id="挑选自己喜欢的主题"><a href="#挑选自己喜欢的主题" class="headerlink" title="挑选自己喜欢的主题"></a>挑选自己喜欢的主题</h4><p>可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">hexo-theme-next</a>这个主题)</p>
<a id="more"></a>
<p><img src="/images/9.jpg" alt=""></p>
<h4 id="克隆主题"><a href="#克隆主题" class="headerlink" title="克隆主题"></a>克隆主题</h4><p>再打开Hexo文件夹下的themes目录（F:\Blog\hexo\themes），右键Git Bash，在命令行输入:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next(此处地址替换成你需要使用的主题的地址)</div></pre></td></tr></table></figure>
<p>回车等待下载完成即可。</p>
<h4 id="修改Hexo配置文件"><a href="#修改Hexo配置文件" class="headerlink" title="修改Hexo配置文件"></a>修改Hexo配置文件</h4><p>打开Hexo文件夹下的配置文件_config.yml，修改参数为：theme: hexo-theme-next</p>
<h4 id="预览效果"><a href="#预览效果" class="headerlink" title="预览效果"></a>预览效果</h4><p>在命令窗口hexo目录下执行,就可以看到效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo -p 9000 server</div></pre></td></tr></table></figure></p>
<p><img src="/images/18.png" alt=""></p>
<h4 id="定制自己的博客"><a href="#定制自己的博客" class="headerlink" title="定制自己的博客"></a>定制自己的博客</h4><p>根据主题的说明<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">文档</a>，配置自己的博客内容。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[记录Windows 系统安装mysql数据库]]></title>
      <url>http://tungsing.cc/2017/01/16/mysql/mysql-install/</url>
      <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Windows10 操作系统</li>
<li>mysql 安装包</li>
</ul>
<h4 id="下载mysql安装包"><a href="#下载mysql安装包" class="headerlink" title="下载mysql安装包"></a>下载mysql安装包</h4><p>在<a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="external">官网</a>下载社区版。本文安装的是mysql5.6。<br><img src="/images/mysql/14.jpg" alt=""></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="直接双击运行即可"><a href="#直接双击运行即可" class="headerlink" title="直接双击运行即可"></a>直接双击运行即可</h5><p><img src="/images/mysql/1.jpg" alt=""></p>
<a id="more"></a>
<h5 id="根据情况选择安装类型"><a href="#根据情况选择安装类型" class="headerlink" title="根据情况选择安装类型"></a>根据情况选择安装类型</h5><p><img src="/images/mysql/2.jpg" alt=""><br>这个地方需要注意的是，如果要自定义安装和数据路径，一定要选择自定义选项。</p>
<h5 id="根据自己的情况选择选择产品和功能"><a href="#根据自己的情况选择选择产品和功能" class="headerlink" title="根据自己的情况选择选择产品和功能"></a>根据自己的情况选择选择产品和功能</h5><p><img src="/images/mysql/3.jpg" alt=""></p>
<h5 id="选择自定义的安装和数据路径"><a href="#选择自定义的安装和数据路径" class="headerlink" title="选择自定义的安装和数据路径"></a>选择自定义的安装和数据路径</h5><p><img src="/images/mysql/4.jpg" alt=""><br><img src="/images/mysql/5.jpg" alt=""></p>
<h5 id="检查要求时直接点击执行按钮即，执行完成点击下一步"><a href="#检查要求时直接点击执行按钮即，执行完成点击下一步" class="headerlink" title="检查要求时直接点击执行按钮即，执行完成点击下一步"></a>检查要求时直接点击执行按钮即，执行完成点击下一步</h5><p><img src="/images/mysql/6.jpg" alt=""></p>
<h5 id="接下来就是真正的安装了，点击执行"><a href="#接下来就是真正的安装了，点击执行" class="headerlink" title="接下来就是真正的安装了，点击执行"></a>接下来就是真正的安装了，点击执行</h5><p><img src="/images/mysql/7.jpg" alt=""></p>
<h5 id="点击下一步进行配数据库配置"><a href="#点击下一步进行配数据库配置" class="headerlink" title="点击下一步进行配数据库配置"></a>点击下一步进行配数据库配置</h5><p><img src="/images/mysql/8.jpg" alt=""></p>
<ol>
<li>配置服务器类型和网络<br><img src="/images/mysql/9.jpg" alt=""></li>
<li>配置账户和角色<br><img src="/images/mysql/10.jpg" alt=""></li>
<li>配置访问数据库权限<br><img src="/images/mysql/11.jpg" alt=""></li>
<li>配置Windows服务<br><img src="/images/mysql/12.jpg" alt=""></li>
</ol>
<h5 id="点击执行应用服务器配置"><a href="#点击执行应用服务器配置" class="headerlink" title="点击执行应用服务器配置"></a>点击执行应用服务器配置</h5><p><img src="/images/mysql/13.jpg" alt=""></p>
<h5 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h5><ol>
<li>打开命令窗口，输入密码<br><img src="/images/mysql/15.jpg" alt=""></li>
<li>选择test数据库，操作正常，说明我们安装成功了。<br><img src="/images/mysql/16.jpg" alt=""></li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>本文记录了最简单的安装过程，适用于学习mysql初期使用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于Hexo 和 Github Pages 免费搭建自己的博客]]></title>
      <url>http://tungsing.cc/2017/01/13/hexo-github/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>很久前就有一个计划要搭建一个属于自己的博客，但一直瞎忙，没完成。终于在2017年初发现了十分方便的搭建博客的方式，本文是第一篇文章，也是介绍搭建过程的文章。</p>
</blockquote>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Windows 系统</li>
<li>Node.js</li>
<li>Hexo</li>
<li>Git</li>
<li>Github</li>
<li>一个属于自己的域名</li>
</ul>
<h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>在 Windows 环境下安装 Node.js 非常简单，仅须到<a href="https://nodejs.org/en/download/" target="_blank" rel="external">官网下载</a>安装文件并执行即可完成安装。<br><img src="/images/1.jpg" alt=""><br>下载完成直接双击安装即可。</p>
<a id="more"></a>
<h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h5 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h5><p>打开window命令窗口执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h5 id="Hexo初始化配置"><a href="#Hexo初始化配置" class="headerlink" title="Hexo初始化配置"></a>Hexo初始化配置</h5><p>根据自己喜好建立目录（如F:\Blog\Hexo），通过windows命令窗口进入F:\Blog\Hexo，执行以下操作。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>安装 Hexo 完成后，Hexo 将会在指定文件夹中新建所需要的文件。Hexo文件夹下的目录如下：<br><img src="/images/3.jpg" alt=""></p>
<p>执行下面语句，执行完即可在浏览器中输入<a href="http://localhost:9000/" target="_blank" rel="external">http://localhost:9000/</a> 查看效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div><div class="line">$ hexo -p 9000 server</div></pre></td></tr></table></figure></p>
<p>效果如下： </p>
<p><img src="/images/17.png" alt=""></p>
<h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>下载 <a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a> 并执行即可完成安装。(上官网要翻墙)</p>
<p><img src="/images/2.jpg" alt=""></p>
<p>还有其他安装方式，这就不一一介绍了。</p>
<h4 id="将博客部署到Github-Pages上"><a href="#将博客部署到Github-Pages上" class="headerlink" title="将博客部署到Github Pages上"></a>将博客部署到Github Pages上</h4><p>那么现在本地的博客已经搭建起来了，但是我们只可以通过本地连接查看我们的博客。那么我们现在需要做的就是把本地的博客发布到服务器上，让别人也可以连接我们的博客，而Github Pages就帮我完成了这件事情。但是Github Pages的代码就是寄存在Github上面的。那么接下来我们需要在Github上面创建一个新的项目。</p>
<h5 id="注册Github账户"><a href="#注册Github账户" class="headerlink" title="注册Github账户"></a>注册Github账户</h5><p>1.访问<a href="https://github.com/" target="_blank" rel="external">Github</a>首页<br>2.点击右上角的 Sign Up，注册自己的账户</p>
<h5 id="创建项目代码库"><a href="#创建项目代码库" class="headerlink" title="创建项目代码库"></a>创建项目代码库</h5><p>1.注册完登陆后，我们就创建一个我们自己的Github Pages项目。点击New repository。<br>2.创建要点如下：</p>
<p><img src="/images/4.png" alt=""></p>
<h5 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h5><p>配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。操作如下：<br>1.桌面右键-&gt;Git Gui Here。<br><img src="/images/5.jpg" alt=""><br>2.在打开的窗口打开Help-&gt;Show SSH Key，如果没有，生成一个即可。<br><img src="/images/6.jpg" alt=""><br>3.登陆GitHub,进入你的Account Settings.添加你的公钥<br><img src="/images/8.png" alt=""><br>4.选择SSH Keys<br><img src="/images/9.png" alt=""><br>5.粘贴密钥，添加即可<br><img src="/images/10.png" alt=""><br>6.桌面右键-&gt;Git Bash Here,输入下面的命令，看看设置是否成功，git@github.com的部分不要修改<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<h5 id="将本地的Hexo文件更新到Github的库中"><a href="#将本地的Hexo文件更新到Github的库中" class="headerlink" title="将本地的Hexo文件更新到Github的库中"></a>将本地的Hexo文件更新到Github的库中</h5><p>1.登录Github打开自己的项目 username.github.io<br><img src="/images/11.png" alt=""><br>2.打开之后，点击HTTPS，选择HTTPS类型地址<br><img src="/images/12.png" alt=""><br>3.复制地址<br><img src="/images/13.png" alt=""><br>4.打开你一开始创建的Hexo文件夹（如F:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml文件<br><img src="/images/14.png" alt=""><br>5.在配置文件里作如下修改，保存<br><img src="/images/15.png" alt=""><br>6.在本地目录执行如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure></p>
<p>执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io。<br>7.在浏览器上输入自己的主页地址,username.github.io就可以访问自己的博客了</p>
<h4 id="将自己的域名关联到Github-Pages上"><a href="#将自己的域名关联到Github-Pages上" class="headerlink" title="将自己的域名关联到Github Pages上"></a>将自己的域名关联到Github Pages上</h4><p>1.获取ip地址<br><img src="/images/ip.png" alt=""><br>2.<a href="http://access.enom.com" target="_blank" rel="external">登陆ENOM域名的独立管理面板</a><br>3.配置ip<br><img src="/images/16.jpg" alt=""><br>4.将IP输入过去即可。等待生效，最迟72小时生效。即可通过你的域名浏览你的博客主页。</p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>这才完成了第一步，后边找时间写一下美化自己的博客和如何用Markdown写博客</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="external">小白独立搭建博客–Github Pages和Hexo简明教程</a><br>2.<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo 文档</a></p>
]]></content>
    </entry>
    
  
  
</search>
