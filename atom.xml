<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TungSing&#39;s Blog</title>
  <subtitle>用心记录一切！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tungsing.cc/"/>
  <updated>2017-11-28T09:16:34.907Z</updated>
  <id>http://tungsing.cc/</id>
  
  <author>
    <name>tungSing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XtraBackup搭建Mysql物理备份</title>
    <link href="http://tungsing.cc/2017/11/28/mysql/mysql-bak/"/>
    <id>http://tungsing.cc/2017/11/28/mysql/mysql-bak/</id>
    <published>2017-11-28T06:30:11.680Z</published>
    <updated>2017-11-28T09:16:34.907Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Linux CentOS6 操作系统</li>
<li>Mysql5.6 </li>
<li>XtraBackup 2.4.8</li>
</ul>
<h4 id="XtraBackup简介"><a href="#XtraBackup简介" class="headerlink" title="XtraBackup简介"></a>XtraBackup简介</h4><p>Percona XtraBackup是一个免费开源数据备份工具，支持在线无锁表同步复制和可并行高效率的安全备份恢复机制，相比mysqldump来说确实让人眼前一亮。</p>
<h4 id="下载mysql安装包"><a href="#下载mysql安装包" class="headerlink" title="下载mysql安装包"></a>下载mysql安装包</h4><p>在<a href="https://www.percona.com/downloads/XtraBackup/LATEST/" target="_blank" rel="external">官网</a>安装包。<br><img src="/images/mysql/backup1.jpg" alt=""></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm</span></div><div class="line"><span class="comment"># rpm -ivh MySQL-shared-compat-5.6.38-1.el6.x86_64.rpm</span></div><div class="line"><span class="comment"># rpm -ivh perl-DBI-1.609-4.el6.x86_64.rpm </span></div><div class="line"><span class="comment"># rpm -ivh perl-DBD-MySQL-4.013-3.el6.x86_64.rpm</span></div><div class="line"><span class="comment"># rpm -ivh rsync-3.0.6-12.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rpm -ivh percona-xtrabackup-24-2.4.8-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="全量备份"><a href="#全量备份" class="headerlink" title="全量备份"></a>全量备份</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --user=root --password=123456 /home/databackup</span></div><div class="line">171128 14:51:16 [00]        ...done</div><div class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1626027) to (1626027) was copied.</div><div class="line">171128 14:51:17 completed OK!</div></pre></td></tr></table></figure>
<p>备份数据存放在/home/databackup/下面，innobackupex会自动创建一个文件夹，是当前系统的时间戳。</p>
<h5 id="增量备份"><a href="#增量备份" class="headerlink" title="增量备份"></a>增量备份</h5><p>在进行增量备份时，首先要进行一次全量备份，第一次增量备份是基于全备的，之后的增量备份是基于上一次的增量备份，以此类推。</p>
<ol>
<li>全量备份</li>
<li>在test库中创建表并增量备份<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE <span class="built_in">test</span>(  </div><div class="line">  `id` INT NOT NULL,</div><div class="line">  PRIMARY KEY (`id`)</div><div class="line">);</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --user=root --password=123456 --incremental /home/databackup/inc/ --incremental-basedir=/home/databackup/full/2017-11-28_16-08-17/</span></div><div class="line">171128 15:04:22 [00]        ...done</div><div class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1626027) to (1626027) was copied.</div><div class="line">171128 15:04:22 completed OK!</div></pre></td></tr></table></figure>
<ol>
<li>添加数据并增量备份<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; insert <span class="built_in">test</span> values(1);</div><div class="line">Query OK, 1 row affected (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from <span class="built_in">test</span>;</div><div class="line">+----+</div><div class="line">| id |</div><div class="line">+----+</div><div class="line">|  1 |</div><div class="line">+----+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --user=root --password=123456 --incremental /home/databackup/inc/ --incremental-basedir=/home/databackup/inc/2017-11-28_16-18-29/</span></div><div class="line">171128 15:04:22 [00]        ...done</div><div class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1626027) to (1626027) was copied.</div><div class="line">171128 15:04:22 completed OK!</div></pre></td></tr></table></figure>
<h5 id="全量恢复"><a href="#全量恢复" class="headerlink" title="全量恢复"></a>全量恢复</h5><ol>
<li><p>删除数据库(生产不要这么搞)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># drop database test;</span></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| logs               |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">+--------------------+</div><div class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
</li>
<li><p>恢复全备<br>恢复备份到mysql的数据文件目录，这一过程要先关闭mysql数据库，重命名或者删除原数据文件目录都可以，再创建一个新的数据文件目录，将备份数据复制到新的数据文件目录下，赋权，修改权限，启动数据库。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log /opt/databackup/full/2017-11-28_14-57-31/ </span></div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1626152</div><div class="line">171128 15:24:34 completed OK!</div><div class="line"></div><div class="line"><span class="comment">#innobackupex --defaults-file=/var/my.cnf --copy-back --rsync /home/databackup/full/2017-11-28_14-57-31/</span></div><div class="line">171128 15:36:01 [01]        ...done</div><div class="line">171128 15:36:01 [01] Copying ./<span class="built_in">test</span>/db.opt to /home/data/mysql/<span class="built_in">test</span>/db.opt</div><div class="line">171128 15:36:01 [01]        ...done</div><div class="line">171128 15:36:01 completed OK!</div></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| logs               |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| <span class="built_in">test</span>               |</div><div class="line">+--------------------+</div><div class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="增量恢复"><a href="#增量恢复" class="headerlink" title="增量恢复"></a>增量恢复</h5><p>增量备份的恢复大体为3个步骤</p>
<ol>
<li><p>恢复完全备份<br>注意：这里一定要加–redo-only参数，该参数的意思是只应用xtrabackup日志中已提交的事务数据，不回滚还未提交的数据</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log --redo-only /home/databackup/full/2017-11-28_16-08-17/</span></div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1626171</div><div class="line">InnoDB: Number of pools: 1</div><div class="line">171128 16:24:41 completed OK!</div></pre></td></tr></table></figure>
</li>
<li><p>恢复增量备份到完全备份<br>注意：开始恢复的增量备份要添加–redo-only参数，到最后一次增量备份去掉–redo-only参数<br>第1次：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log --redo-only /home/databackup/full/2017-11-28_16-08-17/ --incremental-dir=/home/databackup/inc/2017-11-28_16-18-29/</span></div><div class="line">171128 16:28:00 [00] Copying /home/databackup/inc/2017-11-28_16-18-29//xtrabackup_binlog_info to ./xtrabackup_binlog_info</div><div class="line">171128 16:28:00 [00]        ...done</div><div class="line">171128 16:28:00 [00] Copying /home/databackup/inc/2017-11-28_16-18-29//xtrabackup_info to ./xtrabackup_info</div><div class="line">171128 16:28:00 [00]        ...done</div><div class="line">171128 16:28:00 completed OK!</div></pre></td></tr></table></figure>
</li>
</ol>
<p>第…次，同第1次。</p>
<p>最后一次<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log  /home/databackup/full/2017-11-28_16-08-17/ --incremental-dir=/home/databackup/inc/2017-11-28_16-20-46/</span></div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1636904</div><div class="line">171128 16:32:58 completed OK!</div></pre></td></tr></table></figure></p>
<ol>
<li>对整体的完全备份进行恢复，回滚那些未提交的数据<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --apply-log /home/databackup/full/2017-11-28_16-08-17/</span></div><div class="line">InnoDB: FTS optimize thread exiting.</div><div class="line">InnoDB: Starting shutdown...</div><div class="line">InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1636942</div><div class="line">171128 16:36:41 completed OK!</div></pre></td></tr></table></figure>
</li>
</ol>
<p>把恢复完的备份复制到数据库目录文件中，和全量备份恢复一样。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># innobackupex --defaults-file=/var/my.cnf --copy-back --rsync /home/databackup/full/2017-11-28_14-57-31/</span></div><div class="line">171128 16:42:34 [01] Copying ./<span class="built_in">test</span>/test.ibd to /home/data/mysql/<span class="built_in">test</span>/test.ibd</div><div class="line">171128 16:42:34 [01]        ...done</div><div class="line">171128 16:42:34 [01] Copying ./<span class="built_in">test</span>/db.opt to /home/data/mysql/<span class="built_in">test</span>/db.opt</div><div class="line">171128 16:42:34 [01]        ...done</div><div class="line">171128 16:42:34 completed OK!</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from <span class="built_in">test</span>;</div><div class="line">+----+</div><div class="line">| id |</div><div class="line">+----+</div><div class="line">|  1 |</div><div class="line">+----+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>真实场景还需仔细学习对应功能，写成自动化的脚本去运行。</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="http://www.cnblogs.com/gomysql/p/3650645.html" target="_blank" rel="external">xtrabackup 详解</a><br>2.<a href="https://wsgzao.github.io/post/xtrabackup/" target="_blank" rel="external">XtraBackup不停机不锁表搭建MySQL主从同步实践</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Linux CentOS6 操作系统&lt;/li&gt;
&lt;li&gt;Mysql5.6 &lt;/li&gt;
&lt;li&gt;XtraBackup 2.4.8&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;XtraBackup简介&quot;&gt;&lt;a href=&quot;#XtraBackup简介&quot; class=&quot;headerlink&quot; title=&quot;XtraBackup简介&quot;&gt;&lt;/a&gt;XtraBackup简介&lt;/h4&gt;&lt;p&gt;Percona XtraBackup是一个免费开源数据备份工具，支持在线无锁表同步复制和可并行高效率的安全备份恢复机制，相比mysqldump来说确实让人眼前一亮。&lt;/p&gt;
&lt;h4 id=&quot;下载mysql安装包&quot;&gt;&lt;a href=&quot;#下载mysql安装包&quot; class=&quot;headerlink&quot; title=&quot;下载mysql安装包&quot;&gt;&lt;/a&gt;下载mysql安装包&lt;/h4&gt;&lt;p&gt;在&lt;a href=&quot;https://www.percona.com/downloads/XtraBackup/LATEST/&quot;&gt;官网&lt;/a&gt;安装包。&lt;br&gt;&lt;img src=&quot;/images/mysql/backup1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;h5 id=&quot;安装依赖包&quot;&gt;&lt;a href=&quot;#安装依赖包&quot; class=&quot;headerlink&quot; title=&quot;安装依赖包&quot;&gt;&lt;/a&gt;安装依赖包&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rpm -ivh MySQL-shared-compat-5.6.38-1.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rpm -ivh perl-DBI-1.609-4.el6.x86_64.rpm &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rpm -ivh perl-DBD-MySQL-4.013-3.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rpm -ivh rsync-3.0.6-12.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;安装-1&quot;&gt;&lt;a href=&quot;#安装-1&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rpm -ivh percona-xtrabackup-24-2.4.8-1.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Mysql" scheme="http://tungsing.cc/categories/Mysql/"/>
    
    
      <category term="Mysql XtraBackup backup" scheme="http://tungsing.cc/tags/Mysql-XtraBackup-backup/"/>
    
  </entry>
  
  <entry>
    <title>记录Linux CentOS 系统安装Mysql数据库</title>
    <link href="http://tungsing.cc/2017/11/28/mysql/mysql-install-linux/"/>
    <id>http://tungsing.cc/2017/11/28/mysql/mysql-install-linux/</id>
    <published>2017-11-28T04:59:08.040Z</published>
    <updated>2017-11-28T06:16:26.572Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Linux CentOS6 操作系统</li>
<li>Mysql5.6 安装包</li>
</ul>
<h4 id="下载mysql安装包"><a href="#下载mysql安装包" class="headerlink" title="下载mysql安装包"></a>下载mysql安装包</h4><p>在<a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="external">官网</a>下载社区版。本文安装的是mysql5.6。<br><img src="/images/mysql/17.jpg" alt=""></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="确认系统是否已经安装mysql，如果安装卸载后再安装"><a href="#确认系统是否已经安装mysql，如果安装卸载后再安装" class="headerlink" title="确认系统是否已经安装mysql，如果安装卸载后再安装"></a>确认系统是否已经安装mysql，如果安装卸载后再安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -qa |grep -i mysql</span></div></pre></td></tr></table></figure>
<p>如果安装mysql，卸载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ev MySQL-server-5.6.38-1.el6.x86_64.rpm</span></div><div class="line"><span class="comment">#rpm -ev MySQL-client-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure></p>
<p>注意：如果卸载不掉可以加nodeps强制卸载，或用yum命令卸载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ev MySQL-server-5.6.38-1.el6.x86_64.rpm --nodeps</span></div><div class="line"><span class="comment">#rpm -ev MySQL-client-5.6.38-1.el6.x86_64.rpm --nodeps</span></div><div class="line"><span class="comment">#yum remove MySQL-server-5.6.38-1.el6.x86_64.rpm</span></div><div class="line"><span class="comment">#yum remove MySQL-client-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure></p>
<h5 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#tar -xvf MySQL-5.6.38-1.el6.x86_64.rpm-bundle.tar</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#yum -y install perl</span></div><div class="line"><span class="comment">#rpm -ivh numactl-2.0.9-2.el6.x86_64.rpm</span></div><div class="line"><span class="comment">#rpm -ivh libaio-0.3.107-10.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="安装Mysql-server"><a href="#安装Mysql-server" class="headerlink" title="安装Mysql-server"></a>安装Mysql-server</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ivh MySQL-server-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="安装Mysql-client"><a href="#安装Mysql-client" class="headerlink" title="安装Mysql-client"></a>安装Mysql-client</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ivh MySQL-client-5.6.38-1.el6.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h5 id="自定义数据路径"><a href="#自定义数据路径" class="headerlink" title="自定义数据路径"></a>自定义数据路径</h5><p>根据自己的实际情况创建数据文件夹，例如<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mkdir /home/data</span></div></pre></td></tr></table></figure></p>
<p>把默认的数据文件移动到刚刚创建的数据目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mv /var/lib/mysql /home/data</span></div></pre></td></tr></table></figure></p>
<h5 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">datadir = /home/data/mysql</div><div class="line">port = 3306</div><div class="line">server_id = 1</div><div class="line">socket = /home/data/mysql/mysql.sock</div><div class="line">log_bin = mysql-bin</div><div class="line">binlog_format = mixed  </div><div class="line">expire_logs_days = 30</div><div class="line">log_error = /home/data/mysql/logs/mysql-error.log</div><div class="line">explicit_defaults_for_timestamp=1</div></pre></td></tr></table></figure>
<p>注：此处重点是修改datadir和socket的路径</p>
<h5 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#service mysql start</span></div><div class="line">Starting MySQL. SUCCESS!</div></pre></td></tr></table></figure>
<h5 id="登陆mysql"><a href="#登陆mysql" class="headerlink" title="登陆mysql"></a>登陆mysql</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mysql -uroot -p</span></div></pre></td></tr></table></figure>
<p>注：这个地方输入默认密码，默认密码在/root/.mysql_secret文件中。此处应该会报错，解决办法如下</p>
<ol>
<li><p>mysql 命令加参数</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mysql -h 127.0.0.1 -uroot -p</span></div></pre></td></tr></table></figure>
</li>
<li><p>加软链接(快捷方式)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#ln -s /home/data/mysql/mysql.sock /var/lib/mysql</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改配置，但这个方法没有成功，网上很多资料成功了</p>
</li>
</ol>
<p>登陆成功后，首先要设置密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#set password = password('此处为复杂度高的密码');</span></div></pre></td></tr></table></figure></p>
<h5 id="mysql服务加入开机启动项"><a href="#mysql服务加入开机启动项" class="headerlink" title="mysql服务加入开机启动项"></a>mysql服务加入开机启动项</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#chkconfig mysql on</span></div></pre></td></tr></table></figure>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>到此就安装结束了，剩余工作就是优化、配置mysql，适用于自己的项目。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Linux CentOS6 操作系统&lt;/li&gt;
&lt;li&gt;Mysql5.6 安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;下载mysql安装包&quot;&gt;&lt;a href=&quot;#下载mysql安装包&quot; class=&quot;headerlink&quot; title=&quot;下载mysql安装包&quot;&gt;&lt;/a&gt;下载mysql安装包&lt;/h4&gt;&lt;p&gt;在&lt;a href=&quot;https://dev.mysql.com/downloads/mysql/5.6.html#downloads&quot;&gt;官网&lt;/a&gt;下载社区版。本文安装的是mysql5.6。&lt;br&gt;&lt;img src=&quot;/images/mysql/17.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;h5 id=&quot;确认系统是否已经安装mysql，如果安装卸载后再安装&quot;&gt;&lt;a href=&quot;#确认系统是否已经安装mysql，如果安装卸载后再安装&quot; class=&quot;headerlink&quot; title=&quot;确认系统是否已经安装mysql，如果安装卸载后再安装&quot;&gt;&lt;/a&gt;确认系统是否已经安装mysql，如果安装卸载后再安装&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#rpm -qa |grep -i mysql&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果安装mysql，卸载&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#rpm -ev MySQL-server-5.6.38-1.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#rpm -ev MySQL-client-5.6.38-1.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意：如果卸载不掉可以加nodeps强制卸载，或用yum命令卸载&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#rpm -ev MySQL-server-5.6.38-1.el6.x86_64.rpm --nodeps&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#rpm -ev MySQL-client-5.6.38-1.el6.x86_64.rpm --nodeps&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#yum remove MySQL-server-5.6.38-1.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#yum remove MySQL-client-5.6.38-1.el6.x86_64.rpm&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;解压安装包&quot;&gt;&lt;a href=&quot;#解压安装包&quot; class=&quot;headerlink&quot; title=&quot;解压安装包&quot;&gt;&lt;/a&gt;解压安装包&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#tar -xvf MySQL-5.6.38-1.el6.x86_64.rpm-bundle.tar&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Mysql" scheme="http://tungsing.cc/categories/Mysql/"/>
    
    
      <category term="Mysql Linux CentOS" scheme="http://tungsing.cc/tags/Mysql-Linux-CentOS/"/>
    
  </entry>
  
  <entry>
    <title>SonarQube与jenkins集成</title>
    <link href="http://tungsing.cc/2017/09/25/review/sonarqube-jenkins/"/>
    <id>http://tungsing.cc/2017/09/25/review/sonarqube-jenkins/</id>
    <published>2017-09-25T07:26:37.201Z</published>
    <updated>2017-09-25T07:59:42.940Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>使用 Jenkins 与 Sonar 集成对代码进行持续检测</p>
</blockquote>
<h4 id="jenkins-安装配置"><a href="#jenkins-安装配置" class="headerlink" title="jenkins 安装配置"></a>jenkins 安装配置</h4><p>jenkins安装配置比较简单，同样套路<a href="https://jenkins.io/download/" target="_blank" rel="external">官网</a>下载安装包，配置即可。</p>
<h4 id="SonarQube与jenkins集成配置"><a href="#SonarQube与jenkins集成配置" class="headerlink" title="SonarQube与jenkins集成配置"></a>SonarQube与jenkins集成配置</h4><h5 id="在jenkins的插件管理里下载SonarQube插件"><a href="#在jenkins的插件管理里下载SonarQube插件" class="headerlink" title="在jenkins的插件管理里下载SonarQube插件"></a>在jenkins的插件管理里下载SonarQube插件</h5><p><img src="/images/sonarqube/13.jpg" alt=""></p>
<a id="more"></a>
<h5 id="在jenkins系统设置里配置SonarQube插件"><a href="#在jenkins系统设置里配置SonarQube插件" class="headerlink" title="在jenkins系统设置里配置SonarQube插件"></a>在jenkins系统设置里配置SonarQube插件</h5><p><img src="/images/sonarqube/14.jpg" alt=""></p>
<h5 id="具体工程配置"><a href="#具体工程配置" class="headerlink" title="具体工程配置"></a>具体工程配置</h5><p><img src="/images/sonarqube/15.jpg" alt=""></p>
<h5 id="具体properties配置"><a href="#具体properties配置" class="headerlink" title="具体properties配置"></a>具体properties配置</h5><p>此文件放置到工作代码中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#项目标识</span></div><div class="line">sonar.projectKey=id</div><div class="line"><span class="comment">#项目名称</span></div><div class="line">sonar.projectName=name</div><div class="line"><span class="comment">#版本</span></div><div class="line">sonar.projectVersion=1.0</div><div class="line"><span class="comment">#编码</span></div><div class="line">sonar.sourceEncoding=UTF-8</div><div class="line"><span class="comment">#目录代码根目录</span></div><div class="line">sonar.sources=.</div><div class="line"></div><div class="line"><span class="comment">#项目模块</span></div><div class="line">sonar.modules=common,web</div><div class="line"></div><div class="line">common.sonar.projectName=common</div><div class="line">common.sonar.sources=.</div><div class="line"><span class="comment">#模块的语言</span></div><div class="line">common.sonar.language=java</div><div class="line"></div><div class="line">web.sonar.projectName=web</div><div class="line">sonar.sources=src</div><div class="line">web.sonar.language=js</div></pre></td></tr></table></figure></p>
<p>其他配置详见<a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner" target="_blank" rel="external">官网</a></p>
<h5 id="构建完成登陆SonarQube系统找到对应项目看到析的果"><a href="#构建完成登陆SonarQube系统找到对应项目看到析的果" class="headerlink" title="构建完成登陆SonarQube系统找到对应项目看到析的果"></a>构建完成登陆SonarQube系统找到对应项目看到析的果</h5><p><img src="/images/sonarqube/16.jpg" alt=""></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>SonarQube与jenkins集成就完成了，集成的方式不只这一种，还有别的方式。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;使用 Jenkins 与 Sonar 集成对代码进行持续检测&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;jenkins-安装配置&quot;&gt;&lt;a href=&quot;#jenkins-安装配置&quot; class=&quot;headerlink&quot; title=&quot;jenkins 安装配置&quot;&gt;&lt;/a&gt;jenkins 安装配置&lt;/h4&gt;&lt;p&gt;jenkins安装配置比较简单，同样套路&lt;a href=&quot;https://jenkins.io/download/&quot;&gt;官网&lt;/a&gt;下载安装包，配置即可。&lt;/p&gt;
&lt;h4 id=&quot;SonarQube与jenkins集成配置&quot;&gt;&lt;a href=&quot;#SonarQube与jenkins集成配置&quot; class=&quot;headerlink&quot; title=&quot;SonarQube与jenkins集成配置&quot;&gt;&lt;/a&gt;SonarQube与jenkins集成配置&lt;/h4&gt;&lt;h5 id=&quot;在jenkins的插件管理里下载SonarQube插件&quot;&gt;&lt;a href=&quot;#在jenkins的插件管理里下载SonarQube插件&quot; class=&quot;headerlink&quot; title=&quot;在jenkins的插件管理里下载SonarQube插件&quot;&gt;&lt;/a&gt;在jenkins的插件管理里下载SonarQube插件&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/sonarqube/13.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SonarQube" scheme="http://tungsing.cc/tags/SonarQube/"/>
    
      <category term="review" scheme="http://tungsing.cc/tags/review/"/>
    
      <category term="jenkins" scheme="http://tungsing.cc/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>SonarQube配置</title>
    <link href="http://tungsing.cc/2017/09/25/review/sonarqube-config/"/>
    <id>http://tungsing.cc/2017/09/25/review/sonarqube-config/</id>
    <published>2017-09-25T06:36:51.746Z</published>
    <updated>2017-09-26T07:03:20.120Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>SonarQube我们已经安装好，接下来我们配置一下检查规则</p>
</blockquote>
<h4 id="SonarQube-配置"><a href="#SonarQube-配置" class="headerlink" title="SonarQube 配置"></a>SonarQube 配置</h4><h5 id="代码质量检查插件安装"><a href="#代码质量检查插件安装" class="headerlink" title="代码质量检查插件安装"></a>代码质量检查插件安装</h5><ol>
<li><p>web检查插件安装<br><img src="/images/sonarqube/8.jpg" alt=""></p>
</li>
<li><p>findbugs插件安装<br><img src="/images/sonarqube/7.jpg" alt=""></p>
</li>
</ol>
<p>其他插件可以搜索下载</p>
<a id="more"></a>
<h5 id="代码质量检查插件配置"><a href="#代码质量检查插件配置" class="headerlink" title="代码质量检查插件配置"></a>代码质量检查插件配置</h5><h6 id="JavaScript代码检查配置"><a href="#JavaScript代码检查配置" class="headerlink" title="JavaScript代码检查配置"></a>JavaScript代码检查配置</h6><ol>
<li><p>创建自己的质量配置<br><img src="/images/sonarqube/9.jpg" alt=""></p>
</li>
<li><p>配置自己的检查规则<br><img src="/images/sonarqube/10.jpg" alt=""><br><img src="/images/sonarqube/11.jpg" alt=""></p>
</li>
</ol>
<h6 id="findbugs代码检查配置"><a href="#findbugs代码检查配置" class="headerlink" title="findbugs代码检查配置"></a>findbugs代码检查配置</h6><ol>
<li><p>创建自己的质量配置，Java可以上传自己的检查配置<br><img src="/images/sonarqube/12.jpg" alt=""></p>
</li>
<li><p>配置自己的检查规则，同JavaScript的</p>
</li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>使用SonarQube的配置完成后，接下来通过和jenkins集成实现定时检查。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;SonarQube我们已经安装好，接下来我们配置一下检查规则&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;SonarQube-配置&quot;&gt;&lt;a href=&quot;#SonarQube-配置&quot; class=&quot;headerlink&quot; title=&quot;SonarQube 配置&quot;&gt;&lt;/a&gt;SonarQube 配置&lt;/h4&gt;&lt;h5 id=&quot;代码质量检查插件安装&quot;&gt;&lt;a href=&quot;#代码质量检查插件安装&quot; class=&quot;headerlink&quot; title=&quot;代码质量检查插件安装&quot;&gt;&lt;/a&gt;代码质量检查插件安装&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;web检查插件安装&lt;br&gt;&lt;img src=&quot;/images/sonarqube/8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;findbugs插件安装&lt;br&gt;&lt;img src=&quot;/images/sonarqube/7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其他插件可以搜索下载&lt;/p&gt;
    
    </summary>
    
    
      <category term="SonarQube" scheme="http://tungsing.cc/tags/SonarQube/"/>
    
      <category term="review" scheme="http://tungsing.cc/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>SonarQube安装</title>
    <link href="http://tungsing.cc/2017/06/29/review/sonarqube-install/"/>
    <id>http://tungsing.cc/2017/06/29/review/sonarqube-install/</id>
    <published>2017-06-29T01:57:48.155Z</published>
    <updated>2017-09-25T06:40:03.601Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>SonarQube（曾用名Sonar（声纳））是一个开源的代码质量管理系统。官网地址<a href="https://www.sonarqube.org/" target="_blank" rel="external">https://www.sonarqube.org/</a></p>
</blockquote>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Windows Server 2008 系统</li>
<li>JDK</li>
<li>Mysql</li>
<li><a href="https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-6.3.1.zip" target="_blank" rel="external">sonarqube-6.3.1安装包</a></li>
</ul>
<h4 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h4><p>安装JDK就不在赘述，sonarqube6需要jdk8支持。</p>
<a id="more"></a>
<h4 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h4><p>SonarQube是自带了数据库的，可以不用安装mysql数据库，本文安装mysql数据库是为了获得更好的使用体验。</p>
<h4 id="SonarQube-安装配置"><a href="#SonarQube-安装配置" class="headerlink" title="SonarQube 安装配置"></a>SonarQube 安装配置</h4><h5 id="解压缩文件到一个目录下"><a href="#解压缩文件到一个目录下" class="headerlink" title="解压缩文件到一个目录下"></a>解压缩文件到一个目录下</h5><p><img src="/images/sonarqube/1.jpg" alt=""></p>
<h5 id="修改wrapper-conf文件，指定java，如果已经配置环境变量无需修改。"><a href="#修改wrapper-conf文件，指定java，如果已经配置环境变量无需修改。" class="headerlink" title="修改wrapper.conf文件，指定java，如果已经配置环境变量无需修改。"></a>修改wrapper.conf文件，指定java，如果已经配置环境变量无需修改。</h5><p><img src="/images/sonarqube/2.jpg" alt=""></p>
<h5 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sonar.jdbc.username=用户名</div><div class="line">sonar.jdbc.password=密码</div><div class="line">sonar.jdbc.url=jdbc:mysql://host:port/sonar?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=<span class="literal">true</span>&amp;useConfigs=maxPerformance</div></pre></td></tr></table></figure>
<p><img src="/images/sonarqube/3.jpg" alt=""></p>
<h5 id="点击bin-windows-x86-64目录下StartSonar-bat启动SonarQube，还可以把SonarQube注册到windows服务里面"><a href="#点击bin-windows-x86-64目录下StartSonar-bat启动SonarQube，还可以把SonarQube注册到windows服务里面" class="headerlink" title="点击bin/windows-x86-64目录下StartSonar.bat启动SonarQube，还可以把SonarQube注册到windows服务里面"></a>点击bin/windows-x86-64目录下StartSonar.bat启动SonarQube，还可以把SonarQube注册到windows服务里面</h5><p><img src="/images/sonarqube/4.jpg" alt=""></p>
<h5 id="在浏览器中输入URL地址，测试是否安装成功"><a href="#在浏览器中输入URL地址，测试是否安装成功" class="headerlink" title="在浏览器中输入URL地址，测试是否安装成功"></a>在浏览器中输入URL地址，测试是否安装成功</h5><p><img src="/images/sonarqube/5.jpg" alt=""><br>看到这个页面表明已经安装成功</p>
<h5 id="用管理登陆系统，可以安装中文插件"><a href="#用管理登陆系统，可以安装中文插件" class="headerlink" title="用管理登陆系统，可以安装中文插件"></a>用管理登陆系统，可以安装中文插件</h5><p><img src="/images/sonarqube/6.jpg" alt=""></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>使用SonarQube的第一步就完成了，接下来我们就可以配置检查规则来使用它了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;SonarQube（曾用名Sonar（声纳））是一个开源的代码质量管理系统。官网地址&lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;https://www.sonarqube.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Windows Server 2008 系统&lt;/li&gt;
&lt;li&gt;JDK&lt;/li&gt;
&lt;li&gt;Mysql&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-6.3.1.zip&quot;&gt;sonarqube-6.3.1安装包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;安装JDK&quot;&gt;&lt;a href=&quot;#安装JDK&quot; class=&quot;headerlink&quot; title=&quot;安装JDK&quot;&gt;&lt;/a&gt;安装JDK&lt;/h4&gt;&lt;p&gt;安装JDK就不在赘述，sonarqube6需要jdk8支持。&lt;/p&gt;
    
    </summary>
    
    
      <category term="SonarQube" scheme="http://tungsing.cc/tags/SonarQube/"/>
    
      <category term="review" scheme="http://tungsing.cc/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Gulp项目工程构建说明</title>
    <link href="http://tungsing.cc/2017/05/03/front/gulp-use/"/>
    <id>http://tungsing.cc/2017/05/03/front/gulp-use/</id>
    <published>2017-05-03T09:57:32.668Z</published>
    <updated>2017-05-05T06:54:29.692Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>记录前端开发步骤，此文档为同事所写。</p>
</blockquote>
<h4 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h4><h5 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h5><ol>
<li>方便开发人员快速的搭建前端开发环境；</li>
<li>对nodejs、gulp有一个初步的认识；</li>
<li>了解服务器端nodejs、gulp的安装；</li>
<li>了解服务器端Jenkins工程发布。</li>
</ol>
<h5 id="Nodejs简介"><a href="#Nodejs简介" class="headerlink" title="Nodejs简介"></a>Nodejs简介</h5><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm（node package manager），是全球最大的开源库生态系统。<br>详情请见<a href="http://nodejs.cn/" target="_blank" rel="external">nodejs中文网</a></p>
<h5 id="Gulp简介"><a href="#Gulp简介" class="headerlink" title="Gulp简介"></a>Gulp简介</h5><ol>
<li>易于使用<br> 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理。</li>
<li>构建快速<br> 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作。</li>
<li>插件高质<br> Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作。</li>
<li>易于学习<br> 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道。<br> 详情请见<a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">gulp中文网</a></li>
</ol>
<a id="more"></a>
<h4 id="开发环境配置"><a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h4><h5 id="Nodejs安装"><a href="#Nodejs安装" class="headerlink" title="Nodejs安装"></a>Nodejs安装</h5><p>首先到<a href="http://nodejs.cn/download/" target="_blank" rel="external">官网下载</a>对应的版本，<a href="https://nodejs.org/dist/v4.4.4/node-v4.4.4-x64.msi" target="_blank" rel="external">window_64下载</a><br>安装比较简单，一直点下一步就行。<br>安装完成后，打开window命令窗口执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ node –v</div></pre></td></tr></table></figure>
<p><img src="/images/front/nodejs.png" alt=""></p>
<h5 id="Gulp安装"><a href="#Gulp安装" class="headerlink" title="Gulp安装"></a>Gulp安装</h5><ol>
<li>Gulp安装通过npm在命令窗口即可实现</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp –g</div></pre></td></tr></table></figure>
<p>说明：<br>npm 安装时，可能比较慢，可以cnpm使用淘宝的npm镜像<br>先输入命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm –registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<p>然后再输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install gulp –g</div></pre></td></tr></table></figure>
<ol>
<li>安装完成后，在命令窗口输入 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp –v</div></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="/images/front/gulp.png" alt=""></p>
<h4 id="项目环境搭建"><a href="#项目环境搭建" class="headerlink" title="项目环境搭建"></a>项目环境搭建</h4><h5 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h5><ol>
<li>新建项目</li>
<li><p>新建文件gulpfile.js,代码示例<br><img src="/images/front/gulpfile1.png" alt=""><br><img src="/images/front/gulpfile2.png" alt=""></p>
</li>
<li><p>cmd进入项目目录，执行命令,生成package.json文件</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init</div></pre></td></tr></table></figure>
<p><img src="/images/front/package-json.png" alt=""></p>
<ol>
<li>安装项目依赖gulp插件(根据gulpfile.js文件决定安装哪些插件)</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cnpm install gulp –save</div><div class="line">cnpm install gulp-jade –save</div><div class="line">cnpm install gulp-if –save</div><div class="line">cnpm install gulp-changed –save</div><div class="line">cnpm install gulp-debug –save</div><div class="line">cnpm install gulp-uglify –save</div><div class="line">cnpm install minimist –save</div></pre></td></tr></table></figure>
<p>package.json代码</p>
<p><img src="/images/front/gulp-p.png" alt=""></p>
<ol>
<li>把源码上传到版本控制服务器即可</li>
</ol>
<h5 id="项目开发"><a href="#项目开发" class="headerlink" title="项目开发"></a>项目开发</h5><ol>
<li><p>从svn版本控制服务器下载项目</p>
</li>
<li><p>cmd进入项目目录，输入命令</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">npm install</div></pre></td></tr></table></figure>
<p>ps: （cnpm install比较快）</p>
<p><img src="/images/front/npminstall.png" alt=""></p>
<ol>
<li>安装完项目依赖包，输入命令 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp</div></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="/images/front/gulpc.png" alt=""></p>
<h4 id="集成部署"><a href="#集成部署" class="headerlink" title="集成部署"></a>集成部署</h4><h5 id="nodejs-安装"><a href="#nodejs-安装" class="headerlink" title="nodejs 安装"></a>nodejs 安装</h5><h5 id="gulp-安装"><a href="#gulp-安装" class="headerlink" title="gulp 安装"></a>gulp 安装</h5><h5 id="Jenkins安装配置"><a href="#Jenkins安装配置" class="headerlink" title="Jenkins安装配置"></a>Jenkins安装配置</h5><ol>
<li>新建：填写项目名，选择“构建一个自由风格的软件项目”</li>
<li>源码管理：选择Subversion，填写svn服务器的地址、用户名及密码</li>
<li>构建<br>   a). 安装gulp依赖组件，选择Execute shell</li>
</ol>
<p><img src="/images/front/jenkins1.png" alt=""><br>      b). 执行gulp操作，选择Execute shell</p>
<p><img src="/images/front/jenkins2.png" alt=""><br>      c). 打包（去掉.svn相关文件），选择Execute shell</p>
<p><img src="/images/front/jenkins3.png" alt=""><br>      d). ssh上传、解压，选择Send files or execute commands over ssh<br>      e). 配置ssh远程服务器<br>          系统管理 –&gt; 系统设置 –&gt; Publish over SSH –&gt; 填写ssh服务器地址、用户名及密码<br>      f). 选择配置好的SSH Server</p>
<p> <img src="/images/front/jenkins4.png" alt="">     </p>
<ol>
<li>配置完成后，点保存</li>
<li>点击立即构建，验证配置是否成功</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;记录前端开发步骤，此文档为同事所写。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;概况&quot;&gt;&lt;a href=&quot;#概况&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h4&gt;&lt;h5 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;方便开发人员快速的搭建前端开发环境；&lt;/li&gt;
&lt;li&gt;对nodejs、gulp有一个初步的认识；&lt;/li&gt;
&lt;li&gt;了解服务器端nodejs、gulp的安装；&lt;/li&gt;
&lt;li&gt;了解服务器端Jenkins工程发布。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&quot;Nodejs简介&quot;&gt;&lt;a href=&quot;#Nodejs简介&quot; class=&quot;headerlink&quot; title=&quot;Nodejs简介&quot;&gt;&lt;/a&gt;Nodejs简介&lt;/h5&gt;&lt;p&gt;Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm（node package manager），是全球最大的开源库生态系统。&lt;br&gt;详情请见&lt;a href=&quot;http://nodejs.cn/&quot;&gt;nodejs中文网&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;Gulp简介&quot;&gt;&lt;a href=&quot;#Gulp简介&quot; class=&quot;headerlink&quot; title=&quot;Gulp简介&quot;&gt;&lt;/a&gt;Gulp简介&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;易于使用&lt;br&gt; 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理。&lt;/li&gt;
&lt;li&gt;构建快速&lt;br&gt; 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作。&lt;/li&gt;
&lt;li&gt;插件高质&lt;br&gt; Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作。&lt;/li&gt;
&lt;li&gt;易于学习&lt;br&gt; 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道。&lt;br&gt; 详情请见&lt;a href=&quot;http://www.gulpjs.com.cn/&quot;&gt;gulp中文网&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Node.js" scheme="http://tungsing.cc/tags/Node-js/"/>
    
      <category term="Gulp" scheme="http://tungsing.cc/tags/Gulp/"/>
    
      <category term="Jenkins" scheme="http://tungsing.cc/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>项目成本管理</title>
    <link href="http://tungsing.cc/2017/03/14/pm/pcm/"/>
    <id>http://tungsing.cc/2017/03/14/pm/pcm/</id>
    <published>2017-03-14T01:49:30.804Z</published>
    <updated>2017-05-05T06:13:00.433Z</updated>
    
    <content type="html"><![CDATA[<h4 id="成本管理的基本方法"><a href="#成本管理的基本方法" class="headerlink" title="成本管理的基本方法"></a>成本管理的基本方法</h4><h5 id="成本确定-“事前”-的基本方法"><a href="#成本确定-“事前”-的基本方法" class="headerlink" title="成本确定(“事前”)的基本方法"></a>成本确定(“事前”)的基本方法</h5><ol>
<li><p>成本预测的基本方法<br>1.1 定性和定量的成本预测方法<br>1.2 成本的发展趋势预测方法<br>1.3 成本的因果预测方法</p>
</li>
<li><p>成本决策的基本方法<br>2.1 总量分析与决策的基本方法<br>2.2 增量分析与决策的基本方法<br>2.3 关联分析与决策的基本方法<br>2.4 线性规划的基本方法</p>
</li>
<li><p>成本计划的基本方法<br>3.1 周期成本计划方法(日常经营活动)<br>3.2 标准成本计划方法<br>3.3 定额成本计划方法<br>3.4 目标成本计划方法<br>3.5 作业成本计划方法</p>
</li>
</ol>
<a id="more"></a>
<h5 id="成本控制的基本方法"><a href="#成本控制的基本方法" class="headerlink" title="成本控制的基本方法"></a>成本控制的基本方法</h5><ol>
<li><p>项目合算的基本方法<br>1.1 项目活动的成本核算基本方法<br>1.2 日常运营的成本核算基本方法</p>
</li>
<li><p>成本分析的基本方法<br>2.1 成本对比分析法<br>2.2 成本因素分析法<br>2.3 成本相关分析法</p>
</li>
<li><p>成本考核的基本方法<br>3.1 传统的成本考核方法<br>3.2 现代成本考核方法</p>
</li>
</ol>
<h4 id="项目成本管理的基本方法"><a href="#项目成本管理的基本方法" class="headerlink" title="项目成本管理的基本方法"></a>项目成本管理的基本方法</h4><h5 id="项目成本确定的基本方法"><a href="#项目成本确定的基本方法" class="headerlink" title="项目成本确定的基本方法"></a>项目成本确定的基本方法</h5><ol>
<li><p>项目成本确定的过程<br>1.1 项目成本初步估算<br>1.2 项目成本设计概算<br>1.3 项目成本详细估算<br>1.4 项目成本预算</p>
</li>
<li><p>项目成本确定的方法<br>2.1 基于活动的项目成本确定基本方法<br>2.2 基于定额的项目成本确定基本方法<br>2.3 基于工料测量的项目成本确定基本方法<br>2.4 基于统计资料的项目成本确定基本方法<br>2.5 分解项目工作或活动的基本方法</p>
</li>
</ol>
<h5 id="项目成本控制的基本方法"><a href="#项目成本控制的基本方法" class="headerlink" title="项目成本控制的基本方法"></a>项目成本控制的基本方法</h5><ol>
<li>项目成本分析和预测的基本方法<br>1.1 “事前”项目成本分析与预测方法<br>1.2 “事中”项目成本分析与预测方法</li>
<li>项目成本核算的基本方法<br>2.1 企业或组织内部的项目成本核算基本方法<br>2.2 企业或组织对外的项目成本核算基本方法</li>
<li>项目成本考核的基本方法</li>
</ol>
<h5 id="项目成本控制的特性"><a href="#项目成本控制的特性" class="headerlink" title="项目成本控制的特性"></a>项目成本控制的特性</h5><ol>
<li>目的性</li>
<li>人为性</li>
<li>过程性</li>
<li>学习性</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;成本管理的基本方法&quot;&gt;&lt;a href=&quot;#成本管理的基本方法&quot; class=&quot;headerlink&quot; title=&quot;成本管理的基本方法&quot;&gt;&lt;/a&gt;成本管理的基本方法&lt;/h4&gt;&lt;h5 id=&quot;成本确定-“事前”-的基本方法&quot;&gt;&lt;a href=&quot;#成本确定-“事前”-的基本方法&quot; class=&quot;headerlink&quot; title=&quot;成本确定(“事前”)的基本方法&quot;&gt;&lt;/a&gt;成本确定(“事前”)的基本方法&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;成本预测的基本方法&lt;br&gt;1.1 定性和定量的成本预测方法&lt;br&gt;1.2 成本的发展趋势预测方法&lt;br&gt;1.3 成本的因果预测方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;成本决策的基本方法&lt;br&gt;2.1 总量分析与决策的基本方法&lt;br&gt;2.2 增量分析与决策的基本方法&lt;br&gt;2.3 关联分析与决策的基本方法&lt;br&gt;2.4 线性规划的基本方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;成本计划的基本方法&lt;br&gt;3.1 周期成本计划方法(日常经营活动)&lt;br&gt;3.2 标准成本计划方法&lt;br&gt;3.3 定额成本计划方法&lt;br&gt;3.4 目标成本计划方法&lt;br&gt;3.5 作业成本计划方法&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="项目成本管理" scheme="http://tungsing.cc/tags/%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
      <category term="Project Cost Management" scheme="http://tungsing.cc/tags/Project-Cost-Management/"/>
    
  </entry>
  
  <entry>
    <title>项目质量管理</title>
    <link href="http://tungsing.cc/2017/03/06/pm/pqm/"/>
    <id>http://tungsing.cc/2017/03/06/pm/pqm/</id>
    <published>2017-03-06T06:36:15.808Z</published>
    <updated>2017-03-07T02:04:32.015Z</updated>
    
    <content type="html"><![CDATA[<h4 id="项目质量规划"><a href="#项目质量规划" class="headerlink" title="项目质量规划"></a>项目质量规划</h4><table>
<thead>
<tr>
<th>依据</th>
<th>工具与技术</th>
<th>成果</th>
</tr>
</thead>
<tbody>
<tr>
<td>环境因素</td>
<td>成本效益分析</td>
<td>质量管理计划</td>
</tr>
<tr>
<td>组织过程资产</td>
<td>基准对照</td>
<td>质量测试指标</td>
</tr>
<tr>
<td>项目范围说明书</td>
<td>实验设计</td>
<td>质量核对表</td>
</tr>
<tr>
<td>项目管理计划</td>
<td>质量成本分析</td>
<td>过程改进计划</td>
</tr>
</tbody>
</table>
<h4 id="项目质量策划"><a href="#项目质量策划" class="headerlink" title="项目质量策划"></a>项目质量策划</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;项目质量规划&quot;&gt;&lt;a href=&quot;#项目质量规划&quot; class=&quot;headerlink&quot; title=&quot;项目质量规划&quot;&gt;&lt;/a&gt;项目质量规划&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;依据&lt;/th&gt;
&lt;th&gt;工具与技术&lt;/th&gt;
&lt;th&gt;成果&lt;/t
    
    </summary>
    
    
      <category term="Node.js" scheme="http://tungsing.cc/tags/Node-js/"/>
    
      <category term="Git" scheme="http://tungsing.cc/tags/Git/"/>
    
      <category term="项目质量管理" scheme="http://tungsing.cc/tags/%E9%A1%B9%E7%9B%AE%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86/"/>
    
      <category term="Project Quality Management" scheme="http://tungsing.cc/tags/Project-Quality-Management/"/>
    
  </entry>
  
  <entry>
    <title>用Samba搭建企业文件共享服务</title>
    <link href="http://tungsing.cc/2017/01/24/linux/linux-samba/"/>
    <id>http://tungsing.cc/2017/01/24/linux/linux-samba/</id>
    <published>2017-01-24T02:31:44.583Z</published>
    <updated>2017-03-23T03:46:27.320Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>为了tomcat集群部署的时，上传的文件不需要其他操作就可以集中管理，我们通过网络共享硬盘的方式来做，技术有NFS、Samba。用samba是考虑到可以和Windows系统进行文件共享、还有自身提供了安全认证方式。网络共享硬盘适合20-200台机器的小型项目用。</p>
</blockquote>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Samba 是 SMB/CIFS 网络协议的重新实现, 它作为 NFS 的补充使得在 Linux 和 Windows 系统中进行文件共享、打印机共享更容易实现。</p>
<a id="more"></a>
<h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><table>
<thead>
<tr>
<th>序号</th>
<th>系统</th>
<th>ip</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>Centos 6.4</td>
<td>192.168.1.100</td>
<td>Samba服务器</td>
</tr>
<tr>
<td>B</td>
<td>Centos 6.4</td>
<td>192.168.1.101</td>
<td>挂载机器</td>
</tr>
<tr>
<td>C</td>
<td>Windows 10</td>
<td>192.168.1.102</td>
<td>挂载机器</td>
</tr>
</tbody>
</table>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>在A服务器上安装Samba，安装方式有rpm、源码包、yum，此处采用yum方式安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># yum install samba</span></div></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service smb start</span></div></pre></td></tr></table></figure>
<h5 id="设置开机启动项"><a href="#设置开机启动项" class="headerlink" title="设置开机启动项"></a>设置开机启动项</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># chkconfig smb on</span></div></pre></td></tr></table></figure>
<h5 id="配置Samba"><a href="#配置Samba" class="headerlink" title="配置Samba"></a>配置Samba</h5><p>Smb服务的配置文件为/etc/samba/smb.conf，首先备份此配置文件，然后开始修改配置</p>
<h6 id="网络相关配置"><a href="#网络相关配置" class="headerlink" title="网络相关配置"></a>网络相关配置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">workgroup = WORKGROUP</div><div class="line">server string = Samba Server Version %v</div><div class="line">netbios name = TEST_SMB_SERVER</div><div class="line">interfaces = lo eth0 192.168.12.2/24 192.168.13.2/24</div><div class="line">hosts allow = 127. 192.168.1.</div></pre></td></tr></table></figure>
<p>workgroup     = Samba Server 所要加入的工作组或者域<br>server string = Samba Server 的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号<br>netbios name  = Samba Server的NetBIOS名称<br>interfaces    = Samba Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址<br>hosts allow   = 表示允许连接到Samba Server的客户端，多个参数以空格隔开</p>
<h6 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/samba/log.%m</div><div class="line"><span class="comment"># max 50KB per log file, then rotate</span></div><div class="line">max <span class="built_in">log</span> size = 50</div></pre></td></tr></table></figure>
<p>log file = 日志文件位置，在文件名后加个宏%m（主机名），表示对每台访问Samba Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba Server，就会在/var/log/samba目录下留下log.pc1和log.pc2两个日志文件。</p>
<p>maxlog size = 设置Samba Server日志文件的最大容量，单位为kB，0代表不限制。</p>
<h6 id="安全配置"><a href="#安全配置" class="headerlink" title="安全配置"></a>安全配置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">security = user</div><div class="line">passdb backend = tdbsam</div></pre></td></tr></table></figure>
<p>security = 设置用户访问Samba Server的验证方式，一共有四种验证方式。</p>
<ol>
<li>share：用户访问SambaServer不需要提供用户名和口令, 安全性能较低。</li>
<li>user：Samba Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba Server中建立。</li>
<li>server：依靠其他WindowsNT/2000或Samba Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。</li>
<li>domain：域安全级别,使用主域控制器(PDC)来完成认证。</li>
</ol>
<p>passdbbackend = passdb backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account manager（安全账户管理）的简写。</p>
<ol>
<li>smbpasswd：该方式是使用smb自己的工具smbpasswd来给系统用户（真实<br>用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问Samba的资源。smbpasswd文件默认在/etc/samba目录下，不过有时候要手工建立该文件。</li>
<li>tdbsam：该方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在/etc/samba目录下。passdb.tdb用户数据库可以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用pdbedit命令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。<br>pdbedit –a username：新建Samba账户。<br>pdbedit –x username：删除Samba账户。<br>pdbedit –L：列出Samba用户列表，读取passdb.tdb数据库文件。<br>pdbedit –Lv：列出Samba用户列表的详细信息。<br>pdbedit –c “[D]” –u username：暂停该Samba用户的账号。<br>pdbedit –c “[]” –u username：恢复该Samba用户的账号。</li>
<li>ldapsam：该方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb backend = ldapsam:ldap://LDAP Server”</li>
</ol>
<h6 id="共享设置"><a href="#共享设置" class="headerlink" title="共享设置"></a>共享设置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[<span class="built_in">test</span>]</div><div class="line">        comment = <span class="built_in">test</span> share files</div><div class="line">        path = /opt/lar/files</div><div class="line">        browseable = no</div><div class="line">        writable = yes</div><div class="line">        valid users = @root</div></pre></td></tr></table></figure>
<p>comment = comment是对该共享的描述，可以是任意字符串。<br>path = 共享目录路径<br>browseable = browseable用来指定该共享是否(yes/no)可以浏览。<br>writable = 用来指定该共享路径是否(yes/no)可写。<br>valid users = 用来指定允许访问该共享资源的用户。</p>
<p>例如：valid users = bobyuan，@bob，@tech (多个用户或者组中间用逗号隔开，如果要加入一个组就用“@+组名”表示。)</p>
<h6 id="配置文件正确性检查"><a href="#配置文件正确性检查" class="headerlink" title="配置文件正确性检查"></a>配置文件正确性检查</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># testparm -v</span></div></pre></td></tr></table></figure>
<h5 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service smb restart</span></div></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>先在C服务上测试</p>
<ol>
<li>在File Explorer 中输入\192.168.1.100\test 回车</li>
<li>输入共享文件服务的用户名密码，即可看到是否成功</li>
</ol>
<p>B服务器上测试</p>
<ol>
<li><p>首先要安装Smbclient </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># yum install samba-client</span></div></pre></td></tr></table></figure>
</li>
<li><p>访问文件服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># smbclient //192.168.1.100/test -U root </span></div><div class="line">Password:                                                                </div><div class="line">smb: \&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>输入密码后出现最后一行说明成功了</p>
<h4 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h4><p>C服务器挂载</p>
<ol>
<li>打开This pc -&gt; Computer -&gt; Map Network Drive</li>
<li>输入\192.168.1.100\test 点击确定</li>
<li>输入用户名密码</li>
</ol>
<p><img src="/images/linux/map-network-drive.jpg" alt=""></p>
<p>B服务器挂载</p>
<ol>
<li><p>安装cifs-utils</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># yum install cifs-utils</span></div></pre></td></tr></table></figure>
</li>
<li><p>直接手动挂载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># mount -t cifs -o username=&lt;username&gt;,password=&lt;password&gt; //192.168.1.100/test /mnt/dir</span></div></pre></td></tr></table></figure>
</li>
<li><p>写到/etc/fstab文件自动挂载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//192.168.1.100/<span class="built_in">test</span> /mnt/dir cifs defaults,credentials=/etc/samba/<span class="built_in">pwd</span> 0 0</div></pre></td></tr></table></figure>
</li>
</ol>
<p>/mnt/dir 为挂载点</p>
<p>/etc/samba/pwd 文件里面保存的是用户名和密码，并授予400权限，格式如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">username=root</div><div class="line">password=123456</div></pre></td></tr></table></figure></p>
<p>执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># mount -a</span></div></pre></td></tr></table></figure></p>
<ol>
<li>测试是否成功<br>查看/mut/dir 文件夹是否有文件</li>
</ol>
<h5 id="配置SELinux"><a href="#配置SELinux" class="headerlink" title="配置SELinux"></a>配置SELinux</h5><p>如果selinux开启的话,注意配置,出现的情况是可以访问但无法操作的情况</p>
<pre><code class="bash"><span class="comment">#getsebool -a|grep samba</span>
<span class="comment">#setsebool -P samba_export_all_rw on</span>
</code></pre>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://wiki.archlinux.org/index.php/Samba_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="external">Samba (简体中文)</a><br><a href="http://blog.csdn.net/younger_china/article/details/53442988" target="_blank" rel="external">Samba环境搭建</a><br><a href="http://jiangyapeng.blog.51cto.com/3491398/1561868" target="_blank" rel="external">linux下挂载</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;为了tomcat集群部署的时，上传的文件不需要其他操作就可以集中管理，我们通过网络共享硬盘的方式来做，技术有NFS、Samba。用samba是考虑到可以和Windows系统进行文件共享、还有自身提供了安全认证方式。网络共享硬盘适合20-200台机器的小型项目用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;Samba 是 SMB/CIFS 网络协议的重新实现, 它作为 NFS 的补充使得在 Linux 和 Windows 系统中进行文件共享、打印机共享更容易实现。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Samba" scheme="http://tungsing.cc/tags/Samba/"/>
    
      <category term="Linux" scheme="http://tungsing.cc/tags/Linux/"/>
    
      <category term="File Share" scheme="http://tungsing.cc/tags/File-Share/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse 中用Flex插件 BlazeDS 开发Flex web应用</title>
    <link href="http://tungsing.cc/2017/01/18/flex/flex-web/"/>
    <id>http://tungsing.cc/2017/01/18/flex/flex-web/</id>
    <published>2017-01-18T05:17:10.470Z</published>
    <updated>2017-01-19T08:37:57.437Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>这几天在搞Flex 开发，记录下开发过程，是一个总结也给和我一样的人一些帮助。</p>
</blockquote>
<h4 id="工具环境"><a href="#工具环境" class="headerlink" title="工具环境"></a>工具环境</h4><ul>
<li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="external">Eclipse Helios Release</a></li>
<li><a href="http://trials.adobe.com/AdobeProducts/FLBR/4/win32/FlashBuilder_4_Plugin_LS10.exe" target="_blank" rel="external">FlashBuilder_4_Plugin_LS10</a></li>
<li><a href="http://tomcat.apache.org/download-60.cgi" target="_blank" rel="external">Tomcat6.0.16</a></li>
<li>JDK6</li>
<li>Windows 7</li>
</ul>
<h4 id="工程建立"><a href="#工程建立" class="headerlink" title="工程建立"></a>工程建立</h4><h5 id="在eclipse中-File-–-gt-New-–-gt-Dynamic-Web-project"><a href="#在eclipse中-File-–-gt-New-–-gt-Dynamic-Web-project" class="headerlink" title="在eclipse中 File –&gt; New  –&gt; Dynamic Web project"></a>在eclipse中 File –&gt; New  –&gt; Dynamic Web project</h5><p><img src="/images/flex/1.jpg" alt=""></p>
<a id="more"></a>
<h5 id="然后点击“Next”-把“src”-Remove后添加一个“javasrc”-不改容易和flex的src混淆"><a href="#然后点击“Next”-把“src”-Remove后添加一个“javasrc”-不改容易和flex的src混淆" class="headerlink" title="然后点击“Next”  把“src” Remove后添加一个“javasrc”(不改容易和flex的src混淆)"></a>然后点击“Next”  把“src” Remove后添加一个“javasrc”(不改容易和flex的src混淆)</h5><p><img src="/images/flex/2.jpg" alt=""></p>
<h5 id="点击“Next”-把Content-directory-改成“WebRoot”-当然不改也可以-点击“Finish”"><a href="#点击“Next”-把Content-directory-改成“WebRoot”-当然不改也可以-点击“Finish”" class="headerlink" title="点击“Next”  把Content directory 改成“WebRoot”(当然不改也可以),点击“Finish”"></a>点击“Next”  把Content directory 改成“WebRoot”(当然不改也可以),点击“Finish”</h5><p><img src="/images/flex/3.jpg" alt=""></p>
<h5 id="把blazeds-spring中的文件拷入项目的WebRoot下"><a href="#把blazeds-spring中的文件拷入项目的WebRoot下" class="headerlink" title="把blazeds-spring中的文件拷入项目的WebRoot下"></a>把blazeds-spring中的文件拷入项目的WebRoot下</h5><p><a href="http://opensource.adobe.com/wiki/display/blazeds/BlazeDS" target="_blank" rel="external">blazeds.war</a></p>
<p><img src="/images/flex/4.jpg" alt=""></p>
<h5 id="然后在WebRoot-下新建一个index-html-并且把classes的路径修改一下那个buid文件夹就可以删除掉了"><a href="#然后在WebRoot-下新建一个index-html-并且把classes的路径修改一下那个buid文件夹就可以删除掉了" class="headerlink" title="然后在WebRoot 下新建一个index.html,并且把classes的路径修改一下那个buid文件夹就可以删除掉了"></a>然后在WebRoot 下新建一个index.html,并且把classes的路径修改一下那个buid文件夹就可以删除掉了</h5><p><img src="/images/flex/5.jpg" alt=""></p>
<h5 id="项目右键-Run-As-–-gt-Run-on-Server-选择tomcat就ok"><a href="#项目右键-Run-As-–-gt-Run-on-Server-选择tomcat就ok" class="headerlink" title="项目右键 Run As –&gt; Run on Server  选择tomcat就ok"></a>项目右键 Run As –&gt; Run on Server  选择tomcat就ok</h5><h5 id="没有错误的情况下项目右键-添加-更改项目类型-—-添加Flex项目类型-直接下一步，完成就可以"><a href="#没有错误的情况下项目右键-添加-更改项目类型-—-添加Flex项目类型-直接下一步，完成就可以" class="headerlink" title="没有错误的情况下项目右键 添加/更改项目类型  — 添加Flex项目类型  直接下一步，完成就可以"></a>没有错误的情况下项目右键 添加/更改项目类型  — 添加Flex项目类型  直接下一步，完成就可以</h5><p>ps:(如果前边没配置flex sdk的话 按提示配置一下就可以),此时项目会有个错误,选中右键 创建html模板  就可以解决</p>
<p><img src="/images/flex/6.jpg" alt=""></p>
<h5 id="项目右键-Properties-–-gt-flex-服务器-配置如图"><a href="#项目右键-Properties-–-gt-flex-服务器-配置如图" class="headerlink" title="项目右键 Properties –&gt; flex 服务器  配置如图"></a>项目右键 Properties –&gt; flex 服务器  配置如图</h5><p><img src="/images/flex/7.jpg" alt=""></p>
<h5 id="新建一个名字为HelloWordService的java类"><a href="#新建一个名字为HelloWordService的java类" class="headerlink" title="新建一个名字为HelloWordService的java类"></a>新建一个名字为HelloWordService的java类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.dome.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.flex.remoting.RemotingDestination;</div><div class="line"><span class="keyword">import</span> org.springframework.flex.remoting.RemotingInclude;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="meta">@Service</span>(<span class="string">"HelloWordService"</span>)</div><div class="line"><span class="meta">@RemotingDestination</span>(channels=&#123;<span class="string">"my-amf"</span>&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWordService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@RemotingInclude</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"HelloWord!"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="修改web-xml-把rds的注释去掉并把true改为false"><a href="#修改web-xml-把rds的注释去掉并把true改为false" class="headerlink" title="修改web.xml,把rds的注释去掉并把true改为false"></a>修改web.xml,把rds的注释去掉并把true改为false</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- begin rds --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RDSDispatchServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>RDSDispatchServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>flex.rds.server.servlet.FrontEndServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>useAppserverSecurity<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>messageBrokerId<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>_messageBroker<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>10<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span> <span class="attr">id</span>=<span class="string">"RDS_DISPATCH_MAPPING"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RDSDispatchServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CFIDE/main/ide.cfm<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- end rds --&gt;</span></div></pre></td></tr></table></figure>
<h5 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a>启动tomcat</h5><h5 id="点击-数据-服务-面板的-“连接数据-服务”"><a href="#点击-数据-服务-面板的-“连接数据-服务”" class="headerlink" title="点击 数据/服务 面板的 “连接数据/服务”"></a>点击 数据/服务 面板的 “连接数据/服务”</h5><p><img src="/images/flex/8.jpg" alt="">  </p>
<h5 id="然后再弹出的窗口中选择BlazeDS-S-–-gt-Next-–-gt-选不需要密码-–-gt-ok"><a href="#然后再弹出的窗口中选择BlazeDS-S-–-gt-Next-–-gt-选不需要密码-–-gt-ok" class="headerlink" title="然后再弹出的窗口中选择BlazeDS S –&gt; Next –&gt; 选不需要密码- –&gt;ok"></a>然后再弹出的窗口中选择BlazeDS S –&gt; Next –&gt; 选不需要密码- –&gt;ok</h5><p>选择刚才发布的服务，完成</p>
<p><img src="/images/flex/9.jpg" alt=""> </p>
<h5 id="在helloWordDome-mxml设计视图下右键-点击“生成服务调用”-选择ok"><a href="#在helloWordDome-mxml设计视图下右键-点击“生成服务调用”-选择ok" class="headerlink" title="在helloWordDome.mxml设计视图下右键 点击“生成服务调用”    选择ok"></a>在helloWordDome.mxml设计视图下右键 点击“生成服务调用”    选择ok</h5><h5 id="添加一个Button组件，右键生成click处理函数"><a href="#添加一个Button组件，右键生成click处理函数" class="headerlink" title="添加一个Button组件，右键生成click处理函数"></a>添加一个Button组件，右键生成click处理函数</h5><h5 id="切换到源码视图找到标签添加endpoint属性"><a href="#切换到源码视图找到标签添加endpoint属性" class="headerlink" title="切换到源码视图找到标签添加endpoint属性"></a>切换到源码视图找到<services:hellowordservice>标签添加endpoint属性</services:hellowordservice></h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">services:HelloWordService</span> <span class="attr">id</span>=<span class="string">"helloWordService"</span> <span class="attr">fault</span>=<span class="string">"Alert.show(event.fault.faultString + </span></span></div><div class="line">        '\n' + event.fault.faultDetail)"</div><div class="line">        <span class="attr">showBusyCursor</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">endpoint</span>=<span class="string">"&#123;&amp;apos;http://&#123;server.name&#125;:&#123;server.port&#125;/helloWordDome/messagebroker/amf&amp;apos;&#125;"</span>/&gt;</div></pre></td></tr></table></figure>
<h5 id="在click函数里处理后台传来的数据"><a href="#在click函数里处理后台传来的数据" class="headerlink" title="在click函数里处理后台传来的数据"></a>在click函数里处理后台传来的数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">protected function button1_clickHandler(event:MouseEvent):void</div><div class="line">            &#123;</div><div class="line">                Alert.show(sayHelloResult.lastResult);</div><div class="line">            &#125;</div></pre></td></tr></table></figure>
<h5 id="右键-Run-As-–-web应用程序，在页面上点击按钮-弹出HelloWord！-说明成功了"><a href="#右键-Run-As-–-web应用程序，在页面上点击按钮-弹出HelloWord！-说明成功了" class="headerlink" title="右键 Run As – web应用程序，在页面上点击按钮 弹出HelloWord！ 说明成功了"></a>右键 Run As – web应用程序，在页面上点击按钮 弹出HelloWord！ 说明成功了</h5><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>有不对的地方欢迎指正！！！<br><a href="http://dl.iteye.com/topics/download/fdd40a53-3c0e-30c0-86d3-69bd757e52f7" target="_blank" rel="external">helloWordDome.rar (2.3 MB)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这几天在搞Flex 开发，记录下开发过程，是一个总结也给和我一样的人一些帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;工具环境&quot;&gt;&lt;a href=&quot;#工具环境&quot; class=&quot;headerlink&quot; title=&quot;工具环境&quot;&gt;&lt;/a&gt;工具环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/downloads/&quot;&gt;Eclipse Helios Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://trials.adobe.com/AdobeProducts/FLBR/4/win32/FlashBuilder_4_Plugin_LS10.exe&quot;&gt;FlashBuilder_4_Plugin_LS10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tomcat.apache.org/download-60.cgi&quot;&gt;Tomcat6.0.16&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JDK6&lt;/li&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;工程建立&quot;&gt;&lt;a href=&quot;#工程建立&quot; class=&quot;headerlink&quot; title=&quot;工程建立&quot;&gt;&lt;/a&gt;工程建立&lt;/h4&gt;&lt;h5 id=&quot;在eclipse中-File-–-gt-New-–-gt-Dynamic-Web-project&quot;&gt;&lt;a href=&quot;#在eclipse中-File-–-gt-New-–-gt-Dynamic-Web-project&quot; class=&quot;headerlink&quot; title=&quot;在eclipse中 File –&amp;gt; New  –&amp;gt; Dynamic Web project&quot;&gt;&lt;/a&gt;在eclipse中 File –&amp;gt; New  –&amp;gt; Dynamic Web project&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/flex/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Eclipse" scheme="http://tungsing.cc/tags/Eclipse/"/>
    
      <category term="Flex" scheme="http://tungsing.cc/tags/Flex/"/>
    
      <category term="Java" scheme="http://tungsing.cc/tags/Java/"/>
    
      <category term="JDK" scheme="http://tungsing.cc/tags/JDK/"/>
    
      <category term="Tomcat" scheme="http://tungsing.cc/tags/Tomcat/"/>
    
      <category term="Web" scheme="http://tungsing.cc/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>用JDK自带的keytool工具生成安全证书</title>
    <link href="http://tungsing.cc/2017/01/18/java/jdk-cs/"/>
    <id>http://tungsing.cc/2017/01/18/java/jdk-cs/</id>
    <published>2017-01-18T04:59:34.020Z</published>
    <updated>2017-06-08T03:32:22.460Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>JDK6</li>
<li>Windows</li>
<li>Tomcat 6.35</li>
</ul>
<h4 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -genkey -alias tomcat -keypass tomcat -keyalg RSA -keystore tomcat.keystore</div></pre></td></tr></table></figure>
<p><img src="/images/java/jdk-ca.jpg" alt=""></p>
<p>ps：keystore密码要和-keypass密码保持一致</p>
<h4 id="导出证书"><a href="#导出证书" class="headerlink" title="导出证书"></a>导出证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -export -file tomcat.crt -alias tomcat -keypass tomcat -keystore tomcat.keystore</div></pre></td></tr></table></figure>
<p><img src="/images/java/jdk-ca-export.jpg" alt=""></p>
<h4 id="为客户端JVM导入证书"><a href="#为客户端JVM导入证书" class="headerlink" title="为客户端JVM导入证书"></a>为客户端JVM导入证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -import -file E:\keys\tomcat.crt -keypass tomcat -alias tomcat -keystore <span class="string">"cacerts"</span></div></pre></td></tr></table></figure>
<p><img src="/images/java/jdk-ca-import.jpg" alt=""></p>
<p>ps:此处keystore的密码要输入：changeit 不然会报错</p>
<h4 id="应用证书到web容器-tomcat"><a href="#应用证书到web容器-tomcat" class="headerlink" title="应用证书到web容器- tomcat"></a>应用证书到web容器- tomcat</h4><p>打开tomcat目录的conf/server.xml文件，开启83和87行的注释代码，并设置keystoreFile、keystorePass修改结果如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8443"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span></span></div><div class="line">               <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></div><div class="line">               <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span> <span class="attr">keystoreFile</span>=<span class="string">"E:/keys/tomcat.keystore"</span> <span class="attr">keystorePass</span>=<span class="string">"tomcat"</span>/&gt;</div></pre></td></tr></table></figure>
<p> 启动tomcat，访问<a href="https://localhost:8443/出现此页面说明成功" target="_blank" rel="external">https://localhost:8443/出现此页面说明成功</a></p>
<p> <img src="/images/java/jdk-ca-view.jpg" alt=""></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p> <a href="http://www.kafeitu.me/sso/2010/11/05/sso-cas-full-course.html" target="_blank" rel="external">http://www.kafeitu.me/sso/2010/11/05/sso-cas-full-course.html</a><br> <a href="http://www.cnblogs.com/wen12128/archive/2010/10/11/1848076.html" target="_blank" rel="external">http://www.cnblogs.com/wen12128/archive/2010/10/11/1848076.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;JDK6&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Tomcat 6.35&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;创建
    
    </summary>
    
    
      <category term="Java" scheme="http://tungsing.cc/tags/Java/"/>
    
      <category term="JDK" scheme="http://tungsing.cc/tags/JDK/"/>
    
      <category term="CA" scheme="http://tungsing.cc/tags/CA/"/>
    
  </entry>
  
  <entry>
    <title>用Markdown来写博客文章</title>
    <link href="http://tungsing.cc/2017/01/18/hexo-markdown/"/>
    <id>http://tungsing.cc/2017/01/18/hexo-markdown/</id>
    <published>2017-01-18T02:54:42.765Z</published>
    <updated>2017-01-18T03:27:55.905Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>所有的准备工作都完成了，接下来开始我们的写文章之旅吧</p>
</blockquote>
<h4 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h4><p>首先我们简单了解一下什么<a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="external">Makrdown</a></p>
<h4 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h4><p>这里就不详细介绍了，可以参考</p>
<p><a href="https://segmentfault.com/markdown" target="_blank" rel="external">Markdown 编辑器语法指南</a></p>
<a id="more"></a>
<h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>用Markdown写文章前，我们还需要找个适合我们写作的工具，工欲善其事必先利其器吗！工具有很多下面简单列举一下</p>
<p>Windows下有<br><a href="http://www.markdownpad.com/" target="_blank" rel="external">MarkdownPad</a></p>
<p>Mac下有<br><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a>,据说是国人制作的一款非常优秀的软件。</p>
<p>我用的是<a href="https://www.sublimetext.com/" target="_blank" rel="external">Sublime</a>+MarkdownEnding插件，windows和mac都有</p>
<h4 id="用Markdown写文章"><a href="#用Markdown写文章" class="headerlink" title="用Markdown写文章"></a>用Markdown写文章</h4><ol>
<li>在\Hexo\source_posts 文件夹下新建.md格式的文件，用sublime打开就可以编写了</li>
<li><p>执行下面命令就可以在编写的时候实时预览自己写的文章</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo -p 9000 server</div></pre></td></tr></table></figure>
</li>
<li><p>如何把写好的文章发布出去呢，执行下面的命令即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>这就是写文章的全部过程了，后边要做的是让精美的文章来丰富我们的博客。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;所有的准备工作都完成了，接下来开始我们的写文章之旅吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Markdown&quot;&gt;&lt;a href=&quot;#Markdown&quot; class=&quot;headerlink&quot; title=&quot;Markdown&quot;&gt;&lt;/a&gt;Markdown&lt;/h4&gt;&lt;p&gt;首先我们简单了解一下什么&lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot;&gt;Makrdown&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Markdown语法&quot;&gt;&lt;a href=&quot;#Markdown语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown语法&quot;&gt;&lt;/a&gt;Markdown语法&lt;/h4&gt;&lt;p&gt;这里就不详细介绍了，可以参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/markdown&quot;&gt;Markdown 编辑器语法指南&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://tungsing.cc/tags/Hexo/"/>
    
      <category term="markdown" scheme="http://tungsing.cc/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>美化自己的博客</title>
    <link href="http://tungsing.cc/2017/01/17/hexo-themes/"/>
    <id>http://tungsing.cc/2017/01/17/hexo-themes/</id>
    <published>2017-01-17T05:25:39.999Z</published>
    <updated>2017-01-18T02:48:15.535Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>自己的第一个博客已经运行起来了，但界面简单、单一，我们需要美化一下自己的博客，以下是美化的过程。</p>
</blockquote>
<h4 id="进入Hexo的官网主题专栏"><a href="#进入Hexo的官网主题专栏" class="headerlink" title="进入Hexo的官网主题专栏"></a>进入Hexo的<a href="https://hexo.io/themes/" target="_blank" rel="external">官网</a>主题专栏</h4><p><img src="/images/8.jpg" alt=""></p>
<h4 id="挑选自己喜欢的主题"><a href="#挑选自己喜欢的主题" class="headerlink" title="挑选自己喜欢的主题"></a>挑选自己喜欢的主题</h4><p>可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">hexo-theme-next</a>这个主题)</p>
<a id="more"></a>
<p><img src="/images/9.jpg" alt=""></p>
<h4 id="克隆主题"><a href="#克隆主题" class="headerlink" title="克隆主题"></a>克隆主题</h4><p>再打开Hexo文件夹下的themes目录（F:\Blog\hexo\themes），右键Git Bash，在命令行输入:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next(此处地址替换成你需要使用的主题的地址)</div></pre></td></tr></table></figure>
<p>回车等待下载完成即可。</p>
<h4 id="修改Hexo配置文件"><a href="#修改Hexo配置文件" class="headerlink" title="修改Hexo配置文件"></a>修改Hexo配置文件</h4><p>打开Hexo文件夹下的配置文件_config.yml，修改参数为：theme: hexo-theme-next</p>
<h4 id="预览效果"><a href="#预览效果" class="headerlink" title="预览效果"></a>预览效果</h4><p>在命令窗口hexo目录下执行,就可以看到效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo -p 9000 server</div></pre></td></tr></table></figure></p>
<p><img src="/images/18.png" alt=""></p>
<h4 id="定制自己的博客"><a href="#定制自己的博客" class="headerlink" title="定制自己的博客"></a>定制自己的博客</h4><p>根据主题的说明<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">文档</a>，配置自己的博客内容。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;自己的第一个博客已经运行起来了，但界面简单、单一，我们需要美化一下自己的博客，以下是美化的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;进入Hexo的官网主题专栏&quot;&gt;&lt;a href=&quot;#进入Hexo的官网主题专栏&quot; class=&quot;headerlink&quot; title=&quot;进入Hexo的官网主题专栏&quot;&gt;&lt;/a&gt;进入Hexo的&lt;a href=&quot;https://hexo.io/themes/&quot;&gt;官网&lt;/a&gt;主题专栏&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;挑选自己喜欢的主题&quot;&gt;&lt;a href=&quot;#挑选自己喜欢的主题&quot; class=&quot;headerlink&quot; title=&quot;挑选自己喜欢的主题&quot;&gt;&lt;/a&gt;挑选自己喜欢的主题&lt;/h4&gt;&lt;p&gt;可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;hexo-theme-next&lt;/a&gt;这个主题)&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://tungsing.cc/tags/Hexo/"/>
    
      <category term="themes" scheme="http://tungsing.cc/tags/themes/"/>
    
  </entry>
  
  <entry>
    <title>记录Windows 系统安装mysql数据库</title>
    <link href="http://tungsing.cc/2017/01/16/mysql/mysql-install/"/>
    <id>http://tungsing.cc/2017/01/16/mysql/mysql-install/</id>
    <published>2017-01-16T08:50:12.667Z</published>
    <updated>2017-01-17T02:58:27.395Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>Windows10 操作系统</li>
<li>mysql 安装包</li>
</ul>
<h4 id="下载mysql安装包"><a href="#下载mysql安装包" class="headerlink" title="下载mysql安装包"></a>下载mysql安装包</h4><p>在<a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="external">官网</a>下载社区版。本文安装的是mysql5.6。<br><img src="/images/mysql/14.jpg" alt=""></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="直接双击运行即可"><a href="#直接双击运行即可" class="headerlink" title="直接双击运行即可"></a>直接双击运行即可</h5><p><img src="/images/mysql/1.jpg" alt=""></p>
<a id="more"></a>
<h5 id="根据情况选择安装类型"><a href="#根据情况选择安装类型" class="headerlink" title="根据情况选择安装类型"></a>根据情况选择安装类型</h5><p><img src="/images/mysql/2.jpg" alt=""><br>这个地方需要注意的是，如果要自定义安装和数据路径，一定要选择自定义选项。</p>
<h5 id="根据自己的情况选择选择产品和功能"><a href="#根据自己的情况选择选择产品和功能" class="headerlink" title="根据自己的情况选择选择产品和功能"></a>根据自己的情况选择选择产品和功能</h5><p><img src="/images/mysql/3.jpg" alt=""></p>
<h5 id="选择自定义的安装和数据路径"><a href="#选择自定义的安装和数据路径" class="headerlink" title="选择自定义的安装和数据路径"></a>选择自定义的安装和数据路径</h5><p><img src="/images/mysql/4.jpg" alt=""><br><img src="/images/mysql/5.jpg" alt=""></p>
<h5 id="检查要求时直接点击执行按钮即，执行完成点击下一步"><a href="#检查要求时直接点击执行按钮即，执行完成点击下一步" class="headerlink" title="检查要求时直接点击执行按钮即，执行完成点击下一步"></a>检查要求时直接点击执行按钮即，执行完成点击下一步</h5><p><img src="/images/mysql/6.jpg" alt=""></p>
<h5 id="接下来就是真正的安装了，点击执行"><a href="#接下来就是真正的安装了，点击执行" class="headerlink" title="接下来就是真正的安装了，点击执行"></a>接下来就是真正的安装了，点击执行</h5><p><img src="/images/mysql/7.jpg" alt=""></p>
<h5 id="点击下一步进行配数据库配置"><a href="#点击下一步进行配数据库配置" class="headerlink" title="点击下一步进行配数据库配置"></a>点击下一步进行配数据库配置</h5><p><img src="/images/mysql/8.jpg" alt=""></p>
<ol>
<li>配置服务器类型和网络<br><img src="/images/mysql/9.jpg" alt=""></li>
<li>配置账户和角色<br><img src="/images/mysql/10.jpg" alt=""></li>
<li>配置访问数据库权限<br><img src="/images/mysql/11.jpg" alt=""></li>
<li>配置Windows服务<br><img src="/images/mysql/12.jpg" alt=""></li>
</ol>
<h5 id="点击执行应用服务器配置"><a href="#点击执行应用服务器配置" class="headerlink" title="点击执行应用服务器配置"></a>点击执行应用服务器配置</h5><p><img src="/images/mysql/13.jpg" alt=""></p>
<h5 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h5><ol>
<li>打开命令窗口，输入密码<br><img src="/images/mysql/15.jpg" alt=""></li>
<li>选择test数据库，操作正常，说明我们安装成功了。<br><img src="/images/mysql/16.jpg" alt=""></li>
</ol>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>本文记录了最简单的安装过程，适用于学习mysql初期使用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Windows10 操作系统&lt;/li&gt;
&lt;li&gt;mysql 安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;下载mysql安装包&quot;&gt;&lt;a href=&quot;#下载mysql安装包&quot; class=&quot;headerlink&quot; title=&quot;下载mysql安装包&quot;&gt;&lt;/a&gt;下载mysql安装包&lt;/h4&gt;&lt;p&gt;在&lt;a href=&quot;https://dev.mysql.com/downloads/mysql/5.6.html#downloads&quot;&gt;官网&lt;/a&gt;下载社区版。本文安装的是mysql5.6。&lt;br&gt;&lt;img src=&quot;/images/mysql/14.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;h5 id=&quot;直接双击运行即可&quot;&gt;&lt;a href=&quot;#直接双击运行即可&quot; class=&quot;headerlink&quot; title=&quot;直接双击运行即可&quot;&gt;&lt;/a&gt;直接双击运行即可&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/mysql/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mysql" scheme="http://tungsing.cc/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://tungsing.cc/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>基于Hexo 和 Github Pages 免费搭建自己的博客</title>
    <link href="http://tungsing.cc/2017/01/13/hexo-github/"/>
    <id>http://tungsing.cc/2017/01/13/hexo-github/</id>
    <published>2017-01-13T12:45:18.512Z</published>
    <updated>2017-01-17T02:58:25.189Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>很久前就有一个计划要搭建一个属于自己的博客，但一直瞎忙，没完成。终于在2017年初发现了十分方便的搭建博客的方式，本文是第一篇文章，也是介绍搭建过程的文章。</p>
</blockquote>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li>Windows 系统</li>
<li>Node.js</li>
<li>Hexo</li>
<li>Git</li>
<li>Github</li>
<li>一个属于自己的域名</li>
</ul>
<h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>在 Windows 环境下安装 Node.js 非常简单，仅须到<a href="https://nodejs.org/en/download/" target="_blank" rel="external">官网下载</a>安装文件并执行即可完成安装。<br><img src="/images/1.jpg" alt=""><br>下载完成直接双击安装即可。</p>
<a id="more"></a>
<h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h5 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h5><p>打开window命令窗口执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h5 id="Hexo初始化配置"><a href="#Hexo初始化配置" class="headerlink" title="Hexo初始化配置"></a>Hexo初始化配置</h5><p>根据自己喜好建立目录（如F:\Blog\Hexo），通过windows命令窗口进入F:\Blog\Hexo，执行以下操作。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>安装 Hexo 完成后，Hexo 将会在指定文件夹中新建所需要的文件。Hexo文件夹下的目录如下：<br><img src="/images/3.jpg" alt=""></p>
<p>执行下面语句，执行完即可在浏览器中输入<a href="http://localhost:9000/" target="_blank" rel="external">http://localhost:9000/</a> 查看效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div><div class="line">$ hexo -p 9000 server</div></pre></td></tr></table></figure></p>
<p>效果如下： </p>
<p><img src="/images/17.png" alt=""></p>
<h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>下载 <a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a> 并执行即可完成安装。(上官网要翻墙)</p>
<p><img src="/images/2.jpg" alt=""></p>
<p>还有其他安装方式，这就不一一介绍了。</p>
<h4 id="将博客部署到Github-Pages上"><a href="#将博客部署到Github-Pages上" class="headerlink" title="将博客部署到Github Pages上"></a>将博客部署到Github Pages上</h4><p>那么现在本地的博客已经搭建起来了，但是我们只可以通过本地连接查看我们的博客。那么我们现在需要做的就是把本地的博客发布到服务器上，让别人也可以连接我们的博客，而Github Pages就帮我完成了这件事情。但是Github Pages的代码就是寄存在Github上面的。那么接下来我们需要在Github上面创建一个新的项目。</p>
<h5 id="注册Github账户"><a href="#注册Github账户" class="headerlink" title="注册Github账户"></a>注册Github账户</h5><p>1.访问<a href="https://github.com/" target="_blank" rel="external">Github</a>首页<br>2.点击右上角的 Sign Up，注册自己的账户</p>
<h5 id="创建项目代码库"><a href="#创建项目代码库" class="headerlink" title="创建项目代码库"></a>创建项目代码库</h5><p>1.注册完登陆后，我们就创建一个我们自己的Github Pages项目。点击New repository。<br>2.创建要点如下：</p>
<p><img src="/images/4.png" alt=""></p>
<h5 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h5><p>配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。操作如下：<br>1.桌面右键-&gt;Git Gui Here。<br><img src="/images/5.jpg" alt=""><br>2.在打开的窗口打开Help-&gt;Show SSH Key，如果没有，生成一个即可。<br><img src="/images/6.jpg" alt=""><br>3.登陆GitHub,进入你的Account Settings.添加你的公钥<br><img src="/images/8.png" alt=""><br>4.选择SSH Keys<br><img src="/images/9.png" alt=""><br>5.粘贴密钥，添加即可<br><img src="/images/10.png" alt=""><br>6.桌面右键-&gt;Git Bash Here,输入下面的命令，看看设置是否成功，git@github.com的部分不要修改<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<h5 id="将本地的Hexo文件更新到Github的库中"><a href="#将本地的Hexo文件更新到Github的库中" class="headerlink" title="将本地的Hexo文件更新到Github的库中"></a>将本地的Hexo文件更新到Github的库中</h5><p>1.登录Github打开自己的项目 username.github.io<br><img src="/images/11.png" alt=""><br>2.打开之后，点击HTTPS，选择HTTPS类型地址<br><img src="/images/12.png" alt=""><br>3.复制地址<br><img src="/images/13.png" alt=""><br>4.打开你一开始创建的Hexo文件夹（如F:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml文件<br><img src="/images/14.png" alt=""><br>5.在配置文件里作如下修改，保存<br><img src="/images/15.png" alt=""><br>6.在本地目录执行如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure></p>
<p>执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io。<br>7.在浏览器上输入自己的主页地址,username.github.io就可以访问自己的博客了</p>
<h4 id="将自己的域名关联到Github-Pages上"><a href="#将自己的域名关联到Github-Pages上" class="headerlink" title="将自己的域名关联到Github Pages上"></a>将自己的域名关联到Github Pages上</h4><p>1.获取ip地址<br><img src="/images/ip.png" alt=""><br>2.<a href="http://access.enom.com" target="_blank" rel="external">登陆ENOM域名的独立管理面板</a><br>3.配置ip<br><img src="/images/16.jpg" alt=""><br>4.将IP输入过去即可。等待生效，最迟72小时生效。即可通过你的域名浏览你的博客主页。</p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>这才完成了第一步，后边找时间写一下美化自己的博客和如何用Markdown写博客</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="external">小白独立搭建博客–Github Pages和Hexo简明教程</a><br>2.<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo 文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;很久前就有一个计划要搭建一个属于自己的博客，但一直瞎忙，没完成。终于在2017年初发现了十分方便的搭建博客的方式，本文是第一篇文章，也是介绍搭建过程的文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Windows 系统&lt;/li&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;Hexo&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;Github&lt;/li&gt;
&lt;li&gt;一个属于自己的域名&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;安装Node-js&quot;&gt;&lt;a href=&quot;#安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装Node.js&quot;&gt;&lt;/a&gt;安装Node.js&lt;/h4&gt;&lt;p&gt;在 Windows 环境下安装 Node.js 非常简单，仅须到&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;官网下载&lt;/a&gt;安装文件并执行即可完成安装。&lt;br&gt;&lt;img src=&quot;/images/1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;下载完成直接双击安装即可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://tungsing.cc/tags/Hexo/"/>
    
      <category term="Github Pages" scheme="http://tungsing.cc/tags/Github-Pages/"/>
    
      <category term="Node.js" scheme="http://tungsing.cc/tags/Node-js/"/>
    
      <category term="Git" scheme="http://tungsing.cc/tags/Git/"/>
    
  </entry>
  
</feed>
